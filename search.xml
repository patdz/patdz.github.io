<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS7日志</title>
      <link href="2023/10/13/centos7-ri-zhi/"/>
      <url>2023/10/13/centos7-ri-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="日志归档"><a href="#日志归档" class="headerlink" title="日志归档"></a>日志归档</h2><p>文件 <code>/etc/logrotate.d/cs-z</code> 内容如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/var/log/timetablebe.log/var/log/auto-fb-monitor.log/var/log/super-pass.log/var/log/wechat-robot.log/var/log/pass-getter.log<span class="token punctuation">{</span>    daily    rotate <span class="token number">3</span>    size 1M    missingok    notifempty    compress    delaycompress    sharedscripts    postrotate        systemctl restart rsyslog.service <span class="token operator">&gt;</span> /dev/null    endscript<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其<code>cron</code>脚本位置<code>cat /etc/cron.daily/logrotate</code></p>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log </tag>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2023/10/13/mongo/"/>
      <url>2023/10/13/mongo/</url>
      
        <content type="html"><![CDATA[<h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><ul><li><p><code>db.test.createIndex({“name”:1},{“unique”:true,“partialFilterExpression”:{“name”:{“$exists”:true}}})</code></p><blockquote><p><code>partialFilterExpression</code> 仅为那些有 <code>name</code>存在字段的文档创建唯一索引.如果一个键不存在，那么索引会将其作为 null 存储。这意味着如果对某个键创建了唯一索引并试图插入多个缺少该索引键的文档，那么会因为集合中已经存在了一个该索引键值为null 的文档而导致插入失败.大小超过 8KB 的键不会受到唯一索引的约束：比如，你可以插入多个相同的 8KB字符串(没经过验证)</p></blockquote></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="2023/10/13/git/"/>
      <url>2023/10/13/git/</url>
      
        <content type="html"><![CDATA[<ul><li><code>go env -w GOPRIVATE="github.com/one-piece-official,github.com/one-piece-official,github.com/jiuzhou-zhao"</code></li><li><code>git config --global --add url."git@github.com:".insteadOf "https://github.com/"</code></li><li><code>git config --global url."ssh://git@".insteadof "https://"</code> # go mod 使用这个更通用一些</li></ul><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="基于提交记录建立分支"><a href="#基于提交记录建立分支" class="headerlink" title="基于提交记录建立分支"></a>基于提交记录建立分支</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout -b develop e97c1e01<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="分支重命名-还没有推送到远程"><a href="#分支重命名-还没有推送到远程" class="headerlink" title="分支重命名**(还没有推送到远程)**"></a>分支重命名**(还没有推送到远程)**</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -m oldName newName<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="分支重命名"><a href="#分支重命名" class="headerlink" title="分支重命名"></a>分支重命名</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 本次重命名</span><span class="token function">git</span> branch -m oldName newName<span class="token comment"># 删除远程分支</span><span class="token function">git</span> push --delete origin oldName<span class="token comment"># 上传</span><span class="token function">git</span> push origin newName<span class="token comment"># 关联</span><span class="token function">git</span> branch --set-upstream-to origin/newName<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改已经提交的email"><a href="#修改已经提交的email" class="headerlink" title="修改已经提交的email"></a>修改已经提交的email</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token comment">#</span> <span class="token function">git</span> filter-branch --force --env-filter <span class="token string">'    if [ "<span class="token variable">$GIT_COMMITTER_EMAIL</span>" = "zz@cc.com" ];    then        GIT_COMMITTER_NAME="zz";        GIT_COMMITTER_EMAIL="aa@qq.com";        GIT_AUTHOR_NAME="zz";        GIT_AUTHOR_EMAIL="aa@qq.com";    fi'</span> -- --all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置用户名和邮箱"><a href="#设置用户名和邮箱" class="headerlink" title="设置用户名和邮箱"></a>设置用户名和邮箱</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name yxibng<span class="token function">git</span> config --global user.email yxibng@gmail.com<span class="token function">git</span> config --local user.name xxx<span class="token function">git</span> config --local user.email xxx@xxx.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置文件路径"><a href="#配置文件路径" class="headerlink" title="配置文件路径"></a>配置文件路径</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># local</span>~/.gitconfig<span class="token comment"># global</span><span class="token variable">$Project_dir</span>/.git/config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除本地tag</span><span class="token function">git</span> tag -d v1.0.1<span class="token comment"># 删除远端tag</span><span class="token function">git</span> push origin :refs/tags/v1.0.0<span class="token function">git</span> tag -a tag_v1.0.0 3af6e6e<span class="token function">git</span> tag v0.0.1<span class="token function">git</span> tag -l<span class="token function">git</span> push origin --tags<span class="token comment"># git checkout v1.0.0</span><span class="token function">git</span> checkout -b v1.0.0 tag_v1.0.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改已经提交的记录"><a href="#修改已经提交的记录" class="headerlink" title="修改已经提交的记录"></a>修改已经提交的记录</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">1</span>. 几种方法任选一种<span class="token function">git</span> rebase -i ffc21e <span class="token comment"># 修改 ffc21e 之后的记录</span><span class="token function">git</span> rebase -i --root <span class="token comment"># 修改第一条记录</span><span class="token function">git</span> rebase -i HEAD~3 <span class="token comment"># 修改当前版本的近三条记录</span><span class="token number">2</span>. 修改记录之前的“pick”修改为“edit”<span class="token number">3</span>. 修改真正的文件<span class="token number">4</span>. commit提交<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token comment"># 如果删除就git rm xxx</span><span class="token function">git</span> commit --amend<span class="token number">5</span>. 继续rebase<span class="token function">git</span> rebase --continue<span class="token number">6</span>. 强制提交<span class="token function">git</span> pull --rebase origin main <span class="token comment"># 或master，视远程分支名字而定</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://zhuanlan.zhihu.com/p/42362684">https://zhuanlan.zhihu.com/p/42362684</a></p></blockquote><h2 id="Host-key-verification-failed"><a href="#Host-key-verification-failed" class="headerlink" title="Host key verification failed."></a>Host key verification failed.</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keyscan -t rsa github.com <span class="token operator">&gt;&gt;</span> ~/.ssh/known_hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Windows换行"><a href="#Windows换行" class="headerlink" title="Windows换行"></a>Windows换行</h2><pre class="line-numbers language-none"><code class="language-none">git config --global core.autocrlf input命git config core.autocrlf例如远端LF与windows电脑CRLF：true情况下，远端-&gt;本地，LF-&gt;CRLF，本地-&gt;远端，CRLF-&gt;LFfalse情况下，远端-&gt;本地，LF-&gt;LF，本地-&gt;远端，CRLF-&gt;CRLFinput情况下，远端-&gt;本地，LF-&gt;LF，本地-&gt;远端，CRLF-&gt;LF综上所述，对于这个例子，所以配置成input是最好的选择。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Docker设置代理</title>
      <link href="2023/07/17/docker-proxy/"/>
      <url>2023/07/17/docker-proxy/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker-Desktop"><a href="#Docker-Desktop" class="headerlink" title="Docker Desktop"></a>Docker Desktop</h2><p>界面上找设置代理的地方</p><h2 id="docker-pull-使用的代理"><a href="#docker-pull-使用的代理" class="headerlink" title="docker pull 使用的代理"></a><code>docker pull</code> 使用的代理</h2><p>如果用<code>systemd</code>接管的，需要设置全局变量， 例如 CentOS</p><p><code>vim  /lib/systemd/system/docker.service</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>Service<span class="token punctuation">]</span><span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token string">"HTTP_PROXY=http://192.168.232.1:29002"</span><span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token string">"HTTPS_PROXY=http://192.168.232.1:29002"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>docker info</code> 验证</p></blockquote><h2 id="docker的虚拟机里"><a href="#docker的虚拟机里" class="headerlink" title="docker的虚拟机里"></a><code>docker的虚拟机里</code></h2><blockquote><p>~/.docker/config.json</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">{</span> <span class="token string">"proxies"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>   <span class="token string">"default"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>     <span class="token string">"httpProxy"</span><span class="token builtin class-name">:</span> <span class="token string">"http://192.168.232.1:29002"</span>,     <span class="token string">"httpsProxy"</span><span class="token builtin class-name">:</span> <span class="token string">"http://192.168.232.1:29002"</span>,     <span class="token string">"noProxy"</span><span class="token builtin class-name">:</span> <span class="token string">"*.test.example.com,.example.org,127.0.0.0/8"</span>   <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>验证 <code>docker run --rm alpine sh -c 'env | grep -i  _PROXY'</code></p></blockquote><h2 id="官方"><a href="#官方" class="headerlink" title="官方"></a>官方</h2><blockquote><p><a href="https://docs.docker.com/network/proxy/">https://docs.docker.com/network/proxy/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows上编译grpc-proto</title>
      <link href="2023/07/13/install-grpc-on-windows/"/>
      <url>2023/07/13/install-grpc-on-windows/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Download-protoc"><a href="#Download-protoc" class="headerlink" title="Download protoc"></a>Download <a href="https://github.com/protocolbuffers/protobuf">protoc</a></h2><p>最新版本为<code>https://github.com/protocolbuffers/protobuf/releases/download/v23.4/protoc-23.4-win64.zip</code><br>解压，接下后的bin目录放入系统PATH里</p><h2 id="安装-protobuf-javascript"><a href="#安装-protobuf-javascript" class="headerlink" title="安装 protobuf-javascript"></a>安装 protobuf-javascript</h2><p><a href="https://github.com/protocolbuffers/protobuf-javascript">https://github.com/protocolbuffers/protobuf-javascript</a></p><p>下载 v3.21.2 版本，解压放入系统PATH能找到的目录</p><h2 id="安装-protoc-gen-go"><a href="#安装-protoc-gen-go" class="headerlink" title="安装 protoc-gen-go"></a>安装 protoc-gen-go</h2><p>go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0</p><p>确保用户目录的<code>go/bin</code>目录在系统<code>PATH</code>里</p><h2 id="安装-protoc-gen-go-grpc"><a href="#安装-protoc-gen-go-grpc" class="headerlink" title="安装 protoc-gen-go-grpc"></a>安装 protoc-gen-go-grpc</h2><p>go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest</p><h2 id="安装-protoc-gen-validate"><a href="#安装-protoc-gen-validate" class="headerlink" title="安装 protoc-gen-validate"></a>安装 protoc-gen-validate</h2><p>go install github.com/envoyproxy/protoc-gen-validate@v1.0.2</p><h2 id="安装-ts-protoc-gen"><a href="#安装-ts-protoc-gen" class="headerlink" title="安装 ts-protoc-gen"></a>安装 ts-protoc-gen</h2><p>npm install -g pkg <a href="mailto:ts-protoc-gen@0.15.0">ts-protoc-gen@0.15.0</a></p><h2 id="安装-protoc-gen-doc"><a href="#安装-protoc-gen-doc" class="headerlink" title="安装 protoc-gen-doc"></a>安装 protoc-gen-doc</h2><p>go install github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc@v1.5.1</p><blockquote><p><a href="https://github.com/rvolosatovs/docker-protobuf">https://github.com/rvolosatovs/docker-protobuf</a></p></blockquote><h1 id="编译脚本"><a href="#编译脚本" class="headerlink" title="编译脚本"></a>编译脚本</h1><pre class="line-numbers language-Makefile" data-language="Makefile"><code class="language-Makefile">FILES=$(shell find . -not -path "./vendor/*" -type f -name "*.proto")WORK_PATH=$(shell pwd)DIRS=$(shell ls proto)# Install Dependencieslint:protolint lint -fix .# --go_opt=paths=source_relative# --go-grpc_opt=paths=source_relative# --validate_out="lang=go,paths=source_relative:."# https://github.com/envoyproxy/protoc-gen-validate/issues/498.PHONY: protocprotoc:@if [[ -e gens ]]; then rm -rf gens; fi;@mkdir -p gens/js;@if [[ -e docs ]]; then rm -rf docs; fi;@mkdir -p docs;@for dir in $(shell ls proto); do \  mkdir -p gens/js/$$dir; \  mkdir -p docs/$$dir; \for file in `find proto/$$dir -not -path "./vendor/*" -type f -name "*.proto"`; do \echo $$file; \  protoc \-I . \-I ./proto \--go_out=. \--go-grpc_out=. \--validate_out="lang=go:." \--js_out=import_style=commonjs,binary:. \--ts_out=service=grpc-web:. \--doc_out=. --doc_opt=html,index.html,source_relative \$$file; \done; \mv -f proto/$$dir/*.js gens/js/$$dir/; \mv -f proto/$$dir/*.ts gens/js/$$dir/; \mv -f proto/$$dir/*.html docs/$$dir/; \  done;@mv github.com/freenetx/protorepo/gens/go gens/;@rm -rf github.com;build: protoclint_in_docker:/usr/local/bin/docker run --volume "$(WORK_PATH):/workspace" --workdir /workspace yoheimuta/protolint lint ./protocompile_in_docker: lint_in_docker@if [[ -e tmp ]]; then rm -rf tmp; fi;@mkdir -p tmp/docs@if [[ -e gens ]]; then rm -rf gens; fi;@mkdir -p gens/go@mkdir -p gens/js@if [[ -e docs ]]; then rm -rf docs; fi;/usr/local/bin/docker run --rm -v $(WORK_PATH):/work -w /work rvolosatovs/protoc \--proto_path=./proto \--go_out=./tmp \--go-grpc_out=./tmp  \--validate_out="lang=go,paths=:./tmp" \--js_out=import_style=commonjs,binary:./tmp \--ts_out=service=grpc-web:./tmp \        --doc_out=./tmp/docs --doc_opt=html,index.html,source_relative \./proto/share/share.proto $(shell find ./proto ! -name 'share.proto' -name '*.proto')build_in_docker: compile_in_docker@mv ./tmp/github.com/freenetx/protorepo/gens/go ./gens/@rm -rf ./tmp/github.com@mv ./tmp/docs ./docs@mv ./tmp/* ./gens/js/@rm -rf tmp#$(shell cp -r message go &amp;&amp; cp -r service go &amp;&amp; find go -depth -name '*.proto' | xargs rm)#$(shell find service -depth -name '*.go' | xargs rm &amp;&amp; find message -depth -name '*.go' | xargs rm)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Windows</code>上执行 <code>make build</code></p>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> grpc </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展GitForWindows</title>
      <link href="2023/07/12/install-git4windowsex/"/>
      <url>2023/07/12/install-git4windowsex/</url>
      
        <content type="html"><![CDATA[<h2 id="安装Git-for-Windows"><a href="#安装Git-for-Windows" class="headerlink" title="安装Git for Windows"></a><code>安装Git for Windows</code></h2><h2 id="Git-for-Windows命令行下下载所必须的包"><a href="#Git-for-Windows命令行下下载所必须的包" class="headerlink" title="Git for Windows命令行下下载所必须的包"></a><code>Git for Windows</code>命令行下下载所必须的包</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> ~/Downloads$ <span class="token function">curl</span> -o pacman-6.0.1-9-x86_64.pkg.tar.zst https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/pacman-6.0.1-9-x86_64.pkg.tar.zst$ <span class="token function">curl</span> -o pacman-mirrors-20220205-1-any.pkg.tar.zst https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/pacman-mirrors-20220205-1-any.pkg.tar.zst$ <span class="token function">curl</span> -o msys2-keyring-1~20220623-1-any.pkg.tar.zst https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/msys2-keyring-1~20220623-1-any.pkg.tar.zst$ <span class="token function">curl</span> -o zstd-1.5.2-2-x86_64.pkg.tar.zst https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/x86_64/zstd-1.5.2-2-x86_64.pkg.tar.zst<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<code>zstd-1.5.2-2-x86_64.pkg.tar.zst</code> 包还需要<code>zstd</code>工具来处理， 在 <a href="https://github.com/facebook/zstd/releases">https://github.com/facebook/zstd/releases</a> 下载工具，解压后在使用<code>zstd</code>处理<code>zst</code>文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">curl</span> -L -o zstd-v1.5.5-win64.zip https://github.com/facebook/zstd/releases/download/v1.5.5/zstd-v1.5.5-win64.zip$ <span class="token function">unzip</span> zstd-v1.5.5-win64.zip$ ./zstd-v1.5.5-win64/zstd.exe -d -o zstd-1.5.2-2-x86_64.pkg.tar zstd-1.5.2-2-x86_64.pkg.tar.zst<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>接下来用<strong>管理员模式</strong>打开<code>Git for Windows</code>，安装 - 注意：不用管理员模式会报权限错‘</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> /$ <span class="token function">tar</span> -xvf ~/Downloads/zstd-1.5.2-2-x86_64.pkg.tar$ <span class="token function">tar</span> -xvf ~/Downloads/msys2-keyring-1~20220623-1-any.pkg.tar.zst$ <span class="token function">tar</span> -xvf ~/Downloads/pacman-mirrors-20220205-1-any.pkg.tar.zst$ <span class="token function">tar</span> -xvf ~/Downloads/pacman-6.0.1-9-x86_64.pkg.tar.zst<span class="token comment"># 删除无用的解压出来的包信息文件</span>$ <span class="token function">rm</span> -rf .BUILDINFO .MTREE .INSTALL .PKGINFO<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>初始化 <code>packman</code> - 管理员模式</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ pacman-key --init <span class="token operator">&amp;&amp;</span> pacman-key --populate msys2$ pacman -Sy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="安装包-管理员模式"><a href="#安装包-管理员模式" class="headerlink" title="安装包 - 管理员模式"></a>安装包 - 管理员模式</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pacman -S --overwrite<span class="token operator">=</span><span class="token string">"*"</span> gccpacman -S --overwrite<span class="token operator">=</span><span class="token string">"*"</span> <span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装 </tag>
            
            <tag> git4windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7配置阿里云yum源及epel源</title>
      <link href="2023/07/09/centos7-pei-zhi-a-li-yun-yum-yuan-ji-epel-yuan/"/>
      <url>2023/07/09/centos7-pei-zhi-a-li-yun-yum-yuan-ji-epel-yuan/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/yum.repos.d/<span class="token function">mkdir</span> bak<span class="token function">mv</span> *.repo bak/<span class="token function">wget</span> -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repoyum clean allyum makecache<span class="token function">wget</span> -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repoyum clean allyum makecache<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://blog.csdn.net/qq_42761569/article/details/128543321">https://blog.csdn.net/qq_42761569/article/details/128543321</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos-8-first</title>
      <link href="2023/06/30/centos-8-first/"/>
      <url>2023/06/30/centos-8-first/</url>
      
        <content type="html"><![CDATA[<h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> epel-release -y<span class="token function">sed</span> -i -e <span class="token string">"s|mirrorlist=|#mirrorlist=|g"</span> /etc/yum.repos.d/CentOS-*<span class="token function">sed</span> -i -e <span class="token string">"s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g"</span> /etc/yum.repos.d/CentOS-*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>2022年1月31日，CentOS 团队从官方镜像中移除 CentOS 8 的所有包。因为 CentOS 8 已于2021年12月31日停止官方服务了，但软件包仍在官方镜像上保留了一段时间。现在他们被转移到 vault.centos.org。如果你仍然需要运行 CentOS 8，你可以在 /etc/yum.repos.d 中更新一下源。使用 vault.centos.org 代替 mirror.centos.org 即可。</p></blockquote><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> lrzsz <span class="token function">unzip</span> <span class="token function">vim</span> net-tools gcc <span class="token function">make</span> <span class="token function">wget</span> -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> centos8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>btc-all</title>
      <link href="2023/06/15/btc-all/"/>
      <url>2023/06/15/btc-all/</url>
      
        <content type="html"><![CDATA[<h1 id="Bitcoin-core-安装"><a href="#Bitcoin-core-安装" class="headerlink" title="Bitcoin core 安装"></a><code>Bitcoin core</code> 安装</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a><code>windows</code></h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>从 <a href="https://bitcoincore.org/en/download/">下载页</a> 下载</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>下载后安装，首次启动</p><p><img src="/2023/06/15/btc-all/startup1.png" alt="首次启动"></p><ul><li>根据提示，可以看到数据空间已经达到了<code>547G</code>,默认位置为系统盘，可以选择<code>使用自定义的数据目录</code>来选择有足够空间的磁盘</li><li>不要选择<code>Limit block chain stroage to 2G</code>选项，如果选择了，则下载的数据只会是最近一段时间的数据而不是完整区块链数据</li></ul><p>配置成功后会进入软件主界面</p><p><img src="/2023/06/15/btc-all/main1.png" alt="主界面1"></p><p>菜单 <code>设置</code>-&gt;<code>选项</code>-&gt;<code>主要</code> 页面，可以看到 <code>启用RPC服务器选项</code>，勾选启动它</p><p><img src="/2023/06/15/btc-all/rpc1.png" alt="EnableRPC"></p><p>这里需要注意, 软件的配置文件为<code>bitcoin.conf</code>, 在数据目录下面</p><p>配置文件里可以通过<code>rpcuser</code>和<code>rpcpassword</code>来修改连接的用户名和密码</p><h3 id="验证RPC"><a href="#验证RPC" class="headerlink" title="验证RPC"></a>验证<code>RPC</code></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bitcoin-cli.exe -conf<span class="token operator">=</span>L:<span class="token punctuation">\</span>bitcoin<span class="token punctuation">\</span>BitcoinData<span class="token punctuation">\</span>bitcoin.conf getblockchaininfobitcoin-cli.exe -conf<span class="token operator">=</span>L:<span class="token punctuation">\</span>bitcoin<span class="token punctuation">\</span>BitcoinData<span class="token punctuation">\</span>bitcoin.conf getblockcount<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>其中<code>L:\bitcoin\BitcoinData\bitcoin.conf</code>为此次数据目录下的配置文件</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> BTC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> btcd </tag>
            
            <tag> btc core </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>btcd - windows</title>
      <link href="2023/06/10/btcd/"/>
      <url>2023/06/10/btcd/</url>
      
        <content type="html"><![CDATA[<h2 id="btcd"><a href="#btcd" class="headerlink" title="btcd"></a>btcd</h2><h3 id="下载-btcd"><a href="#下载-btcd" class="headerlink" title="下载 btcd"></a>下载 <a href="https://github.com/btcsuite/btcd/releases%60">btcd</a></h3><h3 id="查看btcd配置那文件位置"><a href="#查看btcd配置那文件位置" class="headerlink" title="查看btcd配置那文件位置"></a>查看<code>btcd</code>配置那文件位置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># btcd.exe -h</span><span class="token punctuation">..</span>. /C, /configfile:            Path to configuration <span class="token function">file</span> <span class="token punctuation">(</span>default:                              C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>z<span class="token punctuation">\</span>AppData<span class="token punctuation">\</span>Local<span class="token punctuation">\</span>Btcd<span class="token punctuation">\</span>btcd.conf<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新增、修改配置文件"><a href="#新增、修改配置文件" class="headerlink" title="新增、修改配置文件"></a>新增、修改配置文件</h3><h3 id="模板"><a href="#模板" class="headerlink" title="#模板"></a>#<a href="https://github.com/btcsuite/btcd/blob/master/sample-btcd.conf">模板</a></h3><h4 id="配置项"><a href="#配置项" class="headerlink" title="配置项"></a>配置项</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">datadir</span><span class="token operator">=</span>J:<span class="token punctuation">\</span><span class="token punctuation">\</span>btcdd<span class="token assign-left variable">rpcuser</span><span class="token operator">=</span>admin<span class="token assign-left variable">rpcpass</span><span class="token operator">=</span><span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>启动<code>btcd</code>, 然后</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">btcctl.exe getblockcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>来查询信息，检测rpc功能是否正常</p><h4 id="等待区块链数据完全下载到本地-几天时间或更长"><a href="#等待区块链数据完全下载到本地-几天时间或更长" class="headerlink" title="等待区块链数据完全下载到本地 - 几天时间或更长"></a>等待区块链数据完全下载到本地 - 几天时间或更长</h4><blockquote><p><a href="https://www.cnblogs.com/hupeng1234/p/9729180.html">https://www.cnblogs.com/hupeng1234/p/9729180.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> BTC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> btcd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go-remote-debug</title>
      <link href="2023/05/09/go-remote-debug/"/>
      <url>2023/05/09/go-remote-debug/</url>
      
        <content type="html"><![CDATA[<h1 id="install-g"><a href="#install-g" class="headerlink" title="install g"></a>install g</h1><blockquote><p><a href="https://github.com/voidint/g">https://github.com/voidint/g</a></p></blockquote><h1 id="install-delve"><a href="#install-delve" class="headerlink" title="install delve"></a>install delve</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/go-delve/delve.git<span class="token builtin class-name">cd</span> delve/cmd/dlv/go <span class="token function">env</span> -w <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn <span class="token comment"># 墙内设置代理</span>go buildgo <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="build-execute"><a href="#build-execute" class="headerlink" title="build execute"></a>build execute</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">GOOS</span><span class="token operator">=</span>linux <span class="token assign-left variable">GOARCH</span><span class="token operator">=</span>amd64 go build -gcflags <span class="token string">"all=-N -l"</span> -o xxx cmd/fsrobot/main.go<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dlv --listen<span class="token operator">=</span>:2345 --headless<span class="token operator">=</span>true --api-version<span class="token operator">=</span><span class="token number">2</span> --accept-multiclient <span class="token builtin class-name">exec</span> ./xxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> debug </tag>
            
            <tag> remote </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openwrtonwmware</title>
      <link href="2023/05/09/openwrtonwmware/"/>
      <url>2023/05/09/openwrtonwmware/</url>
      
        <content type="html"><![CDATA[<h1 id="暂时先借鉴别的人-Windows上安装openwrt软路由"><a href="#暂时先借鉴别的人-Windows上安装openwrt软路由" class="headerlink" title="暂时先借鉴别的人 Windows上安装openwrt软路由"></a>暂时先借鉴别的人 <code>Windows上安装openwrt软路由</code></h1><blockquote><p><a href="https://www.zt0729.xyz/archives/49/">https://www.zt0729.xyz/archives/49/</a><br><a href="https://blog.csdn.net/u012514495/article/details/123641467">https://blog.csdn.net/u012514495/article/details/123641467</a></p></blockquote><h2 id="下载-Openwrt-x86-exe"><a href="#下载-Openwrt-x86-exe" class="headerlink" title="下载 Openwrt-x86.exe"></a>下载 <a href="https://www.aliyundrive.com/s/pTeWcDhKJFf">Openwrt-x86.exe</a></h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>先解压-双击.vmx配置文件导入即可食用</li><li>接下来进行开机，跑码证明正常，码不动了，回车 出现OpenWrt字样证明启动成功</li></ol><h2 id="设置IP"><a href="#设置IP" class="headerlink" title="设置IP"></a>设置IP</h2><ol><li>vi etc/config/network<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">config interface <span class="token string">'lan'</span>下面修改 ipaddr 为你的真是机器网段的一个地址修改后重启<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>登錄網頁 账号默认：root 登陆密码：password<h2 id="openwrt机器上网"><a href="#openwrt机器上网" class="headerlink" title="openwrt机器上网"></a><code>openwrt</code>机器上网</h2></li></ol><p>默认进入系统是不连接网络的，修改虚拟机器设置，添加一个网卡<br><img src="/2023/05/09/openwrtonwmware/img.png" alt="img.png"><br>选择<code>NAT</code>就行</p><p>重启机器，上网试试</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> openwrt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter</title>
      <link href="2023/04/03/flutter/"/>
      <url>2023/04/03/flutter/</url>
      
        <content type="html"><![CDATA[<h1 id="编译Android-APK"><a href="#编译Android-APK" class="headerlink" title="编译Android APK"></a>编译Android APK</h1><h2 id="创建-keystore"><a href="#创建-keystore" class="headerlink" title="创建 keystore"></a>创建 <code>keystore</code></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize <span class="token number">2048</span> -validity <span class="token number">10000</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据提示输入密钥口令，自己设置一个简单的就行，剩下的信息无需填写直接回车，默认就行，到最后确认信息输入<code>：y</code> 再回车，之后如果让你再输入一个密码，如果要和上面的密钥口令保持一致就行</p><p><img src="/2023/04/03/flutter/genkey.png"></p><p>其中：</p><ul><li><code>keystore</code> 参数后的值：<code>my-release-key.keystore</code>， 表示一会儿要生成的那个 <code>签名文件</code> 的名称；请先保存好这个名称，因为后面发布项目期间会用到它。</li><li><code>keyAlias</code> 参数后面的值：<code>my-key-alias</code>，后续发布项目期间也会用到，因此也需要保存好这个参数值；注意：这个参数的值可以根据自己的需要进行自定制。</li></ul><p>将自己的签名证书 <code>copy</code> 到 <code>androia/app</code> 目录下</p><p><img src="/2023/04/03/flutter/key2android.png"></p><blockquote><p>注意：保持<code>keystore</code>文件的私密性; 不要将已加入到公共源代码控制中（最好的方式，是将<code>keystore</code>文件添加到<code>gitignore</code>忽略文件）。</p><p>注意：<code>keytool</code> 可能不在你的系统路径中。它是 <code>Java JDK</code> 的一部分，它是作为 <code>Android Studio</code> 的一部分安装的。有关具休路径，请百度。</p></blockquote><h2 id="引用应用程序中的keystore"><a href="#引用应用程序中的keystore" class="headerlink" title="引用应用程序中的keystore"></a>引用应用程序中的<code>keystore</code></h2><p>在项目<code>android</code>文件下创建一个名<code>key.properties</code>的文件，其中包合对密钥库的引用：</p><p><code>keyAlias</code>后面是固定值<code>my-key-alias</code><br><code>storeFile</code>为生成签名的文件名<code>my-release-key.keystore</code></p><p><img src="/2023/04/03/flutter/buid.gradle.png"></p><blockquote><p>其中掩码为 创建 <code>keystore</code> 时候使用的密码</p></blockquote><h2 id="在-gradle-中配置签名"><a href="#在-gradle-中配置签名" class="headerlink" title="在 gradle 中配置签名"></a>在 gradle 中配置签名</h2><p>通过编辑<code>android/app/build.gradle</code> 文件为应用配置签名</p><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h3><p>替换</p><pre class="line-numbers language-none"><code class="language-none">android {<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">def keystorePropertiesFile <span class="token operator">=</span> rootProject.file<span class="token punctuation">(</span><span class="token string">"key.properties"</span><span class="token punctuation">)</span>def keystoreProperties <span class="token operator">=</span> new Properties<span class="token punctuation">(</span><span class="token punctuation">)</span>keystoreProperties.load<span class="token punctuation">(</span>new FileInputStream<span class="token punctuation">(</span>keystorePropertiesFile<span class="token punctuation">))</span>android <span class="token punctuation">{</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/04/03/flutter/buid.gradle.r1.png"></p><h3 id="替换-1"><a href="#替换-1" class="headerlink" title="替换"></a>替换</h3><p>替换</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">buildTypes <span class="token punctuation">{</span>    release <span class="token punctuation">{</span>        // TODO: Add your own signing config <span class="token keyword">for</span> the release build.        // Signing with the debug keys <span class="token keyword">for</span> now, so <span class="token variable"><span class="token variable">`</span>flutter run --release<span class="token variable">`</span></span> works.        signingConfig signingConfigs.debug    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">signingConfigs <span class="token punctuation">{</span>    release <span class="token punctuation">{</span>        keyAlias keystoreProperties<span class="token punctuation">[</span><span class="token string">'keyAlias'</span><span class="token punctuation">]</span>        keyPassword keystoreProperties<span class="token punctuation">[</span><span class="token string">'keyPassword'</span><span class="token punctuation">]</span>        storeFile file<span class="token punctuation">(</span>keystoreProperties<span class="token punctuation">[</span><span class="token string">'storeFile'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        storePassword keystoreProperties<span class="token punctuation">[</span><span class="token string">'storePassword'</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>    buildTypes <span class="token punctuation">{</span>        release <span class="token punctuation">{</span>            signingConfig signingConfigs.release        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2023/04/03/flutter/buid.gradle.r2.png"></p><h2 id="构建一个发布版-release-APK"><a href="#构建一个发布版-release-APK" class="headerlink" title="构建一个发布版 (release) APK"></a>构建一个发布版 (release) APK</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flutter build apk<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>#</p>]]></content>
      
      
      <categories>
          
          <category> flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> publish </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>solution-backup</title>
      <link href="2023/03/14/solution-backup/"/>
      <url>2023/03/14/solution-backup/</url>
      
        <content type="html"><![CDATA[<h1 id="个人备份方案"><a href="#个人备份方案" class="headerlink" title="个人备份方案"></a>个人备份方案</h1><blockquote><p>使用 <code>Obsidian</code> 笔记存放于 <code>lalapapa</code></p></blockquote><ul><li><p>必备软件、脚本 softs</p><ul><li>机器 <code>Win20Home</code><ul><li><code>D:\datas\softs</code></li><li>=&gt; <code>Syncthing[M1]</code>: <code>softs</code></li><li>手动备份</li></ul></li></ul></li><li><p>加密档案 <code>lalapapa</code></p><ul><li>云盘位置: <code>OneDrive[stwstw0123@163.com]</code>: <code>/lalapapa</code></li><li>机器 <code>Win20Home</code><ul><li>同步盘: <code>C:\Users\z\OneDrive\lalapapa</code><ul><li>=&gt; <code>Syncthing[M2]</code>: <code>lalapapa</code></li><li>=&gt; [<code>Cryptomator</code>] =&gt; <code>H:</code><ul><li>=&gt; <code>Syncthing[M1]</code>: <code>lalapapa_plain</code></li></ul></li></ul></li><li>手动备份</li></ul></li><li>机器 <code>MacAir</code><ul><li><code>Syncthing[M4]</code>: <code>lalapapa</code></li><li><code>Syncthing[M1]</code>: <code>lalapapa_plain</code></li><li>开机时候一小时自动执行一次<code>TimeMachine</code>备份</li><li>手动备份</li></ul></li></ul></li><li><p>加密档案 <code>ymiconf</code></p><ul><li>云盘位置: <code>OneDrive[stwstw0123@163.com]</code>: <code>/ymiconf</code></li><li>机器 <code>Win20Home</code><ul><li>同步盘: <code>C:\Users\z\OneDrive\ymiconf</code><ul><li>=&gt; <code>Syncthing[M2]</code>: <code>ymiconf</code></li><li>=&gt; [<code>Cryptomator</code>] =&gt; <code>K:</code><ul><li>=&gt; <code>Syncthing[M1]</code>: <code>ymiconf_plain</code></li></ul></li></ul></li><li>手动备份</li></ul></li><li>机器 <code>MacAir</code><ul><li><code>Syncthing[M4]</code>: <code>ymiconf</code></li><li><code>Syncthing[M1]</code>: <code>ymiconf_plain</code></li><li>开机时候一小时自动执行一次<code>TimeMachine</code>备份</li><li>手动备份</li></ul></li></ul></li><li><p>Win绿软 <code>softs_win</code></p><ul><li>云盘位置: <code>OneDrive[stwstw0123@163.com]</code>: <code>/softs_win</code></li><li>机器 <code>Win20Home</code><ul><li>同步盘: <code>:\Users\z\OneDrive\softs_win</code> </li><li>=&gt; <code>Syncthing[M2]</code>: <code>softs_win</code><ul><li>=&gt; [<code>Cryptomator</code>] =&gt; <code>E:</code><ul><li>=&gt; <code>Syncthing[M1]</code>: <code>softs_win_plain</code></li></ul></li></ul></li><li>手动备份</li></ul></li><li>机器 <code>MacAir</code><ul><li><code>Syncthing[M4]</code>: <code>softs_win</code></li><li><code>Syncthing[M1]</code>: <code>softs_win_plain</code></li><li>开机时候一小时自动执行一次<code>TimeMachine</code>备份</li><li>手动备份</li></ul></li></ul></li><li><p>相册</p><ul><li>机器 <code>Win20Home</code><ul><li><code>D:\datas\sync</code><ul><li><code>Syncthing[M3]</code><ul><li><code>D:\datas\sync\ncco5-zv5ay\摄像机</code> &lt;- Phone:zjz:/sdcard/MIUI</li><li><code>D:\datas\sync\ncco5-zv5ay\wxpics</code> &lt;- Phone:zjz:/sdcard/Pictures/WeiXin</li><li><code>D:\datas\sync\ncco5-zv5ay\syncing</code> &lt;- Phone:zjz:/sdcard/syncting</li><li><code>D:\datas\sync\ncco5-zv5ay\soundrecord</code> &lt;- Phone:zjz:/sdcard/MIUI/sound_recorder</li><li><code>D:\datas\sync\zym\摄像机</code> &lt;- Phone:zym:?</li><li><code>D:\datas\sync\zym\wxpics</code> &lt;- Phone:zym:?</li><li><code>D:\datas\sync\zym\qqpics</code> &lt;- Phone:zym:?</li><li><code>D:\datas\sync\zym\pictures</code> &lt;- Phone:zym:?</li><li><code>D:\datas\sync\zym\photo</code> &lt;- Phone:zym:?</li></ul></li></ul></li><li>=&gt; G:\photos</li></ul></li></ul></li><li><p>手动备份</p><ul><li>机器 <code>Win20Home</code><ul><li><code>/softs/manualscripts/win10home_bakup.sh</code><ul><li>加密备份 <code>/h</code> =&gt; <code>腾讯微云:/backups/lalapapa</code></li><li>加密备份 <code>/e</code> =&gt; <code>腾讯微云:/backups/softs_win</code></li><li>解密备份 <code>/d/datas/softs softs</code> =&gt; <code>腾讯微云:/backups/lalapapa</code></li></ul></li><li>执行文件(拷贝)<ul><li><code>D:\scripts\win10home_backup.sh</code></li></ul></li></ul></li><li>机器 <code>MacAir</code><ul><li><code>/soft/manualscripts/macair_disk_bakup.sh</code><ul><li>备份到 <code>TimeMachine</code> / <code>data_backups</code> 盘</li></ul></li></ul></li></ul></li><li><p>Syncthing</p><ul><li>同步模式<ul><li>[M1]: 双向备份</li><li>[M2]: 仅发送</li><li>[M3]: 仅接收且忽略对方的删除请求</li><li>[M4]: 仅接受</li></ul></li><li>忽略<ul><li><code>.*</code></li></ul></li></ul></li><li><p>ymipro</p></li><li></li></ul><h2 id="secret"><a href="#secret" class="headerlink" title="secret"></a><code>secret</code></h2><ul><li><code>Win10Home</code>: <code>F:/</code></li><li><code>GoogleDrive</code>:<code>/seed/</code></li><li><code>OneDrive</code>: <code>保险箱</code></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>adb-无线调试</title>
      <link href="2023/03/13/adb-wu-xian-diao-shi/"/>
      <url>2023/03/13/adb-wu-xian-diao-shi/</url>
      
        <content type="html"><![CDATA[<ol><li>确保手机和PC连接到同一<code>WIFI</code>, 手机上查找手机IP，例如<code>192.168.3.3</code>。在<code>PC</code>上<code>PING</code>手机的<code>IP</code>，确保能<code>PING</code>通</li><li>手机端开远程调试端口<ul><li>如果手机的<code>开发者选项</code>里，有<code>无线调试</code>选项，则打开，并查看<code>IP地址和端口</code>，例如其值为<code>192.168.3.3:6666</code></li><li>如果没有则<ol><li>手机通过有线连接到任意一台<code>PC</code>，打开<code>PC</code>的<code>cmd</code>，执行命令<code>adb devices</code>[如果连接的是从未授权的PC，手机会提示授权，勾选并确定即可]</li><li>检测到手机后,<code>PC</code>端命令行执行 <code>adb tcpip 6666</code></li><li>拔掉手机与<code>PC</code>的连线, 为了确保手机断开，<code>PC</code>端命令行命令<code>adb disconnect</code></li></ol></li></ul></li><li>在<code>PC</code>执行<code>adb connect 192.168.3.3:6666</code> - 这里的<code>192.168.3.3</code>换成真正的手机<code>IP</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> adb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> adb </tag>
            
            <tag> 无线调试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git-代理</title>
      <link href="2023/03/08/git-dai-li/"/>
      <url>2023/03/08/git-dai-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="http-https-协议"><a href="#http-https-协议" class="headerlink" title="http https 协议"></a><code>http</code> <code>https</code> 协议</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//设置全局代理//http<span class="token function">git</span> config --global https.proxy http://127.0.0.1:1080//https<span class="token function">git</span> config --global https.proxy https://127.0.0.1:1080//使用socks5代理的 例如ss，ssr <span class="token number">1080</span>是windows下ss的默认代理端口,mac下不同，或者有自定义的，根据自己的改<span class="token function">git</span> config --global http.proxy socks5://127.0.0.1:1080<span class="token function">git</span> config --global https.proxy socks5://127.0.0.1:1080//只对github.com使用代理，其他仓库不走代理<span class="token function">git</span> config --global http.https://github.com.proxy socks5://127.0.0.1:1080<span class="token function">git</span> config --global https.https://github.com.proxy socks5://127.0.0.1:1080//取消github代理<span class="token function">git</span> config --global --unset http.https://github.com.proxy<span class="token function">git</span> config --global --unset https.https://github.com.proxy//取消全局代理<span class="token function">git</span> config --global --unset http.proxy<span class="token function">git</span> config --global --unset https.proxy————————————————版权声明：本文为CSDN博主「马全鑫」的原创文章，遵循CC <span class="token number">4.0</span> BY-SA版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_34147601/article/details/118305793<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ssh协议"><a href="#ssh协议" class="headerlink" title="ssh协议"></a><code>ssh</code>协议</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">//对于使用git@协议的，可以配置socks5代理//在~/.ssh/config 文件后面添加几行，没有可以新建一个//socks5Host github.comUser <span class="token function">git</span>ProxyCommand connect -S <span class="token number">127.0</span>.0.1:1080 %h %p//http <span class="token operator">||</span> httpsHost github.comUser <span class="token function">git</span>ProxyCommand connect -H <span class="token number">127.0</span>.0.1:1080 %h %p————————————————版权声明：本文为CSDN博主「马全鑫」的原创文章，遵循CC <span class="token number">4.0</span> BY-SA版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/qq_34147601/article/details/118305793<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Method 1. git http + proxy http</span><span class="token function">git</span> config --global http.proxy <span class="token string">"http://127.0.0.1:1080"</span><span class="token function">git</span> config --global https.proxy <span class="token string">"http://127.0.0.1:1080"</span><span class="token comment"># Method 2. git http + proxy shocks</span><span class="token function">git</span> config --global http.proxy <span class="token string">"socks5://127.0.0.1:1080"</span><span class="token function">git</span> config --global https.proxy <span class="token string">"socks5://127.0.0.1:1080"</span><span class="token comment"># to unset</span><span class="token function">git</span> config --global --unset http.proxy<span class="token function">git</span> config --global --unset https.proxy<span class="token comment"># Method 3. git ssh + proxy http</span><span class="token function">vim</span> ~/.ssh/configHost github.comHostName github.comUser <span class="token function">git</span>ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport<span class="token operator">=</span><span class="token number">1087</span><span class="token comment"># Method 4. git ssh + proxy socks</span><span class="token function">vim</span> ~/.ssh/configHost github.comHostName github.comUser <span class="token function">git</span>ProxyCommand <span class="token function">nc</span> -v -x <span class="token number">127.0</span>.0.1:1080 %h %p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>https://stackoverflow.com/questions/58245255/how-to-force-git-to-use-socks-proxy-over-its-ssh-connection</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx-限速</title>
      <link href="2023/03/06/nginx-xian-su/"/>
      <url>2023/03/06/nginx-xian-su/</url>
      
        <content type="html"><![CDATA[<h2 id="conn"><a href="#conn" class="headerlink" title="conn"></a>conn</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cat apps.ymipro.com.conf </span>limit_conn_zone <span class="token variable">$binary_remote_addr</span> <span class="token assign-left variable">zone</span><span class="token operator">=</span>addr:10m<span class="token punctuation">;</span>server <span class="token punctuation">{</span>  listen <span class="token number">443</span> ssl http2<span class="token punctuation">;</span>  listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:443 ssl http2<span class="token punctuation">;</span>  server_name  apps.ymipro.com<span class="token punctuation">;</span>  ssl_certificate certs/ymipro.com/fullchain.cer<span class="token punctuation">;</span>  ssl_certificate_key certs/ymipro.com/ymipro.com.key<span class="token punctuation">;</span>  ssl_session_cache shared:SSL:1m<span class="token punctuation">;</span>  ssl_session_timeout 5m<span class="token punctuation">;</span>  ssl_ciphers EECDH+AES128:HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5<span class="token punctuation">;</span>  ssl_prefer_server_ciphers on<span class="token punctuation">;</span>  location / <span class="token punctuation">{</span>    root /services/apps<span class="token punctuation">;</span>    index index.html index.htm<span class="token punctuation">;</span>    limit_conn addr <span class="token number">1</span><span class="token punctuation">;</span>    limit_rate 20k<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>limit_conn_zone</code>只能够在<code>http</code>块中使用</li><li><code>key</code>就是用来判定连接数的变量，这个变量可以是文本、变量或它们的组合，例如我们可以使用<code>IP</code>地址+<code>cookie</code>等其他复杂的组合来更精确地限定范围</li><li><code>name</code>就是这个<code>zone</code>的命名，经过实测<code>name</code>需要全局唯一，不可以和其他的<code>limit_conn_zone</code>的相同，毕竟后面的<code>limit_conn</code>命令需要根据这个<code>name</code>来查找对应的<code>zone</code>进行相应限制规则的匹配</li><li><code>size</code>定义了这个<code>zone</code>的大小，也就是<code>nginx</code>会在内存中开辟多大的空间来存储这个<code>zone</code>的相关信息，主要和前面定义的<code>key</code>的大小有关系，需要注意的是，当内存大小耗尽的时候，<code>nginx</code>会直接返回错误码<code>limit_conn_status</code>给后续的请求<blockquote><p>If the zone storage is exhausted, the server will return the error to all further requests.</p></blockquote></li></ul><ul><li><p><code>limit_conn</code>能在<code>http</code>、<code>server</code>、 <code>location</code>三个块中使用，但是需要注意的是要搭配前面提及的<code>limit_conn_zone</code></p></li><li><p><code>limit_conn</code>指令的变量只有<code>zone</code>和<code>number</code>两个</p></li><li><p>其中<code>zone</code>就是前面的<code>limit_conn_zone</code>中的<code>name</code>变量，也就是对应着全局唯一的<code>zone</code>，负责确定限制连接数的依据</p></li><li><p>其中<code>number</code>就是限制的连接数，<code>zone</code>和<code>number</code>组合就可以完成连接数的限定功能，注意这里的<code>number</code>必须使用数字而不能使用变量</p><blockquote><p>对于开启了HTTP2的请求来说，每个并发请求都会被当作一个单独的连接</p><p>In HTTP/2 and SPDY, each concurrent request is considered a separate connection.</p><p>在实际情况中，我们可能出于单个IP会存在大量连接数的情况而不去限制连接数。<br>比如：公司用的是专线，全公司的人用的是同一个IP，如果你限制连接数为5，下载器默认连接数为5，那么就只能供一个人下载，而别的人访问都是503</p></blockquote></li><li><p><code>limit_rate</code> 每个连接的限速 </p></li><li><p><code>limit_rate</code>的用法非常简单，后面跟随的<code>rate</code>就是具体限速的阈值</p></li><li><p>注意默认的单位是<code>bytes/s</code>，也就是每秒传输的字节数<code>Bytes</code>而不是比特数<code>bits rate</code></p></li><li><p>可以设置为变量，从而可以实现动态限速，限速指令的生效范围是根据每个连接确定的，例如限定每个连接的速率为4k，也就是当客户端发起两个连接的时候，速率就可以变为8k</p></li></ul><pre class="line-numbers language-none"><code class="language-none">http {limit_conn_zone $binary_remote_addr zone=perip：10m;limit_conn_zone $server_name zone=perserver：10m...server {...limit_conn perip 10; 　　　　 #单个客户端ip与服务器的连接数．limit_conn perserver 100;　　＃限制与服务器的总连接数}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考文档：<a href="http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html">http://nginx.org/en/docs/http/ngx_http_limit_conn_module.html</a></p></blockquote><h2 id="req"><a href="#req" class="headerlink" title="req"></a>req</h2><h3 id="http-中"><a href="#http-中" class="headerlink" title="http 中"></a>http 中</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 定义一个叫one的zone，每秒允许一个请求，zone占用空间最大为10M</span>limit_req_zone <span class="token variable">$binary_remote_addr</span> <span class="token assign-left variable">zone</span><span class="token operator">=</span>one:10m <span class="token assign-left variable">rate</span><span class="token operator">=</span>1r/s<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><code>limit_req_zone</code>指令一般用于<code>http块</code>中，使其可以在多个相关<code>server</code>、<code>location</code>等<code>contexts</code>中使用，一般来说它需要定义下面三个必要参数：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Syntax：limit_req_zone key <span class="token assign-left variable">zone</span><span class="token operator">=</span>name:size <span class="token assign-left variable">rate</span><span class="token operator">=</span>rate <span class="token punctuation">[</span>sync<span class="token punctuation">]</span><span class="token punctuation">;</span>Syntax: limit_req <span class="token assign-left variable">zone</span><span class="token operator">=</span>name <span class="token punctuation">[</span>burst<span class="token operator">=</span>number<span class="token punctuation">]</span> <span class="token punctuation">[</span>nodelay <span class="token operator">|</span> <span class="token assign-left variable">delay</span><span class="token operator">=</span>number<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>key：定义用于限制请求的变量，在这个示例中使用的是NGINX的自带变量$binary_remote_addr，它的特点是使用二进制来表示IP地址， 如123.183.224.65这个IP在$remote_addr中显示为123.183.224.65，<br>在$binary_remote_addr表示为{\xB7\xE0A，因此$binary_remote_addr占用的空间要比$remote_addr更少。使用$binary_remote_addr则意味着将每个唯一的用户IP作为限制速率的判断依据。<br>zone：定义用于存储前面定义的key变量和限制其访问请求频率rate变量的共享内存空间，将信息保存在共享内存中的好处是能够在多个worker进程中共享。存储空间的定义由两个部分组成：<br>zone=后面的名称以及冒号后面的大小，如zone=mylimit:10m 就是一个名为mylimit的大小为10m的共享内存空间。以$binary_remote_addr 变量为例，<br>它使用4 bytes来存储IPv4 地址或者是使用16 bytes来存储IPv6地址。存储状态始终在32位平台上占用64个字节，并在64位平台上占用128个字节。考虑到现在的服务器绝大多数都是64位的操作系统<br>，1M的大小可以保留大约8192个128字节的状态。<br>当存储空间耗尽的时候，如果需要记录新的值，那么就会通过LRU算法移除旧的变量来腾出空间，如果这样腾出来的空间还是不足以接纳新的记录值，那么nginx就会返回状态码503 (Service Temporarily Unavailable)。<br>此外，为了防止内存耗尽，nginx每次创建一个新记录值的时候就会清理掉两个60秒内没被使用过的旧记录值。</p><blockquote><p>If the zone storage is exhausted, the least recently used state is removed. If even after that a new state cannot be created, the request is terminated with an error.</p></blockquote><p>rate：设定允许的最大请求速率。上面的例子是每秒十个请求(10r/s)。nginx实现的是毫秒级别的控制粒度，10r/s对应的就是1r/100ms，这也就意味着在没有设置bursts的情况下，<br>如果一个请求接受处理之后的100ms内出现第二个请求，那么它就会被拒绝处理。<br>limit_req_zone指令设置了速率限制和共享内存区域的参数，但它实际上并不限制请求速率。因此我们需要通过在contexts中使用limit_req指令来将其限制应用于特定location或server块。<br>在上面的例子里，我们将请求速率限制在/login/这个location块中。因此现在每个唯一的 IP 地址被限制为每秒 10 个**/login/**请求，或者更准确地说，不能在前一个 URL 请求的 100 毫秒内发出对<br>该 URL 的第二次请求。</p><h3 id="server、location-中"><a href="#server、location-中" class="headerlink" title="server、location 中"></a>server、location 中</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">limit_req <span class="token assign-left variable">zone</span><span class="token operator">=</span>one <span class="token assign-left variable">burst</span><span class="token operator">=</span><span class="token number">5</span> nodelay<span class="token punctuation">;</span>  <span class="token comment">#nodelay 的大概意思是告诉nginx将超出**rate**限制的连接直接返回503，不需要等待处理</span><span class="token comment">#这句话的意思就是说，每秒处理1个请求，队列中最多有5个待处理请求，多余请求直接返回503</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="limit-rate-after"><a href="#limit-rate-after" class="headerlink" title="limit_rate_after"></a>limit_rate_after</h3><h1 id="语法配置"><a href="#语法配置" class="headerlink" title="语法配置"></a>语法配置</h1><pre class="line-numbers language-none"><code class="language-none">Syntax: limit_rate_after size;Default:    limit_rate_after 0;Context:    http, server, location, if in locationThis directive appeared in version 0.8.0.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p>location /flv/ {<br>flv;<br>limit_rate_after 500k;<br>limit_rate       50k;<br>}</p><p>limit_rate_after允许在传输了一部分数据之后再进行限速，例如上面的配置中就是传输的前500kbyte数据不限速，500k之后再进行限速。<br>比较常见的应用场景如分段下载限速，超过指定大小的部分再进行限速；又或者是流媒体视频网站一般为了保证用户体验而不会对第一个画面进行限速，<br>确保其能够尽快加载出来，等用户开始观看视频之后，再把带宽限制在合理的范围内，从而降低因客户端网速过快导致提前加载过多内容带来的额外成本。</p><h3 id="proxy-limit-rate"><a href="#proxy-limit-rate" class="headerlink" title="proxy_limit_rate"></a>proxy_limit_rate</h3><p>proxy_limit_rate的基本原理和用法与limit_rate几乎一样，唯一不同的是proxy_limit_rate是限制nginx和后端upstream服务器之间的连接速率而limit_rate限制的是nginx和客户端之间的连接速率。<br>需要注意的是proxy_limit_rate需要开启了proxy_buffering这个指令才会生效。</p><pre class="line-numbers language-none"><code class="language-none">Syntax: proxy_limit_rate rate;Default:    proxy_limit_rate 0;Context:    http, server, locationThis directive appeared in version 1.7.7.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> limit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx-黑名单</title>
      <link href="2023/03/06/nginx-hei-ming-dan/"/>
      <url>2023/03/06/nginx-hei-ming-dan/</url>
      
        <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># cat /etc/nginx/blockip.conf</span>deny <span class="token number">176.122</span>.161.213<span class="token punctuation">;</span><span class="token comment"># cat conf.d/test.ymipro.com.conf </span>server <span class="token punctuation">{</span>  listen <span class="token number">443</span> ssl http2<span class="token punctuation">;</span>  listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:443 ssl http2<span class="token punctuation">;</span>  server_name  test.ymipro.com<span class="token punctuation">;</span>  ssl_certificate certs/ymipro.com/fullchain.cer<span class="token punctuation">;</span>  ssl_certificate_key certs/ymipro.com/ymipro.com.key<span class="token punctuation">;</span>  ssl_session_cache shared:SSL:1m<span class="token punctuation">;</span>  ssl_session_timeout 5m<span class="token punctuation">;</span>  ssl_ciphers EECDH+AES128:HIGH:<span class="token operator">!</span>aNULL:<span class="token operator">!</span>MD5<span class="token punctuation">;</span>  ssl_prefer_server_ciphers on<span class="token punctuation">;</span>  include blockip.conf<span class="token punctuation">;</span>  location / <span class="token punctuation">{</span>    root         /usr/share/nginx/html<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自动配置黑名单"><a href="#自动配置黑名单" class="headerlink" title="自动配置黑名单"></a>自动配置黑名单</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#不能把别人IP一直封着吧，这里就清除掉了</span><span class="token builtin class-name">echo</span> <span class="token string">""</span> <span class="token operator">&gt;</span> /usr/local/nginx/conf/blockip.conf<span class="token comment">#前面最开始编写的统计数据功能</span><span class="token assign-left variable">ip_list</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$1</span>}'</span> access.log <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> -cd <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{if(<span class="token variable">$1</span>&gt;60)print <span class="token variable">$0</span>}'</span><span class="token variable">)</span></span><span class="token comment">#判断这个变量是否为空</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> -z <span class="token string">"<span class="token variable">$ip_list</span>"</span><span class="token keyword">then</span>        <span class="token comment">#为空写入 11.log中，并重新启动nginx</span>        <span class="token builtin class-name">echo</span> <span class="token string">"为空"</span>  <span class="token operator">&gt;&gt;</span> /usr/local/nginx/logs/11.log        /usr/local/nginx/sbin/nginx -s reload<span class="token keyword">else</span>        <span class="token comment">#如果不为空 前面加上 deny格式和ip写入blockip.conf中</span>        <span class="token builtin class-name">echo</span> <span class="token string">"deny"</span> <span class="token variable">$ip_list</span> <span class="token operator">&gt;</span> /usr/local/nginx/conf/blockip.conf            <span class="token comment">#因为前面携带了行数，所有我们需要去除掉前面的行数，写入后在读取一次</span>        <span class="token assign-left variable">ip_list2</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$3</span>}'</span> /usr/local/nginx/conf/blockip.conf<span class="token variable">)</span></span>                <span class="token comment">#最后再把读取出来的值，在次写入到blockip.conf中</span>        <span class="token builtin class-name">echo</span> <span class="token string">"deny"</span> <span class="token variable">$ip_list2</span><span class="token string">";"</span><span class="token operator">&gt;</span> /usr/local/nginx/conf/blockip.conf        <span class="token comment">#重启nginx</span>        /usr/local/nginx/sbin/nginx -s reload        <span class="token comment">#清空之前的日志，从最新的开始截取</span>        <span class="token builtin class-name">echo</span> <span class="token string">""</span> <span class="token operator">&gt;</span> /usr/local/nginx/logs/access.log<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查找规则"><a href="#查找规则" class="headerlink" title="查找规则"></a>查找规则</h3><blockquote><p>Nginx日志分析<br>日志格式：’$remote_addr - $remote_user [$time_local] “$request” $status $body_bytes_sent “$http_referer” “$http_user_agent” “$http_x_forwarded_for”‘<br>日志记录：27.189.231.39 - - [09/Apr/2016:17:21:23 +0800] “GET /Public/index/images/icon_pre.png HTTP/1.1” 200 44668 “<a href="http://www.test.com/Public/index/css/global.css&quot;">http://www.test.com/Public/index/css/global.css"</a> “Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36” “-“</p></blockquote><h4 id="统计日志中访问最多的10个IP"><a href="#统计日志中访问最多的10个IP" class="headerlink" title="统计日志中访问最多的10个IP"></a>统计日志中访问最多的10个IP</h4><p>思路：对第一列进行去重，并输出出现的次数</p><ul><li>方法1：<code>$ awk '{a[$1]++}END{for(i in a)print a[i],i|"sort -k1 -nr|head -n10"}' access.log</code></li><li>方法2：<code>$ awk '{print $1}' access.log |sort |uniq -c |sort -k1 -nr |head -n10</code></li></ul><blockquote><p>说明：a[$1]++ 创建数组a，以第一列作为下标，使用运算符++作为数组元素，元素初始值为0。处理一个IP时，下标是IP，元素加1，处理第二个IP时，下标是IP，元素加1，如果这个IP已经存在，则元素再加1，也就是这个IP出现了两次，元素结果是2，以此类推。因此可以实现去重，统计出现次数。</p></blockquote><h4 id="统计日志中访问大于100次的IP"><a href="#统计日志中访问大于100次的IP" class="headerlink" title="统计日志中访问大于100次的IP"></a>统计日志中访问大于100次的IP</h4><ul><li>方法1：<code>$ awk '{a[$1]++}END{for(i in a){if(a[i]&gt;100)print i,a[i]}}' access.log</code></li><li>方法2：<code>$ awk '{a[$1]++;if(a[$1]&gt;100){b[$1]++}}END{for(i in b){print i,a[i]}}' access.log</code></li></ul><blockquote><p>说明：方法1是将结果保存a数组后，输出时判断符合要求的IP。方法2是将结果保存a数组时，并判断符合要求的IP放到b数组，最后打印b数组的IP。</p></blockquote><h4 id="统计2016年4月9日一天内访问最多的10个IP"><a href="#统计2016年4月9日一天内访问最多的10个IP" class="headerlink" title="统计2016年4月9日一天内访问最多的10个IP"></a>统计2016年4月9日一天内访问最多的10个IP</h4><p>思路：先过滤出这个时间段的日志，然后去重，统计出现次数</p><ul><li>方法1：<code>$ awk '$4&gt;="[9/Apr/2016:00:00:01" &amp;&amp; $4&lt;="[9/Apr/2016:23:59:59" {a[$1]++}END{for(i in a)print a[i],i|"sort -k1 -nr|head -n10"}' access.log</code></li><li>方法2：<code>$ sed -n '/\[9\/Apr\/2016:00:00:01/,/\[9\/Apr\/2016:23:59:59/p' access.log |sort |uniq -c |sort -k1 -nr |head -n10</code>  #前提开始时间与结束时间日志中必须存在</li></ul><h4 id="统计当前时间前一分钟的访问数"><a href="#统计当前时间前一分钟的访问数" class="headerlink" title="统计当前时间前一分钟的访问数"></a>统计当前时间前一分钟的访问数</h4><p>思路：先获取当前时间前一分钟对应日志格式的时间，再匹配统计</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token assign-left variable">date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> -d <span class="token string">'-1 minute'</span> +%d/%b/%Y:%H:%M<span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token function">awk</span> -vdate<span class="token operator">=</span><span class="token variable">$date</span> <span class="token string">'<span class="token variable">$0</span>~date{c++}END{print c}'</span> access.log$ <span class="token assign-left variable">date</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> -d <span class="token string">'-1 minute'</span> +%d/%b/%Y:%H:%M<span class="token variable">)</span></span><span class="token punctuation">;</span><span class="token function">awk</span> -vdate<span class="token operator">=</span><span class="token variable">$date</span> <span class="token string">'<span class="token variable">$4</span>&gt;="["date":00" &amp;&amp; <span class="token variable">$4</span>&lt;="["date":59"{c++}END{print c}'</span> access.log$ <span class="token function">grep</span> -c <span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> -d <span class="token string">'-1 minute'</span> +%d/%b/%Y:%H:%M<span class="token variable">)</span></span> access.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>说明：date +%d/%b/%Y:%H:%M –&gt; 09/Apr/2016:01:55</p></blockquote><h4 id="统计访问最多的前10个页面（-request）"><a href="#统计访问最多的前10个页面（-request）" class="headerlink" title="统计访问最多的前10个页面（$request）"></a>统计访问最多的前10个页面（$request）</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">awk</span> <span class="token string">'{a[<span class="token variable">$7</span>]++}END{for(i in a)print a[i],i|"sort -k1 -nr|head -n10"}'</span> access.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="统计每个URL访问内容的总大小（-body-bytes-sent）"><a href="#统计每个URL访问内容的总大小（-body-bytes-sent）" class="headerlink" title="统计每个URL访问内容的总大小（$body_bytes_sent）"></a>统计每个URL访问内容的总大小（$body_bytes_sent）</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">awk</span> <span class="token string">'{a[<span class="token variable">$7</span>]++;size[<span class="token variable">$7</span>]+=<span class="token variable">$10</span>}END{for(i in a)print a[i],size[i],i}'</span> access.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="统计每个IP访问状态码数量（-status）"><a href="#统计每个IP访问状态码数量（-status）" class="headerlink" title="统计每个IP访问状态码数量（$status）"></a>统计每个IP访问状态码数量（$status）</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">awk</span> <span class="token string">'{a[<span class="token variable">$1</span>" "<span class="token variable">$9</span>]++}END{for(i in a)print i,a[i]}'</span> access.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="统计访问状态码为404的IP及出现次数"><a href="#统计访问状态码为404的IP及出现次数" class="headerlink" title="统计访问状态码为404的IP及出现次数"></a>统计访问状态码为404的IP及出现次数</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">awk</span> <span class="token string">'{if(<span class="token variable">$9</span>~/404/)a[<span class="token variable">$1</span>" "<span class="token variable">$9</span>]++}END{for(i in a)print i,a[i]}'</span> access.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> block </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker不启动获取镜像内容</title>
      <link href="2022/12/21/docker-bu-qi-dong-huo-qu-jing-xiang-nei-rong/"/>
      <url>2022/12/21/docker-bu-qi-dong-huo-qu-jing-xiang-nei-rong/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker create --name suspect-container suspect-image:latest<span class="token operator">&lt;</span>id<span class="token operator">&gt;</span> <span class="token punctuation">..</span>.<span class="token comment"># </span>docker <span class="token builtin class-name">export</span> suspect-container <span class="token operator">&gt;</span> suspect-container.tar<span class="token comment"># or</span>docker <span class="token function">cp</span> <span class="token operator">&lt;</span>id<span class="token operator">&gt;</span>:/ ./<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://zhuanlan.zhihu.com/p/442658282">https://zhuanlan.zhihu.com/p/442658282</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-标签</title>
      <link href="2022/12/06/git-biao-qian/"/>
      <url>2022/12/06/git-biao-qian/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> tag <span class="token comment"># show local tags</span><span class="token function">git</span> tag -l <span class="token string">"v1.8.5*"</span> <span class="token comment">#</span><span class="token function">git</span> ls-remote --tags origin <span class="token comment"># show remote tags</span><span class="token function">git</span> tag v0.0.3 <span class="token comment"># create tag. 轻量标签本质上是将提交校验和存储到一个文件中——没有保存任何其他信息. 轻量标签很像一个不会改变的分支——它只是某个特定提交的引用</span><span class="token function">git</span> tag -a v0.0.3 -m <span class="token string">"my version 1.4"</span> <span class="token comment"># create tag. 附注标签是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证</span><span class="token function">git</span> tag -a v1.2 9fceb02 <span class="token comment"># 后期打标签. 对历史提交 9fceb02 打标签 </span><span class="token function">git</span> push origin v0.0.3 <span class="token comment"># push tag v0.0.3</span><span class="token function">git</span> push origin --tags <span class="token comment"># push all tags</span><span class="token function">git</span> tag -d v0.0.3 <span class="token comment"># 删除本地标签</span><span class="token function">git</span> checkout -b version2 v0.0.3 <span class="token comment"># 检出标签到新分支</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> tag </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac-解åbrew安装python2</title>
      <link href="2022/12/06/mac-brew-an-zhuang-python2/"/>
      <url>2022/12/06/mac-brew-an-zhuang-python2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>此方法可以与 <code>brew install python3</code> 方式安装的 <code>python3</code> 共存。</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> pyenvpyenv <span class="token function">install</span> <span class="token number">2.7</span>.18<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>pyenv root<span class="token variable">)</span></span>/shims:<span class="token variable">${<span class="token environment constant">PATH</span>}</span>"</span>pyenv global <span class="token number">2.7</span>.18python --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>加入环境变量</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">'PATH=<span class="token variable"><span class="token variable">$(</span>pyenv root<span class="token variable">)</span></span>/shims:<span class="token environment constant">$PATH</span>'</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac-解决方案</title>
      <link href="2022/12/06/mac-jie-jue-fang-an/"/>
      <url>2022/12/06/mac-jie-jue-fang-an/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac软件打开提示：已损坏，无法打开。您应该将它移到废纸娄-怎么解决"><a href="#Mac软件打开提示：已损坏，无法打开。您应该将它移到废纸娄-怎么解决" class="headerlink" title="Mac软件打开提示：已损坏，无法打开。您应该将它移到废纸娄 怎么解决?"></a>Mac软件打开提示：已损坏，无法打开。您应该将它移到废纸娄 怎么解决?</h2><ol><li>打开任何来源 执行 <code>sudo spctl --master-disable</code></li></ol><ul><li>可以看到 系统偏好设置 – 安全性与隐私 – 通用 ，中的【任何来源】，选择</li></ul><ol start="2"><li>终端输入<code>xattr -cr</code> ，把软件拖入终端，回车</li><li>重新打开看看</li></ol><blockquote><p><a href="https://www.xxmac.com/apple-app.html">https://www.xxmac.com/apple-app.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运维-Nginx安装http_v2_module模块</title>
      <link href="2022/11/14/yun-wei-nginx-an-zhuang-http-v2-module-mo-kuai/"/>
      <url>2022/11/14/yun-wei-nginx-an-zhuang-http-v2-module-mo-kuai/</url>
      
        <content type="html"><![CDATA[<ol><li><p>下载</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://nginx.org/download/nginx-1.22.1.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>如果已经安装<code>Nginx</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">configure arguments: --prefix<span class="token operator">=</span>/etc/nginx --sbin-path<span class="token operator">=</span>/usr/sbin/nginx --modules-path<span class="token operator">=</span>/usr/lib64/nginx/modules --conf-path<span class="token operator">=</span>/etc/nginx/nginx.conf --error-log-path<span class="token operator">=</span>/var/log/nginx/error.log --http-log-path<span class="token operator">=</span>/var/log/nginx/access.log --pid-path<span class="token operator">=</span>/var/run/nginx.pid --lock-path<span class="token operator">=</span>/var/run/nginx.lock --http-client-body-temp-path<span class="token operator">=</span>/var/cache/nginx/client_temp --http-proxy-temp-path<span class="token operator">=</span>/var/cache/nginx/proxy_temp --http-fastcgi-temp-path<span class="token operator">=</span>/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path<span class="token operator">=</span>/var/cache/nginx/uwsgi_temp --http-scgi-temp-path<span class="token operator">=</span>/var/cache/nginx/scgi_temp --user<span class="token operator">=</span>nginx --group<span class="token operator">=</span>nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt<span class="token operator">=</span><span class="token string">'-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC'</span> --with-ld-opt<span class="token operator">=</span><span class="token string">'-Wl,-z,relro -Wl,-z,now -pie'</span> --add-dynamic-module<span class="token operator">=</span>/opt/ngx_http_geoip2_module --add-module<span class="token operator">=</span>/opt/nginx-module-vts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>编译</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure <span class="token variable">${原有参数}</span> --with-http_v2_module<span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>替换二进制<code>nginx</code>文件</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blackbox监控网站证书状态</title>
      <link href="2022/11/14/yun-wei-blackbox-exporter/"/>
      <url>2022/11/14/yun-wei-blackbox-exporter/</url>
      
        <content type="html"><![CDATA[<h2 id="下载、安装"><a href="#下载、安装" class="headerlink" title="下载、安装"></a>下载、安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /services<span class="token function">wget</span> https://github.com/prometheus/blackbox_exporter/releases/download/v0.21.1/blackbox_exporter-0.21.1.linux-amd64.tar.gz<span class="token function">tar</span> xvf blackbox_exporter-0.21.1.linux-amd64.tar.gz<span class="token function">ln</span> -s /services/blackbox_exporter-0.21.1.linux-amd64 /services/blackbox_exporter<span class="token builtin class-name">cd</span> /services/blackbox_exporter./blackbox_exporter <span class="token comment"># 启动，或者用service方式启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Prometheus-配置文件里添加"><a href="#Prometheus-配置文件里添加" class="headerlink" title="Prometheus 配置文件里添加"></a>Prometheus 配置文件里添加</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'blackbox'</span>  <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /probe  <span class="token key atrule">params</span><span class="token punctuation">:</span>    <span class="token key atrule">module</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>http_2xx<span class="token punctuation">]</span>  <span class="token comment"># Look for a HTTP 200 response.</span>  <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//www.ymipro.com <span class="token comment"># 检测的网址</span>      <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//ymicj.com <span class="token comment"># 检测的网址</span>  <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">]</span>      <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __param_target    <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__param_target<span class="token punctuation">]</span>      <span class="token key atrule">target_label</span><span class="token punctuation">:</span> instance    <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__      <span class="token key atrule">replacement</span><span class="token punctuation">:</span> 172.17.0.1<span class="token punctuation">:</span><span class="token number">9115</span> <span class="token comment"># 这里是上面启动blackbox_exporter的IP和端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>scrape_configs</p></blockquote><h2 id="Grafana-中显示"><a href="#Grafana-中显示" class="headerlink" title="Grafana 中显示"></a>Grafana 中显示</h2><p>导入<code>13230</code>模板</p><h2 id="Prometheus-Alert-Manager-报警"><a href="#Prometheus-Alert-Manager-报警" class="headerlink" title="Prometheus Alert Manager 报警"></a>Prometheus Alert Manager 报警</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">groups</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 证书还有30天过期    <span class="token key atrule">rules</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">alert</span><span class="token punctuation">:</span> SslCertificateWillExpireSoon        <span class="token key atrule">expr</span><span class="token punctuation">:</span> probe_ssl_earliest_cert_expiry <span class="token punctuation">-</span> time() &lt; 86400 * 30        <span class="token key atrule">for</span><span class="token punctuation">:</span> 5m        <span class="token key atrule">labels</span><span class="token punctuation">:</span>          <span class="token key atrule">severity</span><span class="token punctuation">:</span> warning        <span class="token key atrule">annotations</span><span class="token punctuation">:</span>          <span class="token key atrule">summary</span><span class="token punctuation">:</span> <span class="token string">"SSL certificate will expire soon (instance {{ $labels.instance }})"</span>          <span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"SSL certificate expires in 30 days\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"</span>  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 证书已过期    <span class="token key atrule">rules</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">alert</span><span class="token punctuation">:</span> SslCertificateExpired        <span class="token key atrule">expr</span><span class="token punctuation">:</span> probe_ssl_earliest_cert_expiry <span class="token punctuation">-</span> time()  &lt;= 0        <span class="token key atrule">for</span><span class="token punctuation">:</span> 5m        <span class="token key atrule">labels</span><span class="token punctuation">:</span>          <span class="token key atrule">severity</span><span class="token punctuation">:</span> error        <span class="token key atrule">annotations</span><span class="token punctuation">:</span>          <span class="token key atrule">summary</span><span class="token punctuation">:</span> <span class="token string">"SSL certificate expired (instance {{ $labels.instance }})"</span>          <span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"SSL certificate has expired already\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> prometheus </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-使用ref获取dom元素</title>
      <link href="2022/11/02/vue-shi-yong-ref-huo-qu-dom-yuan-su/"/>
      <url>2022/11/02/vue-shi-yong-ref-huo-qu-dom-yuan-su/</url>
      
        <content type="html"><![CDATA[<blockquote><p>vue 2.x</p></blockquote><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;div ref="myRef"&gt;&lt;/div&gt;this.$refs.myRef<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>vue 3.x 单个</p></blockquote><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div ref="myRef"&gt;获取单个DOM元素&lt;/div&gt;&lt;/template&gt;&lt;script&gt;import { ref, onMounted } from 'vue';export default {  setup() {    const myRef = ref(null);    onMounted(() =&gt; {      console.dir(myRef.value);    });     return {      myRef    };  }};&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>vue 3.x 多个(一般用户获取数组)</p></blockquote><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;获取多个DOM元素&lt;/div&gt;  &lt;ul&gt;    &lt;li v-for="(item, index) in arr" :key="index" :ref="setRef"&gt;      {{ item }}    &lt;/li&gt;  &lt;/ul&gt;&lt;/template&gt;&lt;script&gt;import { ref, nextTick } from 'vue';export default {  setup() {    const arr = ref([1, 2, 3]);    // 存储dom数组    const myRef = ref([]);    const setRef = (el) =&gt; {      myRef.value.push(el);    };    nextTick(() =&gt; {      console.dir(myRef.value);    });    return {      arr,      setRef    };  }};&lt;/script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://blog.csdn.net/weixin_43233914/article/details/108776124">https://blog.csdn.net/weixin_43233914/article/details/108776124</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3-按需引用ant时候使用图标的问题</title>
      <link href="2022/11/02/vue3-an-xu-yin-yong-ant-shi-hou-shi-yong-tu-biao-de-wen-ti/"/>
      <url>2022/11/02/vue3-an-xu-yin-yong-ant-shi-hou-shi-yong-tu-biao-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<blockquote><p>main.js</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> antIcons <span class="token keyword">from</span> <span class="token string">"@ant-design/icons-vue"</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">...</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>antIcons<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  app<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> antIcons<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>globalProperties<span class="token punctuation">.</span>$antIcons <span class="token operator">=</span> antIcons<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用</p></blockquote><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;p class="ant-upload-drag-icon"&gt;  &lt;inbox-outlined&gt;&lt;/inbox-outlined&gt;&lt;/p&gt;&lt;p class="ant-upload-drag-icon"&gt;&lt;InboxOutlined&gt;&lt;/InboxOutlined&gt;&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://segmentfault.com/q/1010000038972015">https://segmentfault.com/q/1010000038972015</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3-阻止事件冒泡</title>
      <link href="2022/11/02/vue3-zu-zhi-shi-jian-mou-pao/"/>
      <url>2022/11/02/vue3-zu-zhi-shi-jian-mou-pao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;div @click="doSomething"&gt;&lt;span @click="stopPropagation($event)"&gt;&lt;el-dropdown  trigger="click"&gt;&lt;div&gt;点击&lt;/div&gt;&lt;template #dropdown&gt;                &lt;el-dropdown-menu&gt;                  &lt;el-dropdown-item&gt;item1&lt;/el-dropdown-item&gt;                   &lt;el-dropdown-item&gt;item2&lt;/el-dropdown-item&gt;                &lt;/el-dropdown-menu&gt;              &lt;/template&gt;&lt;/el-dropdown &gt;&lt;/span&gt;&lt;/div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">stopPropagation</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token operator">:</span>Event</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> <span class="token function-variable function">doSomething</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> <span class="token comment">// 这里写你的js逻辑</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>$event</code> <code>e.stopPropagation()</code></p></blockquote><blockquote><p><a href="https://blog.csdn.net/ClearClever/article/details/124604536">https://blog.csdn.net/ClearClever/article/details/124604536</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS单机部署ELK - v6</title>
      <link href="2022/10/08/centos-elk/"/>
      <url>2022/10/08/centos-elk/</url>
      
        <content type="html"><![CDATA[<h2 id="安装JAVA环境"><a href="#安装JAVA环境" class="headerlink" title="安装JAVA环境"></a>安装JAVA环境</h2><p>因为<code>ELK</code>安装需要<code>JAVA</code>环境，首先安装<code>JAVA</code>环境</p><h3 id="安装wget-vim"><a href="#安装wget-vim" class="headerlink" title="安装wget vim"></a>安装<code>wget</code> <code>vim</code></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># install wget,vim</span><span class="token function">sudo</span> yum -y <span class="token function">install</span> <span class="token function">wget</span> <span class="token function">vim</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="安装java"><a href="#安装java" class="headerlink" title="安装java"></a>安装<code>java</code></h3><ol><li>下载，解压</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># java</span><span class="token function">sudo</span> <span class="token function">wget</span> https://repo.huaweicloud.com/java/jdk/8u201-b09/jdk-8u201-linux-x64.tar.gz<span class="token function">sudo</span> <span class="token function">tar</span> -zxvf jdk-8u201-linux-x64.tar.gz -C /usr/local/<span class="token function">sudo</span> <span class="token function">mv</span> /usr/local/jdk1.8.0_201/ /usr/local/jdk<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>配置环境变量</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>文件中追加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/local/jdk<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/lib/dt.jar:<span class="token variable">$JAVA_HOME</span>/lib/tools.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="3"><li>使修改不重新登录生效</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li><p>查看是否成功 <code>java -version</code></p></li><li><p>设置软链接</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/jdk/bin/java /usr/bin/java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h2><p>下载，安装包</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">wget</span> https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.1.0.rpm<span class="token function">sudo</span> <span class="token function">rpm</span> -ivh elasticsearch-6.1.0.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改配置文件<code>elasticsearch.yml</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/elasticsearch/elasticsearch.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>配置文件中可以定义data和logs存放的路径</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#设置data存放的路径，以下是默认data路径</span><span class="token key atrule">path.data</span><span class="token punctuation">:</span> /var/lib/elasticsearch <span class="token comment">#设置logs日志的路径，以下是默认logs路径</span><span class="token key atrule">path.logs</span><span class="token punctuation">:</span> /var/log/elasticsearch <span class="token comment">#设置内存不使用交换分区</span><span class="token key atrule">bootstrap.memory_lock</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment">#设置允许所有ip可以连接该elasticsearch</span><span class="token key atrule">network.host</span><span class="token punctuation">:</span> 0.0.0.0 <span class="token comment">#开启监听的端口为9200</span><span class="token key atrule">http.port</span><span class="token punctuation">:</span> <span class="token number">9200</span> <span class="token comment">#增加新的参数，为了让elasticsearch-head插件可以访问es</span><span class="token key atrule">http.cors.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">http.cors.allow-origin</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改data、logs权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> -R elasticsearch:elasticsearch /var/lib/elasticsearch<span class="token function">sudo</span> <span class="token function">chown</span> -R elasticsearch:elasticsearch /var/log/elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>启动Elasticsearch</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动</span><span class="token function">sudo</span> systemctl start elasticsearch<span class="token comment">#查看状态</span><span class="token function">sudo</span> systemctl status elasticsearch<span class="token comment">#设置开机启动</span><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置防火墙允许端口流量通过</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> firewall-cmd --add-port<span class="token operator">=</span><span class="token number">9200</span>/tcp --permanent<span class="token function">sudo</span> firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看是否启动成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 服务器最小化安装时无法使用netstat，需要首先安装net-tools</span><span class="token function">sudo</span> yum -y <span class="token function">install</span> net-tools<span class="token comment">#查看是否启动成功</span><span class="token function">netstat</span> -antp <span class="token operator">|</span><span class="token function">grep</span> <span class="token number">9200</span><span class="token comment">#查看进程</span><span class="token function">ps</span> -ef <span class="token operator">|</span> <span class="token function">grep</span> elasticsearch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>控制台输入curl <a href="http://127.0.0.1:9200测试访问是否正常（或通过浏览器访问http://127.0.0.1:9200）">http://127.0.0.1:9200测试访问是否正常（或通过浏览器访问http://127.0.0.1:9200）</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> http://127.0.0.1:9200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装Logstash-据说吃营硬件资源，可不安装，使用filebeat代替"><a href="#安装Logstash-据说吃营硬件资源，可不安装，使用filebeat代替" class="headerlink" title="安装Logstash - 据说吃营硬件资源，可不安装，使用filebeat代替"></a>安装Logstash - 据说吃营硬件资源，可不安装，使用<code>filebeat</code>代替</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">wget</span> https://artifacts.elastic.co/downloads/logstash/logstash-6.1.0.rpm<span class="token function">sudo</span> <span class="token function">rpm</span> -ivh logstash-6.1.0.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/logstash/logstash.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>按需修改</p></blockquote><p>修改data、logs权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">chown</span> -R logstash:logstash /var/lib/logstash<span class="token function">sudo</span> <span class="token function">chown</span> -R logstash:logstash /var/log/logstash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>启动Logstash</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动</span><span class="token function">sudo</span> systemctl start logstash<span class="token comment">#查看Logstash状态</span><span class="token function">sudo</span> systemctl status logstash<span class="token comment">#开机启动Logstash</span><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> logstash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装Kibana"><a href="#安装Kibana" class="headerlink" title="安装Kibana"></a>安装Kibana</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">wget</span> https://artifacts.elastic.co/downloads/kibana/kibana-6.1.0-x86_64.rpm<span class="token function">sudo</span> <span class="token function">rpm</span> -ivh kibana-6.1.0-x86_64.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>修改配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/kibana/kibana.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#kibana页面映射在5601端口</span>server.port: <span class="token number">5601</span> <span class="token comment">#允许所有ip访问5601端口</span>server.host: <span class="token string">"0.0.0.0"</span> <span class="token comment">#elasticsearch所在的ip及监听的地址</span>elasticsearch.url: <span class="token string">"http://localhost:9200"</span> kibana.index: <span class="token string">".kibana"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动Kibana</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#启动</span><span class="token function">sudo</span> systemctl start kibana<span class="token comment">#查看状态</span><span class="token function">sudo</span> systemctl status kibana设置开机启动<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> kibana<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开启防火墙端口</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> firewall-cmd --add-port<span class="token operator">=</span><span class="token number">5601</span>/tcp --permanent<span class="token function">sudo</span> firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>访问5601端口查看是否正常显示数据，有回显数据则正常</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> http://127.0.0.1:5601<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="测试日志发送接收情况-在本地服务器测试发送syslog日志数据-未安装Logstash就不要做这一步"><a href="#测试日志发送接收情况-在本地服务器测试发送syslog日志数据-未安装Logstash就不要做这一步" class="headerlink" title="测试日志发送接收情况 -在本地服务器测试发送syslog日志数据 - 未安装Logstash就不要做这一步"></a>测试日志发送接收情况 -在本地服务器测试发送syslog日志数据 - 未安装Logstash就不要做这一步</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看rsyslog服务状态</span>systemctl status rsyslog<span class="token comment">#配置rsyslog.conf发送日志信息</span><span class="token function">sudo</span> <span class="token function">vi</span> /etc/rsyslog.conf<span class="token comment">#插入以下数据，表示发送UDP数据至127.0.0.1的514端口</span>*.* @127.0.0.1:514<span class="token comment"># 重启rsyslog服务</span><span class="token function">sudo</span> systemctl restart rsyslog<span class="token comment"># 创建并配置Logstash配置文件conf</span><span class="token builtin class-name">cd</span> /etc/logstash/conf.d/<span class="token comment"># 这里添加了一个syslog.conf的配置文件，根据我们在logstash.yml中的配置，Logstash的配置文件要以.conf后缀结尾</span><span class="token function">sudo</span> <span class="token function">touch</span> syslog.conf<span class="token function">sudo</span> <span class="token function">vim</span> syslog.confinput <span class="token punctuation">{</span>  udp <span class="token punctuation">{</span>    port <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">514</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>output<span class="token punctuation">{</span>    elasticsearch <span class="token punctuation">{</span>        index <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">"syslog-device-server-%{+YYYY.MM.dd}"</span>        hosts <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">"127.0.0.1:9200"</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment"># 配置完成logstash的conf配置文件之后，测试其配置语法是否正确, 配置语法正确时会提示Configuration OK，存在WARNING可暂时忽略</span><span class="token function">sudo</span> /usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/syslog.conf -t<span class="token comment"># 执行命令，执行完成之后Ctrl+C</span><span class="token function">sudo</span> /usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/syslog.conf -r<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通过firefox浏览器elasticvue插件连接elasticsearch"><a href="#通过firefox浏览器elasticvue插件连接elasticsearch" class="headerlink" title="通过firefox浏览器elasticvue插件连接elasticsearch"></a>通过<code>firefox</code>浏览器<code>elasticvue</code>插件连接<code>elasticsearch</code></h2><p>地址: <a href="http://localhost:9200/">http://localhost:9200</a></p><p>查看elasticsearch索引是否建立，即日志数据是否output到elasticsearch数据库中存放</p><h2 id="filebeat-分析JSON日志文件"><a href="#filebeat-分析JSON日志文件" class="headerlink" title="filebeat 分析JSON日志文件"></a>filebeat 分析JSON日志文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.0.1-linux-x86_64.tar.gz<span class="token function">tar</span> xvf filebeat-6.0.1-linux-x86_64.tar.gz<span class="token function">mv</span> filebeat-6.0.1-linux-x86_64 filebeat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> filebeat/filebeat.yml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">filebeat.prospectors</span><span class="token punctuation">:</span><span class="token comment"># Each - is a prospector. Most options can be set at the prospector level, so</span><span class="token comment"># you can use different prospectors for various configurations.</span><span class="token comment"># Below are the prospector specific configurations.</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> log  <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">paths</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> /var/mylog/<span class="token important">*.log</span>  <span class="token key atrule">json.keys_under_root</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">json.overwrite_keys</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tags</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"myxx"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行扫描</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> filebeat./filebeat -e -c filebeat.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>ES</code>上看看有没有新建的索引，<code>Kibana</code>中<code>Management</code>里创建索引</p><blockquote><p><a href="https://blog.csdn.net/weixin_40133285/article/details/121788466">https://blog.csdn.net/weixin_40133285/article/details/121788466</a></p><p><a href="https://blog.csdn.net/yelllowcong/article/details/89452982">https://blog.csdn.net/yelllowcong/article/details/89452982</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
            <tag> log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ceopenvpn-connect客æ客户端证书增加不走vpn的ip</title>
      <link href="2022/10/06/openvpn-connect-ke-hu-duan-zheng-shu-zeng-jia-bu-zou-vpn-de-ip/"/>
      <url>2022/10/06/openvpn-connect-ke-hu-duan-zheng-shu-zeng-jia-bu-zou-vpn-de-ip/</url>
      
        <content type="html"><![CDATA[<p>客户端打开 *.ovpn证书文件，增加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">route <span class="token number">82.157</span>.234.29 <span class="token number">255.255</span>.255.255 net_gatewayroute <span class="token number">8.210</span>.126.80 <span class="token number">255.255</span>.255.255 net_gateway<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置文件里有两个<code>gateway</code></p><ul><li><code>net_gateway</code></li><li><code>vpn_gateway</code></li></ul><blockquote><p><a href="https://stackoverflow.com/questions/70224509/exclude-ip-from-openvpn-route">https://stackoverflow.com/questions/70224509/exclude-ip-from-openvpn-route</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> VPN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openvpn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装Python3</title>
      <link href="2022/10/06/centos-an-zhuang-python3/"/>
      <url>2022/10/06/centos-an-zhuang-python3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>不能卸载centos7自带的python2.7，因为yum等软件依赖于python2，而python2和python3不兼容，只能在保留原版本的基础上，重新安装一个python3（本次安装版本：3.8.5）</p><p>另外，任何有关python的组件安装后，都需要在python的安装目录下运行make install</p></blockquote><ol><li><p>安装必备</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token function">wget</span> zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc <span class="token function">make</span>  libffi-devel -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>下载源码/编译/安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~<span class="token function">wget</span> https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz<span class="token function">tar</span> -zxvf Python-3.8.5.tgz<span class="token builtin class-name">cd</span> Python-3.8.5./configure<span class="token function">make</span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>为所有用户安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/bin/python3 /usr/bin/python3<span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/bin/pip3 /usr/bin/pip3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>如果要替换系统的python，则按照 <a href="https://www.cnblogs.com/jizhong/p/15157828.html">教程</a> 里来试试</p>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go引入私有库</title>
      <link href="2022/10/03/go/"/>
      <url>2022/10/03/go/</url>
      
        <content type="html"><![CDATA[<h2 id="go-mod私库"><a href="#go-mod私库" class="headerlink" title="go mod私库"></a><code>go mod</code>私库</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --add --global url.<span class="token string">"git@github.com:"</span>.insteadOf https://github.com<span class="token function">git</span> config --add --global url.<span class="token string">"git@bitbucket.org:"</span>.insteadOf https://bitbucket.org<span class="token function">git</span> config --add --global url.<span class="token string">"git@gitlab.com:"</span>.insteadOf https://gitlab.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">go <span class="token function">env</span> -w <span class="token assign-left variable">GOPRIVATE</span><span class="token operator">=</span><span class="token string">"github.com/sgostarter,github.com/rain-rain-goaway"</span>go <span class="token function">env</span> -w <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装ngx_http_geoip2_module模块</title>
      <link href="2022/07/21/nginx-an-zhuang-ngx-http-geoip2-module-mo-kuai/"/>
      <url>2022/07/21/nginx-an-zhuang-ngx-http-geoip2-module-mo-kuai/</url>
      
        <content type="html"><![CDATA[<h2 id="CentOS7下安装"><a href="#CentOS7下安装" class="headerlink" title="CentOS7下安装"></a><code>CentOS7</code>下安装</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt<span class="token comment"># libmaxminddb</span><span class="token builtin class-name">cd</span> /opt<span class="token function">wget</span> https://github.com/maxmind/libmaxminddb/releases/download/1.7.1/libmaxminddb-1.7.1.tar.gz<span class="token function">tar</span> xvf libmaxminddb-1.7.1.tar.gz<span class="token builtin class-name">cd</span> libmaxminddb-1.7.1./configure<span class="token function">make</span><span class="token function">make</span> check<span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">sudo</span> <span class="token function">sh</span> -c <span class="token string">"echo /usr/local/lib  &gt;&gt; /etc/ld.so.conf.d/local.conf"</span><span class="token function">sudo</span> ldconfig<span class="token comment"># geoipupdate</span><span class="token function">wget</span> https://github.com/maxmind/geoipupdate/releases/download/v6.0.0/geoipupdate_6.0.0_linux_386.tar.gz<span class="token function">tar</span> -xvf geoipupdate_6.0.0_linux_386.tar.gz<span class="token function">cp</span> /opt/geoipupdate_6.0.0_linux_386/geoipupdate /usr/local/bin/<span class="token comment"># login https://www.maxmind.com, register account, get token on https://www.maxmind.com/en/accounts/732089/license-key/create</span><span class="token function">cat</span> <span class="token operator">&gt;</span> /usr/local/etc/GeoIP.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOTAccountID &lt;your_account&gt;LicenseKey &lt;your_licence&gt;EditionIDs GeoLite2-ASN GeoLite2-City GeoLite2-CountrEOT</span><span class="token comment"># download db to /usr/local/share/GeoIP/</span>geoipupdate -v<span class="token comment"># creat cron task : crontab -e add</span><span class="token number">0</span> * * * <span class="token number">6</span> /usr/local/bin/geoipupdate <span class="token operator">&gt;</span> /var/log/geoipupdate.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token comment"># clone ngx_http_geoip2_module</span><span class="token function">git</span> clone https://github.com/leev/ngx_http_geoip2_module.git<span class="token comment"># get nginx source | http://nginx.org/</span><span class="token function">wget</span> http://nginx.org/download/nginx-1.25.2.tar.gz<span class="token function">tar</span> xvf nginx-1.25.2.tar.gz<span class="token builtin class-name">cd</span> nginx-1.25.2<span class="token comment"># install nginx dependency</span><span class="token function">sudo</span> yum -y <span class="token function">install</span> gcc gcc-c++<span class="token function">sudo</span> yum -y <span class="token function">install</span> pcre pcre-devel<span class="token function">sudo</span> yum -y <span class="token function">install</span> zlib zlib-devel<span class="token function">sudo</span> yum -y <span class="token function">install</span> openssl openssl-devel<span class="token comment"># build nginx</span><span class="token comment"># --add-dynamic-module=/opt/ngx_http_geoip2_module</span>./configure <span class="token operator">&lt;</span>这里填写 nginx -V 获取的参数<span class="token operator">&gt;</span> --add-dynamic-module<span class="token operator">=</span>/opt/ngx_http_geoip2_module<span class="token function">sudo</span> <span class="token function">make</span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a><code>Nginx</code>配置</h2><h3 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h3><ol><li>nginx.conf第一行增加 <code>load_module modules/ngx_http_geoip2_module.so;</code></li><li>nginx.conf的<code>http</code>下增加<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">geoip2 /usr/local/share/GeoIP/GeoLite2-City.mmdb <span class="token punctuation">{</span>    <span class="token variable">$geoip2_data_city_name</span> <span class="token assign-left variable">default</span><span class="token operator">=</span>mars city names  zh-CN<span class="token punctuation">;</span><span class="token punctuation">}</span>geoip2 /usr/local/share/GeoIP/GeoLite2-Country.mmdb <span class="token punctuation">{</span>    auto_reload 5m<span class="token punctuation">;</span>    <span class="token variable">$geoip2_metadata_country_build</span> metadata build_epoch<span class="token punctuation">;</span>    <span class="token variable">$geoip2_data_country_code</span> <span class="token assign-left variable">default</span><span class="token operator">=</span>US  country iso_code<span class="token punctuation">;</span>    <span class="token variable">$geoip2_data_country_name</span> country names  zh-CN<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><code>server</code>下<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">location / <span class="token punctuation">{</span>  proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>  proxy_set_header X-Forwarded-For <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>  proxy_set_header geoip2_data_city_name <span class="token variable">$geoip2_data_city_name</span><span class="token punctuation">;</span>  proxy_set_header geoip2_data_country_name <span class="token variable">$geoip2_data_country_name</span><span class="token punctuation">;</span>  proxy_set_header geoip2_data_country_code <span class="token variable">$geoip2_data_country_code</span><span class="token punctuation">;</span>  proxy_pass http://127.0.0.1:12345<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mmdblookup --file /usr/local/share/GeoIP/GeoLite2-City.mmdb --ip <span class="token number">183.198</span>.158.3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h3><h4 id="屏蔽某些國家-server下"><a href="#屏蔽某些國家-server下" class="headerlink" title="屏蔽某些國家 - server下"></a>屏蔽某些國家 - <code>server</code>下</h4><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">if ($geoip2_data_country_code = "AK") {    return 403;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="myip-server下"><a href="#myip-server下" class="headerlink" title="myip - server下"></a>myip - <code>server</code>下</h4><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">/</span>myip <span class="token punctuation">{</span>  <span class="token keyword">default_type</span> application<span class="token operator">/</span>json<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">200</span> <span class="token string">'{"ip":$http_x_forwarded_for,"countryCode":"$geoip2_country_code","countryName":"$geoip2_country_name","citySubdivisions":"$geoip2_data_city_subdivisions","cityName":"$geoip2_data_city_name"};'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ymicj配置"><a href="#ymicj配置" class="headerlink" title="ymicj配置"></a><code>ymicj</code>配置</h4><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token keyword">http</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>geoip2 <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>GeoIP<span class="token operator">/</span>GeoLite2<span class="token operator">-</span>City<span class="token punctuation">.</span>mmdb <span class="token punctuation">{</span>    <span class="token variable">$geoip</span><span class="token number">2</span>_data_city_name default<span class="token operator">=</span>mars city names zh<span class="token operator">-</span>CN<span class="token punctuation">;</span>    <span class="token variable">$geoip</span><span class="token number">2</span>_data_city_subdivisions default<span class="token operator">=</span>unknow subdivisions <span class="token number">0</span> names en<span class="token punctuation">;</span><span class="token punctuation">}</span>geoip2 <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>share<span class="token operator">/</span>GeoIP<span class="token operator">/</span>GeoLite2<span class="token operator">-</span>Country<span class="token punctuation">.</span>mmdb <span class="token punctuation">{</span>    auto_reload <span class="token number">5</span>m<span class="token punctuation">;</span>    <span class="token variable">$geoip</span><span class="token number">2</span>_metadata_country_build metadata build_epoch<span class="token punctuation">;</span>    <span class="token variable">$geoip</span><span class="token number">2</span>_data_country_code default<span class="token operator">=</span>US  country iso_code<span class="token punctuation">;</span>    <span class="token variable">$geoip</span><span class="token number">2</span>_data_country_name country names  zh<span class="token operator">-</span>CN<span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span><span class="token operator">*</span><span class="token punctuation">.</span>conf<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://blog.csdn.net/qq522044637/article/details/122703038">https://blog.csdn.net/qq522044637/article/details/122703038</a></p><p><a href="https://cloud.tencent.com/developer/article/1928504">https://cloud.tencent.com/developer/article/1928504</a></p><p><a href="https://blog.csdn.net/xiao_yi_xiao/article/details/121246553">https://blog.csdn.net/xiao_yi_xiao/article/details/121246553</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/security-controls/controlling-access-by-geoip/">https://docs.nginx.com/nginx/admin-guide/security-controls/controlling-access-by-geoip/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> http-geoip2-module </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装</title>
      <link href="2022/07/21/nginx-an-zhuang/"/>
      <url>2022/07/21/nginx-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="CentOS8系统"><a href="#CentOS8系统" class="headerlink" title="CentOS8系统"></a><code>CentOS8</code>系统</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> dnf <span class="token function">install</span> nginx<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> nginx<span class="token function">sudo</span> systemctl start nginx<span class="token function">sudo</span> firewall-cmd --permanent --add-service<span class="token operator">=</span>http<span class="token function">sudo</span> firewall-cmd --permanent --add-service<span class="token operator">=</span>https<span class="token function">sudo</span> firewall-cmd --reload<span class="token function">sudo</span> firewall-cmd --permanent --list-all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CentOS7系统"><a href="#CentOS7系统" class="headerlink" title="CentOS7系统"></a><code>CentOS7</code>系统</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><h4 id="yum方式安装最新版本"><a href="#yum方式安装最新版本" class="headerlink" title="yum方式安装最新版本"></a><code>yum</code>方式安装最新版本</h4><blockquote><p>如果没有安装<code>epel</code>则安装<code>sudo wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo</code></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> yum-utils -y<span class="token function">sudo</span> yum <span class="token function">install</span> nginx -y<span class="token function">sudo</span> systemctl start nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="源码方式替换最新版本-可选"><a href="#源码方式替换最新版本-可选" class="headerlink" title="源码方式替换最新版本 - 可选"></a>源码方式替换最新版本 - 可选</h4><ol><li>下载<code>Nginx</code><a href="http://nginx.org/en/download.html">源码</a></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> http://nginx.org/download/nginx-1.25.1.tar.gz<span class="token function">tar</span> xvf nginx-1.25.1.tar.gznginx -V <span class="token comment"># 获取安装版编译参数，输出的参数用于接下来的`./configure`命令中. 去除`dynamic`相关的参数. "x=dynamic" =&gt; "x"</span><span class="token builtin class-name">cd</span> nginx-1.25.1./configure --prefix<span class="token operator">=</span>/usr/share/nginx --sbin-path<span class="token operator">=</span>/usr/sbin/nginx --modules-path<span class="token operator">=</span>/usr/lib64/nginx/modules --conf-path<span class="token operator">=</span>/etc/nginx/nginx.conf --error-log-path<span class="token operator">=</span>/var/log/nginx/error.log --http-log-path<span class="token operator">=</span>/var/log/nginx/access.log --http-client-body-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/client_body --http-proxy-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/proxy --http-fastcgi-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/fastcgi --http-uwsgi-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/uwsgi --http-scgi-temp-path<span class="token operator">=</span>/var/lib/nginx/tmp/scgi --pid-path<span class="token operator">=</span>/run/nginx.pid --lock-path<span class="token operator">=</span>/run/lock/subsys/nginx --user<span class="token operator">=</span>nginx --group<span class="token operator">=</span>nginx --with-compat --with-debug --with-file-aio --with-google_perftools_module --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_degradation_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_image_filter_module<span class="token operator">=</span>dynamic --with-http_mp4_module --with-http_perl_module<span class="token operator">=</span>dynamic --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-http_xslt_module<span class="token operator">=</span>dynamic --with-mail<span class="token operator">=</span>dynamic --with-mail_ssl_module --with-pcre --with-pcre-jit --with-stream<span class="token operator">=</span>dynamic --with-stream_ssl_module --with-stream_ssl_preread_module --with-threads --with-cc-opt<span class="token operator">=</span><span class="token string">'-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic'</span> --with-ld-opt<span class="token operator">=</span><span class="token string">'-Wl,-z,relro -specs=/usr/lib/rpm/redhat/redhat-hardened-ld -Wl,-E'</span><span class="token function">make</span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意去除<code>dynamic</code>相关的参数</p></blockquote><p>如果执行<code>./configure</code>出错，则大概率是本机缺少编译必须的包，例如本例参数需要的包如下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> redhat-rpm-config<span class="token function">sudo</span> yum <span class="token function">install</span> libxslt-devel<span class="token function">sudo</span> yum <span class="token function">install</span> gd gd-devel<span class="token function">sudo</span> yum <span class="token function">install</span> perl-ExtUtils-Embed<span class="token function">sudo</span> yum <span class="token function">install</span> gperftools-devel<span class="token function">sudo</span> yum -y <span class="token function">install</span> pcre-devel openssl openssl-devel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://blog.cpming.top/p/nginx-http-rewrite-module-requires-pcre">https://blog.cpming.top/p/nginx-http-rewrite-module-requires-pcre</a><br><a href="https://zhongxc.cc/9273.html">https://zhongxc.cc/9273.html</a></p></blockquote><blockquote><p>之后再编译nginx，则使用nginx -V查询编译参数，再编译尽量使用原参数</p></blockquote><h3 id="开机启动，防火墙设置"><a href="#开机启动，防火墙设置" class="headerlink" title="开机启动，防火墙设置"></a>开机启动，防火墙设置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart nginx<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> nginx<span class="token function">sudo</span> firewall-cmd --permanent --zone<span class="token operator">=</span>public --add-service<span class="token operator">=</span>http <span class="token function">sudo</span> firewall-cmd --permanent --zone<span class="token operator">=</span>public --add-service<span class="token operator">=</span>https<span class="token function">sudo</span> firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="PHP安装"><a href="#PHP安装" class="headerlink" title="PHP安装"></a><code>PHP</code>安装</h3><h4 id="PHP5"><a href="#PHP5" class="headerlink" title="PHP5"></a><code>PHP5</code></h4><blockquote><p>默认为php5，如果要安装php7，看下面</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> php php-fpm -y<span class="token function">sudo</span> yum <span class="token function">install</span> php-gd php-mysql php-mbstring php-xml php-mcrypt  php-imap php-odbc php-pear php-xmlrpc   -y<span class="token function">sudo</span> systemctl start php-fpm  <span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> php-fpm  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="PHP7"><a href="#PHP7" class="headerlink" title="PHP7"></a><code>PHP7</code></h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum -y <span class="token function">install</span> centos-release-scl.noarch<span class="token function">sudo</span> yum -y <span class="token function">install</span> rh-php72 rh-php72-php rh-php72-php-fpm rh-php72-php-mbstring rh-php72-php-gd rh-php72-php-xml rh-php72-php-odbc rh-php72-php-pear rh-php72-php-xmlrpc rh-php72-php-mysqlnd rh-php72-php-gd<span class="token function">sudo</span> systemctl start rh-php72-php-fpm.service<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> rh-php72-php-fpm.service<span class="token comment">## 執行php</span><span class="token comment"># 临时方案</span>scl <span class="token builtin class-name">enable</span> rh-php72 <span class="token string">"php -v"</span>scl <span class="token builtin class-name">enable</span> rh-php72 <span class="token function">bash</span> <span class="token comment"># 綁定到bash</span><span class="token comment"># 永久方案</span><span class="token builtin class-name">echo</span> <span class="token string">"export PATH=/opt/rh/rh-php72/root/usr/bin/:<span class="token environment constant">$PATH</span>"</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://wiki.centos.org/HowTos/php7">https://wiki.centos.org/HowTos/php7</a></p><p><a href="https://blog.csdn.net/weixin_35879114/article/details/115453056">https://blog.csdn.net/weixin_35879114/article/details/115453056</a></p></blockquote><h3 id="Nginx连接PHP"><a href="#Nginx连接PHP" class="headerlink" title="Nginx连接PHP"></a><code>Nginx</code>连接<code>PHP</code></h3><h4 id="Nginx配置文件"><a href="#Nginx配置文件" class="headerlink" title="Nginx配置文件"></a><code>Nginx</code>配置文件</h4><pre class="line-numbers language-none"><code class="language-none">location ~ \.php$ {  root           /usr/share/nginx/html;  fastcgi_pass   127.0.0.1:9000;  fastcgi_index  index.php;  fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;  include        fastcgi_params;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="测试文件"><a href="#测试文件" class="headerlink" title="测试文件"></a>测试文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /usr/share/nginx/html/info.php <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="其他系统"><a href="#其他系统" class="headerlink" title="其他系统"></a>其他系统</h2><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx获取客户端真实地址</title>
      <link href="2022/07/21/nginx-huo-qu-ke-hu-duan-zhen-shi-di-zhi/"/>
      <url>2022/07/21/nginx-huo-qu-ke-hu-duan-zhen-shi-di-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="一级Nginx代理"><a href="#一级Nginx代理" class="headerlink" title="一级Nginx代理"></a>一级<code>Nginx</code>代理</h2><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">location ~ ^/test {  proxy_pass http://127.0.0.1:8888;  proxy_set_header Host            $host;  proxy_set_header X-real-ip  $remote_addr;  proxy_set_header X-Forwarded-For $remote_addr;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>第一级<code>nginx</code>代理不需要改动，直接将原始客户端<code>ip</code>记录到<code>X-Forwarded-For</code>即可</p></blockquote><h2 id="第二级，以及之后可能存在的更多级代理"><a href="#第二级，以及之后可能存在的更多级代理" class="headerlink" title="第二级，以及之后可能存在的更多级代理"></a>第二级，以及之后可能存在的更多级代理</h2><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">location ~ ^/test {  proxy_pass http://127.0.0.1:12000;  proxy_set_header Host            $host;  proxy_set_header X-real-ip  $remote_addr;  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这样就将新一级代理的<code>ip</code>接到<code>X-Forwarded-For</code>的尾部，并用逗号分割。也就是说<code>X-Forwarded-For</code>是一个逗号拼接的<code>ip</code>字符串，想拿到原始<code>ip</code>只需要按逗号分割，取第一位<code>ip</code>即可</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://www.cnblogs.com/baiyb/p/9657233.html">https://www.cnblogs.com/baiyb/p/9657233.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> ip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx验证</title>
      <link href="2022/07/21/nginx-yan-zheng/"/>
      <url>2022/07/21/nginx-yan-zheng/</url>
      
        <content type="html"><![CDATA[<ol><li>生成用户密码文件</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@ymicj nginx<span class="token punctuation">]</span><span class="token comment"># htpasswd -c ./auth_conf admin</span>New password: Re-type new password: Adding password <span class="token keyword">for</span> user admin<span class="token punctuation">[</span>root@ymicj nginx<span class="token punctuation">]</span><span class="token comment"># ls</span>auth_conf  conf.d  default.d  nginx.conf.rpmsave<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>生成用户名密码也可以这样 <code>printf "your_username:$(openssl passwd -crypt your_password)\n" &gt;&gt; ./auth_conf</code></p><p>yum install httpd-tools -y</p></blockquote><ol start="2"><li>修改<code>Nginx</code>配置文件</li></ol><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">server {  ...  server_name  tunap.ymicj.com;  location / {    auth_basic "auth access!";    auth_basic_user_file /etc/nginx/auth_conf;    ...  }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>重启<code>Nginx</code>，查看效果</li></ol>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> auth </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx虚拟主机流量状态监控</title>
      <link href="2022/07/21/nginx-xu-ni-zhu-ji-liu-liang-zhuang-tai-jian-kong/"/>
      <url>2022/07/21/nginx-xu-ni-zhu-ji-liu-liang-zhuang-tai-jian-kong/</url>
      
        <content type="html"><![CDATA[<h2 id="获取已经运行的Nginx编译选项"><a href="#获取已经运行的Nginx编译选项" class="headerlink" title="获取已经运行的Nginx编译选项"></a>获取已经运行的Nginx编译选项</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$   nginx -Vnginx version: nginx/1.22.0built by gcc <span class="token number">4.8</span>.5 <span class="token number">20150623</span> <span class="token punctuation">(</span>Red Hat <span class="token number">4.8</span>.5-44<span class="token punctuation">)</span> <span class="token punctuation">(</span>GCC<span class="token punctuation">)</span> built with OpenSSL <span class="token number">1.0</span>.2k-fips  <span class="token number">26</span> Jan <span class="token number">2017</span>TLS SNI support enabledconfigure arguments: --prefix<span class="token operator">=</span>/etc/nginx --sbin-path<span class="token operator">=</span>/usr/sbin/nginx --modules-path<span class="token operator">=</span>/usr/lib64/nginx/modules --conf-path<span class="token operator">=</span>/etc/nginx/nginx.conf --error-log-path<span class="token operator">=</span>/var/log/nginx/error.log --http-log-path<span class="token operator">=</span>/var/log/nginx/access.log --pid-path<span class="token operator">=</span>/var/run/nginx.pid --lock-path<span class="token operator">=</span>/var/run/nginx.lock --http-client-body-temp-path<span class="token operator">=</span>/var/cache/nginx/client_temp --http-proxy-temp-path<span class="token operator">=</span>/var/cache/nginx/proxy_temp --http-fastcgi-temp-path<span class="token operator">=</span>/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path<span class="token operator">=</span>/var/cache/nginx/uwsgi_temp --http-scgi-temp-path<span class="token operator">=</span>/var/cache/nginx/scgi_temp --user<span class="token operator">=</span>nginx --group<span class="token operator">=</span>nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt<span class="token operator">=</span><span class="token string">'-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC'</span> --with-ld-opt<span class="token operator">=</span><span class="token string">'-Wl,-z,relro -Wl,-z,now -pie'</span> --add-dynamic-module<span class="token operator">=</span>/opt/ngx_http_geoip2_module<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="下载-nginx-module-vts"><a href="#下载-nginx-module-vts" class="headerlink" title="下载/nginx-module-vts"></a>下载<code>/nginx-module-vts</code></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt<span class="token function">git</span> clone https://github.com/vozlt/nginx-module-vts.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="下载-Nginx"><a href="#下载-Nginx" class="headerlink" title="下载 Nginx"></a>下载 <a href="http://nginx.org/en/download.html">Nginx</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt<span class="token function">wget</span> http://nginx.org/download/nginx-1.20.2.tar.gz<span class="token function">tar</span> xvf nginx-1.20.2.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="重新编译"><a href="#重新编译" class="headerlink" title="重新编译"></a>重新编译</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /opt<span class="token builtin class-name">cd</span> nginx-1.20.2./configure --prefix<span class="token operator">=</span>/etc/nginx --sbin-path<span class="token operator">=</span>/usr/sbin/nginx --modules-path<span class="token operator">=</span>/usr/lib64/nginx/modules --conf-path<span class="token operator">=</span>/etc/nginx/nginx.conf --error-log-path<span class="token operator">=</span>/var/log/nginx/error.log --http-log-path<span class="token operator">=</span>/var/log/nginx/access.log --pid-path<span class="token operator">=</span>/var/run/nginx.pid --lock-path<span class="token operator">=</span>/var/run/nginx.lock --http-client-body-temp-path<span class="token operator">=</span>/var/cache/nginx/client_temp --http-proxy-temp-path<span class="token operator">=</span>/var/cache/nginx/proxy_temp --http-fastcgi-temp-path<span class="token operator">=</span>/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path<span class="token operator">=</span>/var/cache/nginx/uwsgi_temp --http-scgi-temp-path<span class="token operator">=</span>/var/cache/nginx/scgi_temp --user<span class="token operator">=</span>nginx --group<span class="token operator">=</span>nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt<span class="token operator">=</span><span class="token string">'-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC'</span> --with-ld-opt<span class="token operator">=</span><span class="token string">'-Wl,-z,relro -Wl,-z,now -pie'</span> --add-dynamic-module<span class="token operator">=</span>/opt/ngx_http_geoip2_module --add-module<span class="token operator">=</span>/opt/nginx-module-vts<span class="token function">sudo</span> <span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果一切正常，编译的二进制位置为 <code>ll /opt/nginx-1.22.0/objs/nginx</code></p></blockquote><h2 id="Nginx的配置文件修改"><a href="#Nginx的配置文件修改" class="headerlink" title="Nginx的配置文件修改"></a><code>Nginx</code>的配置文件修改</h2><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">http {    vhost_traffic_status_zone;    ...    server {        ...        location /status {            vhost_traffic_status_display;            vhost_traffic_status_display_format html;        }    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="重启Nginx-查看效果"><a href="#重启Nginx-查看效果" class="headerlink" title="重启Nginx, 查看效果"></a>重启<code>Nginx</code>, 查看效果</h2>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> vhts </tag>
            
            <tag> monitor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL备份还原</title>
      <link href="2022/07/18/mysql-bei-fen-huan-yuan/"/>
      <url>2022/07/18/mysql-bei-fen-huan-yuan/</url>
      
        <content type="html"><![CDATA[<h2 id="全量备份"><a href="#全量备份" class="headerlink" title="全量备份"></a>全量备份</h2><ul><li>mysql_full_backup.sh</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash -e</span><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> $# <span class="token operator">!=</span> <span class="token number">3</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$0</span> r_backup_root db_user db_pass"</span>  <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">r_backup_root</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token assign-left variable">db_user</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token assign-left variable">db_pass</span><span class="token operator">=</span><span class="token variable">$3</span><span class="token assign-left variable">l_work_root</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>mktemp -d<span class="token variable">`</span></span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">${r_backup_root}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><span class="token function">mkdir</span> -p <span class="token variable">${r_backup_root}</span><span class="token keyword">fi</span><span class="token assign-left variable">date_time</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%y%m%d%H%M%S<span class="token variable">)</span></span><span class="token assign-left variable">r_backup_cur</span><span class="token operator">=</span><span class="token variable">${r_backup_root}</span>/backup.<span class="token variable">${date_time}</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">${r_backup_cur}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><span class="token function">mkdir</span> -p <span class="token variable">${r_backup_cur}</span><span class="token keyword">fi</span><span class="token keyword">for</span> <span class="token for-or-select variable">db</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span>mysql -u$<span class="token punctuation">{</span>db_user<span class="token punctuation">}</span> -p$<span class="token punctuation">{</span>db_pass<span class="token punctuation">}</span> -e <span class="token string">"show databases;"</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token variable">`</span></span><span class="token keyword">do</span>  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">${db}</span> <span class="token operator">==</span> <span class="token string">"Database"</span> <span class="token operator">||</span> <span class="token variable">${db}</span> <span class="token operator">==</span> <span class="token string">"information_schema"</span> <span class="token operator">||</span> <span class="token variable">${db}</span> <span class="token operator">==</span> <span class="token string">"performance_schema"</span> <span class="token operator">||</span> <span class="token variable">${db}</span> <span class="token operator">==</span> <span class="token string">"sys"</span> <span class="token operator">||</span> <span class="token variable">${db}</span> <span class="token operator">==</span> <span class="token string">"mysql"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">continue</span>  <span class="token keyword">fi</span>  mysqldump -u<span class="token variable">${db_user}</span> -p<span class="token variable">${db_pass}</span> --no-create-info --insert-ignore --complete-insert --skip-extended-insert --databases <span class="token variable">${db}</span> <span class="token operator">&gt;</span> <span class="token variable">${l_work_root}</span>/full_<span class="token variable">${db}</span>_data.sql  <span class="token function">cp</span> <span class="token variable">${l_work_root}</span>/full_<span class="token variable">${db}</span>_data.sql <span class="token variable">${r_backup_cur}</span>  mysqldump -u<span class="token variable">${db_user}</span> -p<span class="token variable">${db_pass}</span> --quick --add-drop-database --add-drop-table --flush-logs --databases <span class="token variable">${db}</span> <span class="token operator">&gt;</span> <span class="token variable">${l_work_root}</span>/full_<span class="token variable">${db}</span>.sql  <span class="token function">cp</span> <span class="token variable">${l_work_root}</span>/full_<span class="token variable">${db}</span>.sql <span class="token variable">${r_backup_cur}</span><span class="token keyword">done</span><span class="token function">rm</span> -rf <span class="token variable">${l_work_root}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="增量备份"><a href="#增量备份" class="headerlink" title="增量备份"></a>增量备份</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash -e</span><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> $# <span class="token operator">!=</span> <span class="token number">4</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$0</span> r_backup_root db_user db_pass mysql_bin"</span>  <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">r_backup_root</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token assign-left variable">db_user</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token assign-left variable">db_pass</span><span class="token operator">=</span><span class="token variable">$3</span><span class="token assign-left variable">mysql_bin</span><span class="token operator">=</span><span class="token variable">$4</span><span class="token assign-left variable">l_work_root</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>mktemp -d<span class="token variable">`</span></span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token assign-left variable">data_dir</span><span class="token operator">=</span>/var/lib/mysql<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">${r_backup_root}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token function">mkdir</span> -p <span class="token variable">${r_backup_root}</span><span class="token keyword">fi</span><span class="token assign-left variable">max_timestamp</span><span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> <span class="token for-or-select variable">f</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span><span class="token function">ls</span> -F $<span class="token punctuation">{</span>r_backup_root<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">grep</span> /$<span class="token variable">`</span></span><span class="token keyword">do</span>  <span class="token assign-left variable">currentT</span><span class="token operator">=</span><span class="token variable">${f<span class="token operator">#</span>*.}</span>  <span class="token builtin class-name">echo</span> <span class="token variable">${currentT}</span>  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"<span class="token variable">${currentT}</span>"</span> <span class="token operator">&gt;</span> <span class="token string">"<span class="token variable">${max_timestamp}</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token assign-left variable">max_timestamp</span><span class="token operator">=</span><span class="token variable">${currentT}</span>  <span class="token keyword">fi</span><span class="token keyword">done</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -z <span class="token variable">${max_timestamp}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"no full backup, try full backup first"</span>  <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">r_backup_cur</span><span class="token operator">=</span><span class="token string">"<span class="token variable">${r_backup_root}</span>/backup.<span class="token variable">${max_timestamp}</span>"</span><span class="token builtin class-name">echo</span> <span class="token string">"select: <span class="token variable">${currentT}</span> - <span class="token variable">${r_backup_cur}</span>"</span><span class="token assign-left variable">r_pos_file</span><span class="token operator">=</span><span class="token variable">${r_backup_cur}</span>/position<span class="token assign-left variable">l_pos_file</span><span class="token operator">=</span><span class="token variable">${l_work_root}</span>/position<span class="token builtin class-name">echo</span> <span class="token string">"r_pos_file file is <span class="token variable">${r_pos_file}</span>"</span><span class="token builtin class-name">echo</span> <span class="token string">"l_pos_file file is <span class="token variable">${l_pos_file}</span>"</span><span class="token assign-left variable">pos_exists</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -f $<span class="token punctuation">{</span>r_pos_file<span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">'y'</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token builtin class-name">echo</span> <span class="token string">'n'</span><span class="token punctuation">;</span> <span class="token keyword">fi</span><span class="token variable">`</span></span><span class="token assign-left variable">new_pos</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>mysql -u$<span class="token punctuation">{</span>db_user<span class="token punctuation">}</span> -p$<span class="token punctuation">{</span>db_pass<span class="token punctuation">}</span> -e <span class="token string">"show master status;"</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span> <span class="token function">sed</span> -n <span class="token string">"2p"</span><span class="token variable">`</span></span><span class="token assign-left variable">new_file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">${new_pos}</span>"</span> <span class="token operator">|</span> <span class="token function">sed</span> -n <span class="token string">"1p"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$1</span>}'</span><span class="token variable">`</span></span><span class="token assign-left variable">new_line</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">${new_pos}</span>"</span> <span class="token operator">|</span> <span class="token function">sed</span> -n <span class="token string">"1p"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token variable">`</span></span><span class="token assign-left variable">old_file</span><span class="token operator">=</span><span class="token string">''</span><span class="token assign-left variable">old_line</span><span class="token operator">=</span><span class="token string">''</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">${pos_exists}</span> <span class="token operator">==</span> <span class="token string">"y"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>  <span class="token function">cp</span> -rf <span class="token variable">${r_pos_file}</span> <span class="token variable">${l_pos_file}</span>  <span class="token assign-left variable">old_file</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> $<span class="token punctuation">{</span>l_pos_file<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">sed</span> -n <span class="token string">"1p"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$1</span>}'</span><span class="token variable">`</span></span>  <span class="token assign-left variable">old_line</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> $<span class="token punctuation">{</span>l_pos_file<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">sed</span> -n <span class="token string">"1p"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span><span class="token variable">`</span></span><span class="token keyword">fi</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">${new_file}</span> <span class="token operator">==</span> <span class="token variable">${old_file}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token variable">${new_line}</span> <span class="token operator">==</span> <span class="token variable">${old_line}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">${new_file}</span> <span class="token variable">${new_line}</span> newest!"</span>  <span class="token builtin class-name">exit</span> <span class="token number">0</span><span class="token keyword">fi</span>mysqladmin -u<span class="token variable">${db_user}</span> -p<span class="token variable">${db_pass}</span> flush-logs<span class="token function">cp</span> -rf <span class="token variable">${data_dir}</span>/<span class="token variable">${mysql_bin}</span>.* <span class="token variable">${r_backup_cur}</span>/mysql -u<span class="token variable">${db_user}</span> -p<span class="token variable">${db_pass}</span> -e <span class="token string">"show master status;"</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span> <span class="token function">sed</span> -n <span class="token string">"2p"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$1</span> " " <span class="token variable">$2</span>}'</span> <span class="token operator">&gt;</span> <span class="token variable">${l_pos_file}</span><span class="token function">cp</span> -rf <span class="token variable">${l_pos_file}</span> <span class="token variable">${r_pos_file}</span><span class="token function">rm</span> -rf <span class="token variable">${l_work_root}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="还原-未验证"><a href="#还原-未验证" class="headerlink" title="还原 - 未验证"></a>还原 - 未验证</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash -e</span><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> $# <span class="token operator">!=</span> <span class="token number">4</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$0</span> r_backup_root db_user db_pass mysql_bin"</span>  <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">r_backup_root</span><span class="token operator">=</span><span class="token variable">$1</span><span class="token assign-left variable">db_user</span><span class="token operator">=</span><span class="token variable">$2</span><span class="token assign-left variable">db_pass</span><span class="token operator">=</span><span class="token variable">$3</span><span class="token assign-left variable">mysql_bin</span><span class="token operator">=</span><span class="token variable">$4</span><span class="token assign-left variable">data_dir</span><span class="token operator">=</span>/var/lib/mysql<span class="token assign-left variable">l_work_root</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>mktemp -d<span class="token variable">`</span></span> <span class="token operator">||</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token assign-left variable">max_timestamp</span><span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> <span class="token for-or-select variable">f</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span><span class="token function">ls</span> -F $<span class="token punctuation">{</span>r_backup_root<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">grep</span> /$<span class="token variable">`</span></span><span class="token keyword">do</span>  <span class="token assign-left variable">currentT</span><span class="token operator">=</span><span class="token variable">${f<span class="token operator">#</span>*.}</span>  <span class="token builtin class-name">echo</span> <span class="token variable">${currentT}</span>  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"<span class="token variable">${currentT}</span>"</span> <span class="token operator">&gt;</span> <span class="token string">"<span class="token variable">${max_timestamp}</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token assign-left variable">max_timestamp</span><span class="token operator">=</span><span class="token variable">${currentT}</span>  <span class="token keyword">fi</span><span class="token keyword">done</span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -z <span class="token variable">${max_timestamp}</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"no full backup, skip it"</span>  <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span class="token assign-left variable">r_backup_cur</span><span class="token operator">=</span><span class="token string">"<span class="token variable">${r_backup_root}</span>/backup.<span class="token variable">${max_timestamp}</span>"</span><span class="token builtin class-name">echo</span> <span class="token string">"select: <span class="token variable">${currentT}</span> - <span class="token variable">${r_backup_cur}</span>"</span><span class="token function">cp</span> -rf <span class="token variable">${r_backup_cur}</span> <span class="token variable">${l_work_root}</span><span class="token assign-left variable">data_root</span><span class="token operator">=</span><span class="token variable">${l_work_root}</span><span class="token builtin class-name">echo</span> <span class="token string">"data_root is <span class="token variable">${data_root}</span>"</span><span class="token function">pushd</span> <span class="token variable">${data_root}</span><span class="token assign-left variable">version_main</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span>mysql -u$<span class="token punctuation">{</span>db_user<span class="token punctuation">}</span> -p$<span class="token punctuation">{</span>db_pass<span class="token punctuation">}</span> -e <span class="token string">"select version()"</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span> <span class="token function">sed</span> -n <span class="token string">"2p"</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'BEGIN{FS=".";OFS=" "} {print <span class="token variable">$1</span>}'</span><span class="token variable">`</span></span><span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">"x<span class="token variable">${version_main}</span>"</span> <span class="token operator">==</span> <span class="token string">"x"</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token builtin class-name">echo</span> <span class="token string">"check mysql version failed"</span><span class="token keyword">elif</span> <span class="token variable"><span class="token punctuation">((</span> ${version_main} <span class="token operator">&lt;=</span> <span class="token number">5</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token function">sed</span> -i s/utf8mb4_0900_ai_ci/utf8mb4_unicode_ci/g <span class="token variable"><span class="token variable">`</span><span class="token function">ls</span> <span class="token builtin class-name">.</span> <span class="token operator">|</span> <span class="token function">grep</span> .sql<span class="token variable">`</span></span><span class="token keyword">elif</span> <span class="token variable"><span class="token punctuation">((</span> ${version_main} <span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span>  <span class="token function">sed</span> -i s/utf8mb4_unicode_ci/utf8mb4_0900_ai_ci/g <span class="token variable"><span class="token variable">`</span><span class="token function">ls</span> <span class="token builtin class-name">.</span> <span class="token operator">|</span> <span class="token function">grep</span> .sql<span class="token variable">`</span></span><span class="token keyword">fi</span><span class="token function">popd</span><span class="token keyword">for</span> <span class="token for-or-select variable">f</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span><span class="token function">ls</span> -l $<span class="token punctuation">{</span>data_root<span class="token punctuation">}</span>/full_* <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$9</span>}'</span><span class="token variable">`</span></span><span class="token keyword">do</span>  <span class="token assign-left variable">base</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $<span class="token punctuation">{</span>f<span class="token punctuation">}</span><span class="token variable">`</span></span>"</span>  mysql -u<span class="token variable">${db_user}</span> -p<span class="token variable">${db_pass}</span> <span class="token operator">&lt;</span> <span class="token variable">${data_root}</span>/<span class="token variable">${base}</span><span class="token keyword">done</span><span class="token keyword">for</span> <span class="token for-or-select variable">f</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span><span class="token function">ls</span> -l $<span class="token punctuation">{</span>data_root<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>mysql_bin<span class="token punctuation">}</span>.0* <span class="token operator">|</span> <span class="token function">sort</span> -r <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$9</span>}'</span><span class="token variable">`</span></span><span class="token keyword">do</span>  <span class="token assign-left variable">base</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">`</span><span class="token function">basename</span> $<span class="token punctuation">{</span>f<span class="token punctuation">}</span><span class="token variable">`</span></span>"</span>  mysqlbinlog <span class="token variable">${data_root}</span>/<span class="token variable">${base}</span> <span class="token operator">|</span> mysql -u<span class="token variable">${db_user}</span> -p<span class="token variable">${db_pass}</span><span class="token keyword">done</span><span class="token function">rm</span> -rf <span class="token variable">${l_work_root}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> backup </tag>
            
            <tag> restore </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查看Navicat中保存的密码</title>
      <link href="2022/07/18/cha-kan-navicat-zhong-bao-cun-de-mi-ma/"/>
      <url>2022/07/18/cha-kan-navicat-zhong-bao-cun-de-mi-ma/</url>
      
        <content type="html"><![CDATA[<ol><li><p><code>Navicat</code>上导出连接,导出时候记得选择导出密码<br> <img src="/2022/07/18/cha-kan-navicat-zhong-bao-cun-de-mi-ma/naviexport.png"><br> <img src="/2022/07/18/cha-kan-navicat-zhong-bao-cun-de-mi-ma/navexport2.png"></p></li><li><p>打开导出的文件，把密码复制下来<br> <img src="/2022/07/18/cha-kan-navicat-zhong-bao-cun-de-mi-ma/naviexport3.png"></p></li><li><p>破译密码</p><ol><li>打开在线PHP <a href="https://tool.lu/coderunner/">https://tool.lu/coderunner/</a></li><li>复制下面代码，运行 - 注意替换倒数第二行的加密密码<pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">FatSmallTools</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">NavicatPassword</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token variable">$version</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$aesKey</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'libcckeylibcckey'</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$aesIv</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'libcciv libcciv '</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$blowString</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'3DC5CA39'</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$blowKey</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$blowIv</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$version</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">version</span> <span class="token operator">=</span> <span class="token variable">$version</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">blowKey</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'3DC5CA39'</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">blowIv</span> <span class="token operator">=</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'d9c7c3c8870d64bd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token boolean constant">FALSE</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">version</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token number">11</span><span class="token punctuation">:</span>                            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">encryptEleven</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">12</span><span class="token punctuation">:</span>                            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">encryptTwelve</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token punctuation">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">encryptEleven</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$round</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$leftLength</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>        <span class="token variable">$currentVector</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">blowIv</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$round</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">encryptBlock</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">xorBytes</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$currentVector</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$currentVector</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">xorBytes</span><span class="token punctuation">(</span><span class="token variable">$currentVector</span><span class="token punctuation">,</span> <span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$result</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$leftLength</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$currentVector</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">encryptBlock</span><span class="token punctuation">(</span><span class="token variable">$currentVector</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$result</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">xorBytes</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token variable">$leftLength</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$currentVector</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">encryptBlock</span><span class="token punctuation">(</span><span class="token variable">$block</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$block</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'BF-ECB'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">blowKey</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token operator">|</span><span class="token constant">OPENSSL_NO_PADDING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">decryptBlock</span><span class="token punctuation">(</span><span class="token variable">$block</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token variable">$block</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'BF-ECB'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">blowKey</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token operator">|</span><span class="token constant">OPENSSL_NO_PADDING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">xorBytes</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">,</span> <span class="token variable">$str2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$result</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$str1</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$str2</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">encryptTwelve</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'AES-128-CBC'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">aesKey</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">aesIv</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token boolean constant">FALSE</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">version</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token number">11</span><span class="token punctuation">:</span>                            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">decryptEleven</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token number">12</span><span class="token punctuation">:</span>                            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">decryptTwelve</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token punctuation">:</span>                            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">decryptEleven</span><span class="token punctuation">(</span><span class="token variable">$upperString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$upperString</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$round</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$leftLength</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>        <span class="token variable">$currentVector</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">blowIv</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$round</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$encryptedBlock</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">xorBytes</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">decryptBlock</span><span class="token punctuation">(</span><span class="token variable">$encryptedBlock</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$currentVector</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$currentVector</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">xorBytes</span><span class="token punctuation">(</span><span class="token variable">$currentVector</span><span class="token punctuation">,</span> <span class="token variable">$encryptedBlock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$result</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$temp</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$leftLength</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token variable">$currentVector</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">encryptBlock</span><span class="token punctuation">(</span><span class="token variable">$currentVector</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$result</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">xorBytes</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token variable">$leftLength</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$currentVector</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function">decryptTwelve</span><span class="token punctuation">(</span><span class="token variable">$upperString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token variable">$string</span> <span class="token operator">=</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$upperString</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'AES-128-CBC'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">aesKey</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token property">aesIv</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">use</span> <span class="token package">FatSmallTools<span class="token punctuation">\</span>NavicatPassword</span><span class="token punctuation">;</span><span class="token comment">//需要指定版本，11或12</span><span class="token variable">$navicatPassword</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NavicatPassword</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//$navicatPassword = new NavicatPassword(11);</span><span class="token comment">//解密</span><span class="token comment">//$decode = $navicatPassword-&gt;decrypt('15057D7BA390');</span><span class="token variable">$decode</span> <span class="token operator">=</span> <span class="token variable">$navicatPassword</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'785BE276DDC703CAB2EF0E6440ED6249'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$decode</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> Navicat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> navicat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grpc</title>
      <link href="2021/01/30/grpc/"/>
      <url>2021/01/30/grpc/</url>
      
        <content type="html"><![CDATA[<h2 id="grpcui-grpc测试工具"><a href="#grpcui-grpc测试工具" class="headerlink" title="grpcui - grpc测试工具"></a><a href="https://github.com/fullstorydev/grpcui">grpcui</a> - grpc测试工具</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /X/work/com/github.com/sbasestarter/proto-repo/proto <span class="token operator">&amp;&amp;</span> grpcui -import-path ./ -import-path /c/Users/admin/go/pkg/mod/github.com/grpc-ecosystem/grpc-gateway@v1.11.3/third_party/googleapis <span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> <span class="token builtin class-name">.</span> -name *.proto <span class="token operator">|</span> <span class="token function">grep</span> -v <span class="token string">"ignore.proto"</span> <span class="token operator">|</span> <span class="token function">grep</span> -vE <span class="token punctuation">$(</span>find <span class="token builtin class-name">.</span> -name *.proto <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">egrep</span> <span class="token string">"import<span class="token entity" title="\\">\\</span>s{1,}<span class="token entity" title="\&quot;">\"</span>"</span> <span class="token operator">|</span>  <span class="token function">awk</span> '<span class="token punctuation">{</span>print substr<span class="token punctuation">(</span>$2,2,length<span class="token punctuation">(</span>$2<span class="token punctuation">)</span>-3<span class="token variable">)</span></span><span class="token punctuation">}</span><span class="token string">'|tr "<span class="token entity" title="\n">\n</span>" "|" | awk '</span><span class="token punctuation">{</span>print substr<span class="token punctuation">(</span><span class="token variable">$1</span>,0,length<span class="token punctuation">(</span><span class="token variable">$1</span><span class="token punctuation">)</span>-1<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token string">') | sed '</span>s/<span class="token punctuation">[</span>^ <span class="token punctuation">]</span>* */ -proto <span class="token operator">&amp;</span>/g' <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">"<span class="token entity" title="\n">\n</span>"</span> <span class="token string">" "</span><span class="token punctuation">)</span> -port <span class="token number">8898</span> --plaintext <span class="token number">127.0</span>.0.1:9120<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="grpcui-简单使用"><a href="#grpcui-简单使用" class="headerlink" title="grpcui 简单使用"></a><code>grpcui</code> 简单使用</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">grpcui.exe -plaintext -port <span class="token number">8080</span> <span class="token number">127.0</span>.0.1:12222 <span class="token comment"># 8080 未grpc服务地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="GRPC-Golang默认消息大小"><a href="#GRPC-Golang默认消息大小" class="headerlink" title="GRPC Golang默认消息大小"></a><code>GRPC Golang</code>默认消息大小</h2><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><table><thead><tr><th align="left">配置类型</th><th align="right">默认值</th><th align="center">设置函数</th></tr></thead><tbody><tr><td align="left">最大发送消息大小</td><td align="right">defaultClientMaxSendMessageSize为math.MaxInt32（4G）</td><td align="center">grpc.WithDefaultCallOptions(MaxCallRecvMsgSize(x))</td></tr><tr><td align="left">最大接收消息大小</td><td align="right">defaultClientMaxReceiveMessageSize为1024 * 1024 * 4（4M）</td><td align="center">grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(x))</td></tr></tbody></table><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><table><thead><tr><th align="left">配置类型</th><th align="right">默认值</th><th align="center">设置函数</th></tr></thead><tbody><tr><td align="left">最大发送消息大小</td><td align="right">defaultServerMaxSendMessageSize为math.MaxInt32（4G）</td><td align="center">grpc.MaxSendMsgSize(x)</td></tr><tr><td align="left">最大接收消息大小</td><td align="right">defaultServerMaxReceiveMessageSize为1024 * 1024 * 4（4M）</td><td align="center">grpc.MaxRecvMsgSize(x)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Grpc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>bash总结</title>
      <link href="2021/01/19/bash-zong-jie/"/>
      <url>2021/01/19/bash-zong-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="文件表达式"><a href="#文件表达式" class="headerlink" title="文件表达式"></a><code>文件表达式</code></h2><ul><li><code>-e filename</code><ul><li>如果 <code>filename</code> 存在，则为真 </li></ul></li><li><code>-d filename</code><ul><li>如果 <code>filename</code> 为目录，则为真 </li></ul></li><li><code>-f filename</code><ul><li>如果 <code>filename</code> 为常规文件，则为真 </li></ul></li><li><code>-L filename</code><ul><li>如果 <code>filename</code> 为符号链接，则为真 </li></ul></li><li><code>-r filename</code><ul><li>如果 <code>filename</code> 可读，则为真 </li></ul></li><li><code>-w filename</code><ul><li>如果 <code>filename</code> 可写，则为真 </li></ul></li><li><code>-x filename</code><ul><li>如果 <code>filename</code> 可执行，则为真 </li></ul></li><li><code>-s filename</code><ul><li>如果 <code>filename</code> 长度不为0，则为真 </li></ul></li><li><code>-h filename</code><ul><li>如果 <code>filename</code> 是软链接，则为真 </li></ul></li><li><code>filename1 -nt filename2</code><ul><li>如果 <code>filename1</code> 比 <code>filename2</code> 新，则为真</li></ul></li><li><code>filename1 -ot filename2</code><ul><li>如果 <code>filename1</code> 比 <code>filename2</code> 旧，则为真</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Bash </category>
          
      </categories>
      
      
        <tags>
            
            <tag> script </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊米-邮件服务器安装</title>
      <link href="2021/01/14/centos7-ymi-iredmail/"/>
      <url>2021/01/14/centos7-ymi-iredmail/</url>
      
        <content type="html"><![CDATA[<ul><li><p><code>openldap</code>结构</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">|</span>--dc<span class="token operator">=</span>com<span class="token operator">|</span>  <span class="token operator">|</span>--ou<span class="token operator">=</span>groups<span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>--cn<span class="token operator">=</span>mail<span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>--ou<span class="token operator">=</span>mail_group<span class="token operator">|</span>  <span class="token operator">|</span>     <span class="token operator">|</span>--cn<span class="token operator">=</span>admins@ymipro.com<span class="token operator">|</span>  <span class="token operator">|</span>     <span class="token operator">|</span>--cn<span class="token operator">=</span>admins@ymicj.com<span class="token operator">|</span>  <span class="token operator">|</span>--ou<span class="token operator">=</span>users<span class="token operator">|</span>  <span class="token operator">|</span>  <span class="token operator">|</span>--cn<span class="token operator">=</span>test_user1<span class="token operator">|</span>--dc<span class="token operator">=</span>ymipro.com<span class="token operator">|</span>  <span class="token operator">|</span>--ou<span class="token operator">=</span>users<span class="token operator">|</span>     <span class="token operator">|</span>--cn<span class="token operator">=</span>test_pro_user1<span class="token operator">|</span>--dc<span class="token operator">=</span>ymicj.com<span class="token operator">|</span>  <span class="token operator">|</span>--ou<span class="token operator">=</span>users<span class="token operator">|</span>     <span class="token operator">|</span>--cn<span class="token operator">=</span>test_cj_user1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>test_user1</code></p><ul><li><code>mail</code>: <code>test_user1@ymi.com</code></li><li><code>uid</code>: <code>test_user1</code></li><li><code>cn</code>: <code>test_user1</code></li></ul></li><li><p><code>test_pro_user1</code></p><ul><li><code>mail</code>: <code>test_pro_user1@ymipro.com</code></li><li><code>uid</code>: <code>test_pro_user1</code></li><li><code>cn</code>: <code>test_pro_user1</code></li></ul></li><li><p><code>test_cj_user1</code></p><ul><li><code>mail</code>: <code>test_cj_user1@ymicj.com</code></li><li><code>uid</code>: <code>test_cj_user1</code></li><li><code>cn</code>: <code>test_cj_user1</code></li></ul><blockquote><p>三个用户都加入 <code>admins@ymipro.com</code>和<code>admins@ymicj.com</code></p></blockquote></li></ul></li></ul><h1 id="安装-iRedMail"><a href="#安装-iRedMail" class="headerlink" title="安装 iRedMail"></a>安装 <a href="https://www.iredmail.org/">iRedMail</a></h1><ol><li><p>Set Hostname</p><ul><li><p>cmd</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> hostnamectl set-hostname mx.ymipro-l.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>/etc/hosts</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p><code>127.0.0.1</code>后增加<code>mx.ymipro-l.com</code> - 注意：按文档所说， Warning: List the FQDN hostname as first item.</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">127.0</span>.0.1 mx.ymipro-l.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>hostname -f</code> 命令能正确获取设置的FQDN就ok了</p></li></ul></li></ul></li><li><p>Download <a href="https://www.iredmail.org/download.html">iRedMail</a> - 这里选择 <a href="https://github.com/iredmail/iRedMail/archive/1.3.2.tar.gz">STABLE 1.3.2</a></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~<span class="token comment"># wget https://github.com/iredmail/iRedMail/archive/1.3.2.tar.gz</span><span class="token function">wget</span> https://github.com/iredmail/iRedMail/archive/1.3.2.tar.gz<span class="token function">tar</span> xvf <span class="token number">1.3</span>.2.tar.gz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Install</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/iRedMail-1.3.2/<span class="token function">sudo</span> <span class="token assign-left variable">CHECK_NEW_IREDMAIL</span><span class="token operator">=</span>NO <span class="token function">bash</span> iRedMail.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p><code>Default mail storage path</code> - <code>/var/vmail</code></p></li><li><p><code>Preferred web server</code> - <code>Nginx</code></p></li><li><p><code>Choose Preferred bakcend used to store mail accounts</code> - <code>OpenLDAP</code></p></li><li><p><code>LDAP suffix</code> - <code>dc=ymipro,dc=com</code></p></li><li><p><code>Password for MYSQL administrator</code> - <code>11111111</code></p></li><li><p><code>Your first mail domain name</code> - <code>ymipro.com</code></p></li><li><p><code>Password for the mail domain administrator</code> - <code>11111111</code></p></li><li><p><code>Optional components</code> - <code>RoundCubemail,SOGo,netdata,iRedAdmin,Fail2ban</code></p></li><li><blockquote><p>用<code>ymipro.com</code>的<code>DNS</code></p></blockquote></li></ul></li></ol><blockquote><p><a href="https://docs.iredmail.org/install.iredmail.on.rhel.html">https://docs.iredmail.org/install.iredmail.on.rhel.html</a></p></blockquote><h1 id="修改为使用外部OpenLDAP方式"><a href="#修改为使用外部OpenLDAP方式" class="headerlink" title="修改为使用外部OpenLDAP方式"></a>修改为使用外部<code>OpenLDAP</code>方式</h1><blockquote><p><a href="https://docs.iredmail.org/active.directory.html">https://docs.iredmail.org/active.directory.html</a></p></blockquote><ul><li><p>ldap服务器</p></li><li><p><code>ip</code>: <code>192.168.223.10</code></p></li><li><p>Disable unused iRedMail special settings:</p>  <pre class="line-numbers language-none"><code class="language-none">postconf -e virtual_alias_maps=''postconf -e sender_bcc_maps=''postconf -e recipient_bcc_maps=''postconf -e relay_domains=''postconf -e relay_recipient_maps=''postconf -e sender_dependent_relayhost_maps=''<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Add your mail domain name in smtpd_sasl_local_domain and virtual_mailbox_domains:</p>  <pre class="line-numbers language-none"><code class="language-none">postconf -e smtpd_sasl_local_domain='ymipro.com'postconf -e virtual_mailbox_domains='ymi.com ymigroup.com ymicj.com ymipro.com'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>Change transport maps setting:</p>  <pre class="line-numbers language-none"><code class="language-none">postconf -e transport_maps='hash:/etc/postfix/transport'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Enable AD query. Note: We will create these 3 files later.</p><ul><li>Verify SMTP senders<pre class="line-numbers language-none"><code class="language-none">postconf -e smtpd_sender_login_maps='proxy:ldap:/etc/postfix/ad_sender_login_maps.cf'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>Verify local mail users<pre class="line-numbers language-none"><code class="language-none">postconf -e virtual_mailbox_maps='proxy:ldap:/etc/postfix/ad_virtual_mailbox_maps.cf'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>Verify local mail lists/groups.<pre class="line-numbers language-none"><code class="language-none">postconf -e virtual_alias_maps='proxy:ldap:/etc/postfix/ad_virtual_group_maps.cf'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>Create/edit file: /etc/postfix/transport<pre class="line-numbers language-none"><code class="language-none">ymipro.com dovecot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>Run postmap so that postfix can read it:</p>  <pre class="line-numbers language-none"><code class="language-none">postmap hash:/etc/postfix/transport<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Create file: /etc/postfix/ad_sender_login_maps.cf</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server_host     <span class="token operator">=</span> <span class="token number">192.168</span>.223.10server_port     <span class="token operator">=</span> <span class="token number">389</span>version         <span class="token operator">=</span> <span class="token number">3</span><span class="token builtin class-name">bind</span>            <span class="token operator">=</span> <span class="token function">yes</span>start_tls       <span class="token operator">=</span> nobind_dn         <span class="token operator">=</span> <span class="token assign-left variable">cn</span><span class="token operator">=</span>admin,dc<span class="token operator">=</span>combind_pw         <span class="token operator">=</span> adminpasssearch_base     <span class="token operator">=</span> <span class="token assign-left variable">dc</span><span class="token operator">=</span>comscope           <span class="token operator">=</span> subquery_filter    <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>objectClass<span class="token operator">=</span>inetOrgPerson<span class="token punctuation">)</span><span class="token punctuation">(</span>memberOf<span class="token operator">=</span>cn<span class="token operator">=</span>mail,ou<span class="token operator">=</span>groups,dc<span class="token operator">=</span>com<span class="token punctuation">)</span><span class="token punctuation">(</span>mail<span class="token operator">=</span>%s<span class="token punctuation">)</span><span class="token punctuation">(</span>ou:dn:<span class="token operator">=</span>users<span class="token punctuation">))</span><span class="token assign-left variable">result_attribute</span><span class="token operator">=</span> maildebuglevel      <span class="token operator">=</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：bind_pw输入实际的密码</p></blockquote></li><li><p>Create file: /etc/postfix/ad_virtual_mailbox_maps.cf</p>  <pre class="line-numbers language-none"><code class="language-none">server_host     = 192.168.223.10server_port     = 389version         = 3bind            = yesstart_tls       = nobind_dn         = cn=admin,dc=combind_pw         = adminpasssearch_base     = dc=comscope           = subquery_filter    = (&amp;(objectClass=inetOrgPerson)(memberOf=cn=mail,ou=groups,dc=com)(mail=%s)(ou:dn:=users))result_attribute= mailresult_format   = %d/%u/Maildir/debuglevel      = 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Create file: /etc/postfix/ad_virtual_group_maps.cf</p>  <pre class="line-numbers language-none"><code class="language-none">server_host     = 192.168.223.10server_port     = 389version         = 3bind            = yesstart_tls       = nobind_dn         = cn=admin,dc=combind_pw         = adminpasssearch_base     = dc=comscope           = subquery_filter    = (&amp;(|(objectClass=groupOfUniqueNames)(objectClass=groupOfNames))(cn=%s)(ou:dn:=mail_group))special_result_attribute = member#leaf_result_attribute = mailresult_attribute= maildebuglevel      = 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Verify LDAP query with AD in Postfix</p></li></ul><pre class="line-numbers language-none"><code class="language-none">[root@ymi-l z]# postmap -q test_cj_user1@ymicj.com ldap:/etc/postfix/ad_virtual_mailbox_maps.cfymicj.com/test_cj_user1/Maildir/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[root@ymi-l z]# postmap -q test_cj_user1@ymicj.com ldap:/etc/postfix/ad_sender_login_maps.cftest_cj_user1@ymicj.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[root@mx log]# postmap -q admins@ymipro.com ldap:/etc/postfix/ad_virtual_group_maps.cftest_pro_user1@ymipro.com,test_cj_user1@ymicj.com,test_user1@ymi.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>Remove iRedAPD integration in Postfix</p><ul><li><p>To disable iRedAPD service:</p><ul><li>please remove all check_policy_service inet:127.0.0.1:7777 in Postfix config file /etc/postfix/main.cf (Linux/OpenBSD) or /usr/local/etc/postfix/main.cf (FreeBSD).<br>Restart or reload Postfix service.</li><li>Disable iredapd service.  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl stop iredapd<span class="token function">sudo</span> systemctl disabled iredapd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ul></li><li><p>Enable Active Directory integration in Dovecot /etc/dovecot/dovecot-ldap.conf</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hosts           <span class="token operator">=</span> <span class="token number">192.168</span>.223.10:389ldap_version    <span class="token operator">=</span> <span class="token number">3</span>auth_bind       <span class="token operator">=</span> <span class="token function">yes</span>dn              <span class="token operator">=</span> <span class="token assign-left variable">cn</span><span class="token operator">=</span>admin,dc<span class="token operator">=</span>comdnpass          <span class="token operator">=</span> adminpassbase            <span class="token operator">=</span> <span class="token assign-left variable">dc</span><span class="token operator">=</span>comscope           <span class="token operator">=</span> subtreederef           <span class="token operator">=</span> never<span class="token comment"># Below two are required by command 'doveadm mailbox ...'</span><span class="token comment">#iterate_attrs   = mail=user</span><span class="token comment">#iterate_filter  = (&amp;(objectClass=mailUser)(accountStatus=active)(!(domainStatus=disabled))(enabledService=mail))</span><span class="token comment">#user_filter     = (&amp;(objectClass=mailUser)(accountStatus=active)(!(domainStatus=disabled))(enabledService=mail)(enabledService=%Ls%Lc)(|(mail=%u)(&amp;(enabledService=shadowaddress)(shadowAddress=%u))))</span>user_filter     <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>objectClass<span class="token operator">=</span>inetOrgPerson<span class="token punctuation">)</span><span class="token punctuation">(</span>memberOf<span class="token operator">=</span>cn<span class="token operator">=</span>mail,ou<span class="token operator">=</span>groups,dc<span class="token operator">=</span>com<span class="token punctuation">)</span><span class="token punctuation">(</span>mail<span class="token operator">=</span>%u<span class="token punctuation">)</span><span class="token punctuation">(</span>ou:dn:<span class="token operator">=</span>users<span class="token punctuation">))</span><span class="token comment">#user_attrs      = mail=master_user,mail=user,=home=%L{ldap:homeDirectory},=mail=%{ldap:mailboxFormat:maildir}:~/%{ldap:mailboxFolder:Maildir}/,mailQuota=quota_rule=*:bytes=%$</span>user_attrs      <span class="token operator">=</span> <span class="token operator">=</span>home<span class="token operator">=</span>/var/vmail/vmail1/%Ld/%Ln/,<span class="token operator">=</span>mail<span class="token operator">=</span>maildir:~/Maildir/<span class="token comment"># Used for dn lookup</span><span class="token comment">#pass_filter     = (&amp;(objectClass=mailUser)(accountStatus=active)(!(domainStatus=disabled))(enabledService=mail)(enabledService=%Ls%Lc)(|(mail=%u)(&amp;(enabledService=shadowaddress)(shadowAddress=%u))))</span>pass_filter     <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>objectClass<span class="token operator">=</span>inetOrgPerson<span class="token punctuation">)</span><span class="token punctuation">(</span>memberOf<span class="token operator">=</span>cn<span class="token operator">=</span>mail,ou<span class="token operator">=</span>groups,dc<span class="token operator">=</span>com<span class="token punctuation">)</span><span class="token punctuation">(</span>mail<span class="token operator">=</span>%u<span class="token punctuation">)</span><span class="token punctuation">(</span>ou:dn:<span class="token operator">=</span>users<span class="token punctuation">))</span><span class="token comment">#pass_attrs      = mail=user,userPassword=password,allowNets=allow_nets</span>pass_attrs      <span class="token operator">=</span> <span class="token assign-left variable">userPassword</span><span class="token operator">=</span>passworddefault_pass_scheme <span class="token operator">=</span> CRYPT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">sudo service dovecot restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>test dovecot</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># telnet localhost 143                     # &lt;- Type this</span>* OK <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span> Dovecot ready.<span class="token builtin class-name">.</span> login user1@ymipro-l.com password_of_user  <span class="token comment"># &lt;- Type this. Do not miss the dot in the beginning</span><span class="token builtin class-name">.</span> OK <span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span> Logged <span class="token keyword">in</span>^<span class="token punctuation">]</span>                                         <span class="token comment"># &lt;- Quit telnet with "Ctrl+]", then type 'quit'.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Enable Active Directory integration in Roundcube webmail for Global LDAP Address Book - /opt/www/roundcubemail/config/config.inc.php</p>  <pre class="line-numbers language-none"><code class="language-none">// Global LDAP address book.$config['ldap_public']["global_ldap_abook"] = array(    'name'              =&gt; 'Global LDAP Address Book',    'hosts'             =&gt; array('192.168.223.10'),    'port'              =&gt; 389,    'use_tls'           =&gt; false,    'ldap_version'      =&gt; '3',    'network_timeout'   =&gt; 10,    'user_specific'     =&gt; false,    // Search mail users under same domain.    'base_dn'       =&gt; 'dc=com',    'bind_dn'       =&gt; 'cn=admin,dc=com',    'bind_pass'     =&gt; 'adminpass',    'hidden'        =&gt; false,    'searchonly'    =&gt; false,    'writable'      =&gt; false,    'search_fields' =&gt; array('mail', 'cn', 'sn', 'givenName', 'street', 'telephoneNumber', 'mobile', 'stree', 'postalCode'),    // mapping of contact fields to directory attributes    'fieldmap' =&gt; array(        'name'          =&gt; 'cn',        'surname'       =&gt; 'sn',        'firstname'     =&gt; 'givenName',        'title'         =&gt; 'title',        'email'         =&gt; 'mail:*',        'phone:work'    =&gt; 'telephoneNumber',        'phone:mobile'  =&gt; 'mobile',        'phone:workfax' =&gt; 'facsimileTelephoneNumber',        'street'        =&gt; 'street',        'zipcode'       =&gt; 'postalCode',        'locality'      =&gt; 'l',        'department'    =&gt; 'departmentNumber',        'notes'         =&gt; 'description',        'photo'         =&gt; 'jpegPhoto',    ),    'sort'          =&gt; 'cn',    'scope'         =&gt; 'sub',    'filter'        =&gt; '(&amp;(objectClass=inetOrgPerson)(memberOf=cn=mail,ou=groups,dc=com)(ou:dn:=users))',    'fuzzy_search'  =&gt; true,    'vlv'           =&gt; false,   // Enable Virtual List View to more efficiently fetch paginated data (if server supports it)    'sizelimit'     =&gt; '0',     // Enables you to limit the count of entries fetched. Setting this to 0 means no limit.    'timelimit'     =&gt; '0',     // Sets the number of seconds how long is spend on the search. Setting this to 0 means no limit.    'referrals'     =&gt; false,  // Sets the LDAP_OPT_REFERRALS option. Mostly used in multi-domain Active Directory setups    'group_filters' =&gt; array(        'departments' =&gt; array(            'name'    =&gt; 'Mailing Lists',            'scope'   =&gt; 'sub',            'base_dn' =&gt; 'dc=com',            'filter'  =&gt; '(&amp;(|(objectClass=groupOfUniqueNames)(objectClass=groupOfNames))(ou:dn:=mail_group))',            'name_attr' =&gt; 'cn',            'email'     =&gt; 'mail',        ),    ),);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Enable sogo - /etc/sogo/sogo.conf</p></li></ul><pre class="line-numbers language-none"><code class="language-none">SOGoUserSources = (    {        // Used for user authentication        // ...        type = ldap;        // ...        hostname = "ldap://192.168.223.10:389";        baseDN = "dc=com";        bindDN = "cn=admin,dc=com";        bindPassword = "adminpass";        filter = "(objectClass=inetOrgPerson AND memberOf='cn=mail,ou=groups,dc=com' AND ou:dn:=users)";        // bindAsCurrentUser = YES;        // ...    },      {        // Used for global address book        type = ldap;        id = global_addressbook;        // ...        hostname = "ldap:///192.168.223.10:389";        baseDN = "dc=com";        bindDN = "cn=admin,dc=com";        bindPassword = "adminpass";        filter = "(objectClass=inetOrgPerson AND memberOf=cn=mail,ou=groups,dc=com AND ou:dn:=users)";        //bindAsCurrentUser = YES;        // ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：注释掉<code>bindAsCurrentUser = YES;</code></p></blockquote><pre class="line-numbers language-none"><code class="language-none">sudo service sogod start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>什麽操蛋邏輯，竟然修改配置文件後重啓計算機才有效</p></blockquote><h2 id="SSL证书"><a href="#SSL证书" class="headerlink" title="SSL证书"></a><code>SSL</code>证书</h2><h3 id="web证书"><a href="#web证书" class="headerlink" title="web证书"></a><code>web</code>证书</h3><p>邮件系统默认提供了证书，在配置完成之后，已经可以通过HTTPS访问。但是由于iRedMail提供的证书只是系统生成的，并没有经过认证，因此浏览器会提示不安全。</p><ol><li>建议自行申请Symantec等证书（收费或免费均可），然后覆盖默认的证书<ul><li>/etc/pki/tls/certs/iRedMail.crt</li><li>/etc/pki/tls/private/iRedMail.key</li></ul></li><li>将申请的证书重命名为 iRedMail.crt ，上传到 /etc/pki/tls/certs/ 目录覆盖原有系统证书</li><li>将申请的证书的key重命名为 iRedMail.key， 上传到/etc/pki/tls/private/目录覆盖原有系统证书 </li><li>重启服务器</li></ol><h3 id="postfix-dovecot-证书"><a href="#postfix-dovecot-证书" class="headerlink" title="postfix dovecot 证书"></a><code>postfix</code> <code>dovecot</code> 证书</h3><ol><li><p>部署证书<code>letsencrypt.tgz</code>到<code>/etc/letsencrypt_auto</code>目录</p></li><li><p>修改</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span>postconf -e <span class="token assign-left variable">smtpd_tls_cert_file</span><span class="token operator">=</span><span class="token string">'/etc/letsencrypt_auto/live/0/cert.pem'</span>postconf -e <span class="token assign-left variable">smtpd_tls_key_file</span><span class="token operator">=</span><span class="token string">'/etc/letsencrypt_auto/live/0/privkey.pem'</span>postconf -e <span class="token assign-left variable">smtpd_tls_CAfile</span><span class="token operator">=</span><span class="token string">'/etc/letsencrypt_auto/live/0/fullchain.pem'</span>systemctl restart postfix.service<span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># vim /etc/dovecot/dovecot.conf</span>ssl <span class="token operator">=</span> requiredverbose_ssl <span class="token operator">=</span> nossl_ca <span class="token operator">=</span> <span class="token operator">&lt;</span>/etc/letsencrypt_auto/live/0/fullchain.pemssl_cert <span class="token operator">=</span> <span class="token operator">&lt;</span>/etc/letsencrypt_auto/live/0/cert.pemssl_key <span class="token operator">=</span> <span class="token operator">&lt;</span>/etc/letsencrypt_auto/live/0/privkey.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> dovecot restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><blockquote><p><a href="https://www.qnjslm.com/ITHelp/580.html">https://www.qnjslm.com/ITHelp/580.html</a></p></blockquote><h1 id="重启服务器"><a href="#重启服务器" class="headerlink" title="重启服务器"></a>重启服务器</h1><h1 id="部署代理"><a href="#部署代理" class="headerlink" title="部署代理"></a>部署代理</h1><ol><li><p>生成或者导入证书 - 下面步骤只做 1 或者 2， 不用全做</p><ol><li><p>生成证书</p><ul><li><p>生成 <code>ymicj的key</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># ymicj</span><span class="token function">sudo</span> amavisd -c /etc/amavisd/amavisd.conf genrsa /var/lib/dkim/ymicj.com.pem <span class="token number">2048</span><span class="token function">sudo</span> <span class="token function">chown</span> amavis:amavis /var/lib/dkim/ymicj.com.pem<span class="token function">sudo</span> <span class="token function">chmod</span> 0400 /var/lib/dkim/ymicj.com.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里 <code>2048</code> 位数设置要跟原来的相同？可以用<code>sudo amavisd -c /etc/amavisd/amavisd.conf showkeys</code>来查看</p></blockquote></li><li><p>生成 <code>ymipro的key</code> - 应该不需要调用，本身就存在的</p><pre class="line-numbers language-none"><code class="language-none">sudo amavisd -c /etc/amavisd/amavisd.conf genrsa /var/lib/dkim/ymipro.com.pemsudo chown amavis:amavis /var/lib/dkim/ymipro.com.pemsudo chmod 0400 /var/lib/dkim/ymipro.com.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>导入证书</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span><span class="token builtin class-name">cd</span> /var/lib/dkim/<span class="token function">rm</span> -rf *rz<span class="token function">tar</span> zxvf dkim_email.tgz<span class="token function">rm</span> -rf dkim_email.tgz<span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li><li><p>修改 <code>/etc/amavisd/amavisd.conf</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Add dkim_key here.</span>dkim_key<span class="token punctuation">(</span><span class="token string">'ymipro.com'</span>, <span class="token string">'dkim'</span>, <span class="token string">'/var/lib/dkim/ymipro.com.pem'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dkim_key<span class="token punctuation">(</span><span class="token string">'ymicj.com'</span>, <span class="token string">'dkim'</span>, <span class="token string">'/var/lib/dkim/ymicj.com.pem'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@dkim_signature_options_bysender_maps <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>    <span class="token comment"># 'd' defaults to a domain of an author/sender address,</span>    <span class="token comment"># 's' defaults to whatever selector is offered by a matching key</span>    <span class="token comment"># Per-domain dkim key</span>    <span class="token comment">#"domain.com"  =&gt; { d =&gt; "domain.com", a =&gt; 'rsa-sha256', ttl =&gt; 10*24*3600 },</span>    <span class="token comment"># catch-all (one dkim key for all domains)</span>    <span class="token string">'ymipro.com'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>d <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'ymipro.com'</span>,            a <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'rsa-sha256'</span>,            c <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'relaxed/simple'</span>,            ttl <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">30</span>*24*3600 <span class="token punctuation">}</span>,    <span class="token string">'ymicj.com'</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>d <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'ymicj.com'</span>,            a <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'rsa-sha256'</span>,            c <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">'relaxed/simple'</span>,            ttl <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">30</span>*24*3600 <span class="token punctuation">}</span>,<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>重启服务</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> amavisd restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>设置<code>DNS</code>规则</p><blockquote><p><code>sudo amavisd -c /etc/amavisd/amavisd.conf showkeys</code> 获取 <code>DKMI</code></p></blockquote><ul><li><p>ymicj DNS</p>  <pre class="line-numbers language-none"><code class="language-none">## A 记录mail.ymicj.com A 176.122.161.213## MX 记录ymicj.com MX 176.122.161.213## SPF 记录ymicj.com TXT v=spf1 ip4:176.122.161.213 -all## DKMI 记录dkim._domainkey.ymicj.comTXTv=DKIM1; p=******<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ymipro DNS</p>  <pre class="line-numbers language-none"><code class="language-none">mail.ymipro.com A 49.234.46.74@ ymipro.com MX 176.122.161.213mail ymipro.com TXT v=spf1 ip4:176.122.161.213 -alldkim._domainkey.ymipro.comTXTv=DKIM1; p=******<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>sudo amavisd -c /etc/amavisd/amavisd.conf showkeys</code> 获取 <code>DKMI</code></p><p><code>sudo amavisd -c /etc/amavisd/amavisd.conf testkey</code> 来验证</p></blockquote></li></ul></li></ol><blockquote><p><a href="https://docs.iredmail.org/sign.dkim.signature.for.new.domain.html">https://docs.iredmail.org/sign.dkim.signature.for.new.domain.html</a></p></blockquote><del><h2 id="由于25端口转代理，所有25请求的端口都是127-0-0-1会导致SMTP-Open-Relay"><a href="#由于25端口转代理，所有25请求的端口都是127-0-0-1会导致SMTP-Open-Relay" class="headerlink" title="由于25端口转代理，所有25请求的端口都是127.0.0.1会导致SMTP Open Relay"></a>由于<code>25</code>端口转代理，所有<code>25</code>请求的端口都是<code>127.0.0.1</code>会导致<code>SMTP Open Relay</code></h2><ul><li><p><code>tproxy</code>连接<code>25</code>端口走非<code>lo</code>ip，这个需要更新<code>tproxy client</code> - 假设这个地址为<code>192.168.113.147</code></p></li><li><p><code>post screen</code>白名单</p>  <pre class="line-numbers language-none"><code class="language-none"># vim /etc/postfix/postscreen_access.cidr    192.168.113.0/24 permit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">sudo service postfix restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>/etc/postfix/main.cf: -&gt; postscreen_access_list = permit_mynetworks, cidr:/etc/postfix/postscreen_access.cidr</code></p></blockquote></li><li><p><code>iredpad</code></p>  <pre class="line-numbers language-none"><code class="language-none"># sudo vim  /opt/iredapd/settings.pyldap_uri = "ldap://192.168.113.141:389"ldap_basedn = "dc=com"ldap_binddn = "cn=admin,dc=com"ldap_bindpw = "adminpass"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none"># sudo vim /opt/iredapd/libs/default_settings.pyMYNETWORKS = ['192.168.113.0/24']<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">sudo service iredapd restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>banner</code></p>  <pre class="line-numbers language-none"><code class="language-none">[root@mx z]# postconf smtpd_bannersmtpd_banner = $myhostname ESMTP $mail_name[root@mx z]# postconf myhostnamemyhostname = ymicj.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></del><h2 id="proxy-protocol"><a href="#proxy-protocol" class="headerlink" title="proxy protocol"></a>proxy protocol</h2><ul><li><p>配置</p>  <pre class="line-numbers language-none"><code class="language-none"># on real mail servervim /etc/postfix/main.cf    postscreen_upstream_proxy_protocol = haproxy    postscreen_upstream_proxy_timeout = 20s# on front's nginx    vim email.tcp.conf.stream    25 tcp stream: proxy_protocol on;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>重启服务</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart postfix<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>log: <code>tailf /var/log/maillog</code></p></li><li><p>set banner: <code>postconf -e myhostname=ymicj.com</code></p><blockquote><p>smtpd_banner = $myhostname</p></blockquote></li><li><p>SMTP Open Relay test</p>  <pre class="line-numbers language-none"><code class="language-none">Connecting to 49.234.46.74220 ymicj.com ESMTP Postfix [938 ms]EHLO keeper-us-east-1c.mxtoolbox.com250-ymicj.com250-PIPELINING250-SIZE 15728640250-ETRN250-STARTTLS250-ENHANCEDSTATUSCODES250-8BITMIME250 DSN [891 ms]MAIL FROM:&lt;supertool@mxtoolbox.com&gt;250 2.1.0 Ok [875 ms]RCPT TO:&lt;test@mxtoolboxsmtpdiag.com&gt;454 4.7.1 &lt;test@mxtoolboxsmtpdiag.com&gt;: Relay access denied [891 ms]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  after accpt rcpt to:</p>  <pre class="line-numbers language-none"><code class="language-none">datasubject: hohocontent1content2.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p><a href="https://mxtoolbox.com/SuperTool.aspx?action=smtp:ymipro.com&amp;run=toolpage">https://mxtoolbox.com/SuperTool.aspx?action=smtp%3aymipro.com&amp;run=toolpage</a></p></blockquote><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><blockquote><p><a href="https://docs.iredmail.org/index.html">https://docs.iredmail.org/index.html</a></p><p><a href="https://docs.iredmail.org/active.directory.html">https://docs.iredmail.org/active.directory.html</a></p><p><a href="http://note.youdao.com/yws/public/resource/359b2fff6a21186e09a514b6f23aaf97/xmlnote/33744598974F45AF94C11C099C92F640/4757">http://note.youdao.com/yws/public/resource/359b2fff6a21186e09a514b6f23aaf97/xmlnote/33744598974F45AF94C11C099C92F640/4757</a></p></blockquote><h2 id="mail-DNS"><a href="#mail-DNS" class="headerlink" title="mail DNS"></a>mail DNS</h2><blockquote><p>dns設置<br><a href="https://www.qnjslm.com/ITHelp/566.html">https://www.qnjslm.com/ITHelp/566.html</a></p><p>外部端口<br><a href="https://docs.iredmail.org/network.ports.html">https://docs.iredmail.org/network.ports.html</a></p><p>client<br><a href="http://www.ithov.com/linux/100665_2.shtml">http://www.ithov.com/linux/100665_2.shtml</a></p></blockquote><pre class="line-numbers language-none"><code class="language-none">mail.ymicj.comA45.77.190.273002019-10-30 04:02:43编辑 删除ymicj.comMX45.77.190.27300102019-10-30 09:37:08编辑 删除mail.ymicj.comTXTv=spf1 ip4:45.77.190.27 -all3002019-10-30 05:59:31编辑 删除dkim._domainkey.ymicj.comTXTv=DKIM1; p=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCZeb0qSIKSuJbstVPwvWAmjU0BvMDz5iBmXzWl5eBUUfKVkTurJKWGYc6DRmpoehrmYJTPXp+qWxHJEO2vtnVCzPvxwfv5ieNeqiwbrl+3cT79aFnsKG0j8GN/zI6+VOmVf+ZoJVKDL3LA3I3jlPQur7wfpuKVdxP0uiZ8fYZZ6QIDAQAB3002019-10-30 07:56:10编辑 删除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://docs.iredmail.org/file.locations.html">https://docs.iredmail.org/file.locations.html</a></p></blockquote><h1 id="。。。"><a href="#。。。" class="headerlink" title="。。。"></a>。。。</h1><ul><li>某个域名发不出邮件  <pre class="line-numbers language-none"><code class="language-none">postconf -e local_recipient_maps=$virtual_mailbox_mapsservice postfix restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li><p>进入信箱后，点击收件箱，弹出错误</p><p>查看 <code>/var/log/dovecot</code> 下的<code> imap.log</code> 日志<br>发现是<code> /var/vmail</code> 权限问题，用如下命令解决</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chown</span> vmail:vmail /var/vmail<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p> Helo command rejected: ACCESS DENIED. Your email was rejected because the sending mail server appears to be on a dynamic IP address that should not be doing direct mail delivery (10-93-166-234); </p></li></ol><p>简单粗暴的办法是 /etc/postfix/helo_access.pcre 中相应字符串的表达式注释掉</p><blockquote><p><a href="https://forum.iredmail.org/topic8108-iredmail-support-mail-rejected.html">https://forum.iredmail.org/topic8108-iredmail-support-mail-rejected.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Ymi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iredmail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-常用命令</title>
      <link href="2021/01/13/docker-chang-yong-ming-ling/"/>
      <url>2021/01/13/docker-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 临时启动一个镜像操作</span><span class="token function">sudo</span> docker run --rm -ti registry:latest /bin/sh<span class="token comment"># 拷贝Docker镜像中的文件</span>docker run --rm kapacitor kapacitord config <span class="token operator">&gt;</span> kapacitor.conf<span class="token comment"># 杀死运行的容器：</span>docker <span class="token function">kill</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -a -q<span class="token variable">)</span></span><span class="token comment"># 删除所有容器：</span>docker <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker <span class="token function">ps</span> -a -q<span class="token variable">)</span></span><span class="token comment"># 强制删除所有镜像：</span>docker rmi -f <span class="token variable"><span class="token variable">$(</span>docker images -q<span class="token variable">)</span></span><span class="token comment"># 看需要挂载的目录</span>docker inspect grafana <span class="token comment"># 然后看 Env </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockker-Installed Go binary not found in path on Alpine Linux Docker</title>
      <link href="2021/01/13/dockker-installed-go-binary-not-found-in-path-on-alpine-linux-docker/"/>
      <url>2021/01/13/dockker-installed-go-binary-not-found-in-path-on-alpine-linux-docker/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我这里现象是，正常编译的没问题，加上 “static”等一堆参数就会出现</p></blockquote><ul><li><p>解决方案：</p><p>Dockerfile里增加</p><pre class="line-numbers language-none"><code class="language-none">RUN mkdir /lib64 &amp;&amp; ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><a href="https://stackoverflow.com/questions/34729748/installed-go-binary-not-found-in-path-on-alpine-linux-docker">https://stackoverflow.com/questions/34729748/installed-go-binary-not-found-in-path-on-alpine-linux-docker</a></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 处理出错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker - 报错 WARNING: IPv4 forwarding is disabled. Networking will not work.</title>
      <link href="2021/01/13/docker-bao-cuo-warning-ipv4-forwarding-is-disabled-networking-will-not-work/"/>
      <url>2021/01/13/docker-bao-cuo-warning-ipv4-forwarding-is-disabled-networking-will-not-work/</url>
      
        <content type="html"><![CDATA[<ol><li>修改<code>00-system.conf</code></li></ol><ul><li><p>vim  /usr/lib/sysctl.d/00-system.conf</p><p>添加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">net.ipv4.ip_forward<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>重启服务</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart network<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 处理出错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-设置当前用户不需要sudo权限</title>
      <link href="2021/01/13/docker-she-zhi-dang-qian-yong-hu-bu-xu-yao-sudo-quan-xian/"/>
      <url>2021/01/13/docker-she-zhi-dang-qian-yong-hu-bu-xu-yao-sudo-quan-xian/</url>
      
        <content type="html"><![CDATA[<p>假设当前用户为<code>z</code></p><pre class="line-numbers language-none"><code class="language-none">sudo groupadd dockersudo usermod -aG docker z<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意当前<code>session</code>登出后再登入起效</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 权限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker-清理docker容器的日志大小</title>
      <link href="2021/01/13/docker-qing-li-docker-rong-qi-de-ri-zhi-da-xiao/"/>
      <url>2021/01/13/docker-qing-li-docker-rong-qi-de-ri-zhi-da-xiao/</url>
      
        <content type="html"><![CDATA[<p>在<code>linux</code>上，容器日志一般存放在<code>/var/lib/docker/containers/container_id/</code>下面， 以<code>json.log</code>结尾的文件（业务日志）很大，查看各个日志文件大小的脚本<code>docker_log_size.sh</code>，内容如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token builtin class-name">echo</span> <span class="token string">"======== start clean docker containers logs ========"</span><span class="token assign-left variable">logs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">find</span> /var/lib/docker/containers/ -name *-json.log<span class="token variable">)</span></span><span class="token keyword">for</span> <span class="token for-or-select variable">log</span> <span class="token keyword">in</span> <span class="token variable">$logs</span>        <span class="token keyword">do</span>                <span class="token builtin class-name">echo</span> <span class="token string">"clean logs : <span class="token variable">$log</span>"</span>                <span class="token function">cat</span> /dev/null <span class="token operator">&gt;</span> <span class="token variable">$log</span>        <span class="token keyword">done</span><span class="token builtin class-name">echo</span> <span class="token string">"======== end clean docker containers logs ========"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果<code>docker</code>容器正在运行，那么使用<code>rm -rf</code>方式删除日志后，通过<code>df -h</code>会发现磁盘空间并没有释放。原因是在<code>Linux</code>或者<code>Unix</code>系统中，通过<code>rm -rf</code>或者文件管理器删除文件，将会从文件系统的目录结构上解除链接（<code>unlink</code>）。如果文件是被打开的（有一个进程正在使用），那么进程将仍然可以读取该文件，磁盘空间也一直被占用。正确姿势是<code>cat /dev/null &gt; *-json.log</code>，当然你也可以通过<code>rm -rf</code>删除后重启<code>docker</code>。</p><h2 id="设置Docker容器日志大小"><a href="#设置Docker容器日志大小" class="headerlink" title="设置Docker容器日志大小"></a>设置Docker容器日志大小</h2><ul><li><p>修改<code>/etc/docker/daemon.json</code> - 只对新建的容器有效</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">{</span>  <span class="token string">"log-driver"</span><span class="token builtin class-name">:</span><span class="token string">"json-file"</span>,  <span class="token string">"log-opts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">"max-size"</span><span class="token builtin class-name">:</span><span class="token string">"500m"</span>, <span class="token string">"max-file"</span><span class="token builtin class-name">:</span><span class="token string">"3"</span><span class="token punctuation">}</span>  <span class="token comment"># max-size=500m，意味着一个容器日志大小上限是500M，max-file=3，意味着一个容器有三个日志，分别是id+.json、id+1.json、id+2.json。</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">systemctl daemon-reloadsystemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><blockquote><p><a href="https://www.cnblogs.com/kaishirenshi/p/10670107.html">https://www.cnblogs.com/kaishirenshi/p/10670107.html</a></p></blockquote><h2 id="docker-compose限制"><a href="#docker-compose限制" class="headerlink" title="docker compose限制"></a>docker compose限制</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx:   image: nginx:1.12.1   restart: always   logging:     driver: <span class="token string">"json-file"</span>    options:       max-size: <span class="token string">"512M"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> log </tag>
            
            <tag> clean </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊米-OpenLDAP服务器安装</title>
      <link href="2021/01/11/centos7-ymi-ldap/"/>
      <url>2021/01/11/centos7-ymi-ldap/</url>
      
        <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>内网机器安装，然后通过VPS和内网穿透来对外提供服务</p><h2 id="Install-openldap"><a href="#Install-openldap" class="headerlink" title="Install openldap"></a>Install openldap</h2><ol><li><p>install openldap</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum -y <span class="token function">install</span> openldap compat-openldap openldap-clients openldap-servers openldap-servers-sql openldap-devel<span class="token function">sudo</span> systemctl start slapd<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> slapd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>verify</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>z@ldap-ymi ~<span class="token punctuation">]</span>$ <span class="token function">sudo</span> <span class="token function">netstat</span> -antup <span class="token operator">|</span> <span class="token function">grep</span> -i <span class="token number">389</span>tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">0.0</span>.0.0:389             <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">7965</span>/slapd          tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::389                  :::*                    LISTEN      <span class="token number">7965</span>/slapd <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><code>sudo yum install net-tools -y</code></p></blockquote></li><li><p>setup ldap password</p><ol><li><p>gen pass - 这里为 <code>11111111</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>z@ldap-ymi ~<span class="token punctuation">]</span>$ slappasswd -h <span class="token punctuation">{</span>SSHA<span class="token punctuation">}</span> -s <span class="token number">11111111</span><span class="token punctuation">{</span>SSHA<span class="token punctuation">}</span>diIowJ/IbQskpCqbI3Az3Mnt9fh95J7S<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>查看当前<code>db</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">ls</span> -al /etc/openldap/slapd.d/cn<span class="token operator">=</span>config/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意这里是<code>{2}hdb</code></p></blockquote></li><li><p>vim db.ldif</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dn: <span class="token assign-left variable">olcDatabase</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>hdb,cn<span class="token operator">=</span>configchangetype: modifyreplace: olcSuffixolcSuffix: <span class="token assign-left variable">dc</span><span class="token operator">=</span>comdn: <span class="token assign-left variable">olcDatabase</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>hdb,cn<span class="token operator">=</span>configchangetype: modifyreplace: olcRootDNolcRootDN: <span class="token assign-left variable">cn</span><span class="token operator">=</span>admin,dc<span class="token operator">=</span>comdn: <span class="token assign-left variable">olcDatabase</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>hdb,cn<span class="token operator">=</span>configchangetype: modifyreplace: olcRootPWolcRootPW: <span class="token punctuation">{</span>SSHA<span class="token punctuation">}</span>diIowJ/IbQskpCqbI3Az3Mnt9fh95J7S<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>{2}hdb</code>: <code>sudo ls /etc/openldap/slapd.d/cn=config/</code></p><p><code>rootdn</code>: <code>cn=admin,dc=com</code></p><p><code>{SSHA}Z44sZoJLqeECOAR/yEYm9ZyKUilZJO0I</code>: 步骤<code>1</code>里生成的结果</p></blockquote></li><li><p>apply db.ldif</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapmodify -Y EXTERNAL  -H ldapi:/// -f db.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><p>Make a changes to <code>/etc/openldap/slapd.d/cn=config/olcDatabase={1}monitor.ldif</code> (Do not edit manually) file to restrict the monitor access only to ldap root (ldapadm) user not to others.</p><ol><li><p>vim monitor.ldif</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dn: <span class="token assign-left variable">olcDatabase</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span>monitor,cn<span class="token operator">=</span>configchangetype: modifyreplace: olcAccessolcAccess: <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span>to * by dn.base<span class="token operator">=</span><span class="token string">"gidNumber=0+uidNumber=0,cn=peercred,cn=external, cn=auth"</span> <span class="token builtin class-name">read</span> by dn.base<span class="token operator">=</span><span class="token string">"cn=admin,dc=com"</span> <span class="token builtin class-name">read</span> by * none<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>修正 <code>/etc/openldap/slapd.d/cn=config/olcDatabase={1}monitor.ldif</code>的内容</p></blockquote></li><li><p>apply monitor.ldif</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapmodify -Y EXTERNAL  -H ldapi:/// -f monitor.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><p>Set up LDAP database</p><ol><li><p>Copy the sample database configuration file to /var/lib/ldap and update the file permissions.</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG<span class="token function">sudo</span> <span class="token function">chown</span> -R ldap:ldap /var/lib/ldap/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>Add the cosine and nis LDAP schemas.</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">for</span> <span class="token for-or-select variable">def</span> <span class="token keyword">in</span> /etc/openldap/schema/*.ldif <span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">sudo</span> ldapadd -Y EXTERNAL -H ldapi:/// -f <span class="token variable">$def</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>vim base.ldif</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dn: <span class="token assign-left variable">dc</span><span class="token operator">=</span>como: RDCenterobjectclass: dcobjectobjectclass: organizationdn: <span class="token assign-left variable">ou</span><span class="token operator">=</span>users,dc<span class="token operator">=</span>comobjectClass: organizationalUnitou: <span class="token function">users</span>dn: <span class="token assign-left variable">ou</span><span class="token operator">=</span>groups,dc<span class="token operator">=</span>comobjectClass: organizationalUnitou: <span class="token function">groups</span>dn: <span class="token assign-left variable">dc</span><span class="token operator">=</span>ymi,dc<span class="token operator">=</span>como: RDCenter Ymiobjectclass: dcobjectobjectclass: organizationdn: <span class="token assign-left variable">dc</span><span class="token operator">=</span>ymipro,dc<span class="token operator">=</span>como: RDCenter YmiProobjectclass: dcobjectobjectclass: organizationdn: <span class="token assign-left variable">dc</span><span class="token operator">=</span>ymicj,dc<span class="token operator">=</span>como: RDCenter YmiCjobjectclass: dcobjectobjectclass: organizationdn: <span class="token assign-left variable">ou</span><span class="token operator">=</span>users,dc<span class="token operator">=</span>ymi,dc<span class="token operator">=</span>comobjectClass: organizationalUnitou: <span class="token function">users</span>dn: <span class="token assign-left variable">ou</span><span class="token operator">=</span>users,dc<span class="token operator">=</span>ymipro,dc<span class="token operator">=</span>comobjectClass: organizationalUnitou: <span class="token function">users</span>dn: <span class="token assign-left variable">ou</span><span class="token operator">=</span>users,dc<span class="token operator">=</span>ymicj,dc<span class="token operator">=</span>comobjectClass: organizationalUnitou: <span class="token function">users</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>apply base.ldif</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapadd -x -W -D <span class="token string">"cn=admin,dc=com"</span> -f base.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注：需要输入密码的地方输入就好了</p></blockquote></li></ol></li></ol><ol start="6"><li><p>creating a new user - 测试，可以不做这一步</p><ol><li><p>create raj ldif file</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> raj.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dn: <span class="token assign-left variable">uid</span><span class="token operator">=</span>raj,ou<span class="token operator">=</span>users,dc<span class="token operator">=</span>comobjectClass: <span class="token function">top</span>objectClass: accountobjectClass: posixAccountobjectClass: shadowAccountcn: rajuid: rajuidNumber: <span class="token number">9999</span>gidNumber: <span class="token number">100</span>homeDirectory: /home/rajloginShell: /bin/bashgecos: Raj <span class="token punctuation">[</span>Admin <span class="token punctuation">(</span>at<span class="token punctuation">)</span> ITzGeek<span class="token punctuation">]</span>userPassword: <span class="token punctuation">{</span>crypt<span class="token punctuation">}</span>xshadowLastChange: <span class="token number">17058</span>shadowMin: <span class="token number">0</span>shadowMax: <span class="token number">99999</span>shadowWarning: <span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Use the ldapadd command with the above file to create a new user called “raj” in OpenLDAP directory.</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapadd -x -W -D <span class="token string">"cn=admin,dc=com"</span> -f raj.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Assign a password to the user.</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldappasswd -s password123 -W -D <span class="token string">"cn=admin,dc=com"</span> -x <span class="token string">"uid=raj,ou=users,dc=com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>verify</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ldapsearch -x <span class="token assign-left variable">cn</span><span class="token operator">=</span>raj -b <span class="token assign-left variable">dc</span><span class="token operator">=</span>com<span class="token comment"># 如果后面禁用了匿名访问，则用下面命令访问</span>ldapsearch -x <span class="token assign-left variable">cn</span><span class="token operator">=</span>raj -b <span class="token assign-left variable">dc</span><span class="token operator">=</span>com -W -D <span class="token string">"cn=admin,dc=com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>delete it  (Optional)</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapdelete -W -D <span class="token string">"cn=admin,dc=com"</span> <span class="token string">"uid=raj,ou=users,dc=com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><p>Add the LDAP service to the firewall</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> firewall-cmd --permanent --add-service<span class="token operator">=</span>ldap<span class="token function">sudo</span> firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>Enable LDAP logging</p><ol><li><p>modify rsyslog.conf</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/rsyslog.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> <code>Add below line to /etc/rsyslog.conf file.</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">local4.* /var/log/ldap.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Restart the rsyslog service.</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart rsyslog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li></ol><h2 id="Install-phpLDAPadmin"><a href="#Install-phpLDAPadmin" class="headerlink" title="Install phpLDAPadmin"></a>Install phpLDAPadmin</h2><ol><li><p>Install phpLDAPadmin</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> -y phpldapadmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如果找不到软件包，则 <code>sudo yum localinstall http://rpms.famillecollet.com/enterprise/remi-release-7.rpm -y</code></p></blockquote></li><li><p>Change nginx.conf - <code>conf.d</code>目录</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/nginx/conf.d/ldap.ymipro-l.com.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    server_name  ldap.ymipro-l.com ldap.ymipro.com<span class="token punctuation">;</span>    location /htdocs <span class="token punctuation">{</span>        <span class="token builtin class-name">alias</span> /usr/share/phpldapadmin/htdocs<span class="token punctuation">;</span>        index index.php<span class="token punctuation">;</span>        location ~ <span class="token punctuation">\</span>.php$ <span class="token punctuation">{</span>            <span class="token builtin class-name">alias</span> /usr/share/phpldapadmin<span class="token punctuation">;</span>            fastcgi_pass <span class="token number">127.0</span>.0.1:9000<span class="token punctuation">;</span>            fastcgi_index index.php<span class="token punctuation">;</span>            fastcgi_param SCRIPT_FILENAME <span class="token variable">$document_root</span><span class="token variable">$fastcgi_script_name</span><span class="token punctuation">;</span>            include fastcgi_params<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>            error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  /50x.html<span class="token punctuation">;</span><span class="token comment">#错误页面</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p><code>ldap.ymi-l.com</code>指向本服务器</p></blockquote><ol start="4"><li><p>修改 <code>phpldapadmin/config.php</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/phpldapadmin/config.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$servers</span>-<span class="token operator">&gt;</span>setValue<span class="token punctuation">(</span><span class="token string">'login'</span>,<span class="token string">'attr'</span>,<span class="token string">'dn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>// <span class="token variable">$servers</span>-<span class="token operator">&gt;</span>setValue<span class="token punctuation">(</span><span class="token string">'login'</span>,<span class="token string">'attr'</span>,<span class="token string">'uid'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>将<code>uid</code>结尾的注释掉，也就是行首添加<code>//</code>，将<code>dn</code>结尾的行打开，行首去掉<code>//</code> - 这个是因为我创建的用户RID为cn</p></blockquote></li><li><p>Restart</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">service</span> nginx restart<span class="token function">sudo</span> <span class="token function">service</span> php-fpm restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>selinux</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> setsebool -P httpd_can_connect_ldap on<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Login <code>http://ldap.ymipro-l.com/htdocs/</code></p><blockquote><p>访问端主机设置 <code>你的本地ldap服务器ip地址 ldap.ymipro-l.com</code></p><p>登录 使用用户名 <code>cn=admin,dc=com</code> 密码为设置的密码</p></blockquote></li></ol><h2 id="ldap添加memberof模块"><a href="#ldap添加memberof模块" class="headerlink" title="ldap添加memberof模块"></a>ldap添加<code>memberof</code>模块</h2><blockquote><p>这个工作应该一开始就做好，要不然后面要做的话，还得把建好的组全删掉再重建。这个模块的作用是当你建一个组的时候，把一些用户添加到这个组里去，它会自动给这些用户添加一个<code>memberOf</code>属性，有很多应用需要检查这个属性。</p><p>添加的时候比较麻烦，需要建3个<code>ldif</code>文件，然后1个执行<code>ldapmodify</code>，2个执行<code>ldapadd</code>，错一点都不行：</p></blockquote><ol><li><p>vim memberof_config.ldif</p> <pre class="line-numbers language-none"><code class="language-none">dn: cn=module,cn=configcn: moduleobjectClass: olcModuleListolcModuleLoad: memberofolcModulePath: /usr/lib64/openldap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>小心第5行，先要确认你的目录是不是在/usr/lib64下面</p></blockquote></li><li><p>apply memberof_config.ldif</p> <pre class="line-numbers language-none"><code class="language-none">sudo ldapadd -Q -Y EXTERNAL -H ldapi:/// -f memberof_config.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>vim refint1.ldif</p> <pre class="line-numbers language-none"><code class="language-none">dn: cn=module{0},cn=configadd: olcmoduleloadolcmoduleload: refint<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>这个文件里我的memberOf是第一个模块，所以编号是0，你的不一定，要看清楚到底第几号模块是memberof，然后就改成几就可以了</p><p>sudo ls -al /etc/openldap/slapd.d/cn=config/ 下面看 <code>module{编号}.ldif</code>之类的文件，哪个是命令新创建的，编号就是几</p></blockquote><ol start="4"><li><p>apply <code>refint1.ldif</code></p> <pre class="line-numbers language-none"><code class="language-none">sudo ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f refint1.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>设置</p><ol><li><p>vim memberof_groupofnames_overlay.ldif</p> <pre class="line-numbers language-none"><code class="language-none">dn: olcOverlay={0}memberof,olcDatabase={2}hdb,cn=configobjectClass: olcConfigobjectClass: olcMemberOfobjectClass: olcOverlayConfigobjectClass: topolcOverlay: memberofolcMemberOfDangling: ignoreolcMemberOfRefInt: TRUEolcMemberOfGroupOC: groupOfNamesolcMemberOfMemberAD: memberolcMemberOfMemberOfAD: memberOf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意<code>db</code> <code>member</code>数字</p></blockquote></li><li><p>apply <code>memberof_overlay.ldif</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapadd -Q -Y EXTERNAL -H ldapi:/// -f memberof_groupofnames_overlay.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>vim memberof_groupofuniquenames_overlay.ldif</p> <pre class="line-numbers language-none"><code class="language-none">dn: olcOverlay={0}memberof,olcDatabase={2}hdb,cn=configobjectClass: olcConfigobjectClass: olcMemberOfobjectClass: olcOverlayConfigobjectClass: topolcOverlay: memberofolcMemberOfDangling: ignoreolcMemberOfRefInt: TRUEolcMemberOfGroupOC: groupOfUniqueNamesolcMemberOfMemberAD: uniqueMemberolcMemberOfMemberOfAD: memberOf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>apply <code>memberof_groupofuniquenames_overlay.ldif</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapadd -Q -Y EXTERNAL -H ldapi:/// -f memberof_groupofuniquenames_overlay.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>vim refint2.ldif</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dn: <span class="token assign-left variable">olcOverlay</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span>refint,olcDatabase<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>hdb,cn<span class="token operator">=</span>configobjectClass: olcConfigobjectClass: olcOverlayConfigobjectClass: olcRefintConfigobjectClass: <span class="token function">top</span>olcOverlay: <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span>refintolcRefintAttribute: memberof member manager owner<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里的 1 来自 sudo cat /etc/openldap/slapd.d/cn=config/cn=module{0}.ldif</p></blockquote></li><li><p>apply <code>refint2.ldif</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ldapadd -Q -Y EXTERNAL -H ldapi:/// -f refint2.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li></ol><ul><li><p>创建</p><p>  在<code>users</code>下面建几个新条目 [<code>默认模板</code>、<code>inetOrgPerson</code>, rdn选择cn]，这些就是你的用户了。注意，在创建新条目时，一定要选择默认模板，不要选择什么<code>Posix</code>或者<code>Generic User Account</code>，那只会帮你建出一堆没用的<code>Linux</code>账号出来，我们只想要<code>web</code>用户，不想建什么<code>Linux</code>用户，另外密码这个地方一定要选<code>md5</code>，否则你后面和其它系统连接会出问题。</p><p>  然后在<code>groups</code>下面建几个组吧，比如<code>admin</code>, <code>mail</code>, <code>gitlab</code> 等等，注意选择<code>objectClass</code>为<code>groupOfNames</code>就行了。然后把你刚刚建好的几个用户分门别类的给他们加到组里去。</p><p>  在这一步上，如果你前面配置<code>memberOf</code>模块配置正确的话，你会在<code>user</code>的显示内部属性里看到它的<code>memberOf</code>属性，如果看不到，说明你没有配对。</p><blockquote><p>其实子项目都选“默认”，进去后再选<code>objectClass</code>。用户要填写<code>Email</code>，起码<code>Gitlab</code>如果没有邮箱不让登录的</p></blockquote><p>  如果喜欢分组，可以再 在<code>groups</code>下面创建 ou 对象 - <code>Generic: Organisational Unit</code>模板</p></li><li><p>导入 - 如果存在备份文件，则删除刚才创建的数据 (backups.ldif)，导入备份数据</p>  <pre class="line-numbers language-none"><code class="language-none">sudo susystemctl stop slapdrm -rf /var/lib/ldap/*slapadd -l /root/backups.ldifcp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIGchown ldap:ldap -R /var/lib/ldap/systemctl start slapdexit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>禁止匿名访问</p>  <pre class="line-numbers language-none"><code class="language-none">vim disable_anon.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">dn: cn=configchangetype: modifyadd: olcDisallowsolcDisallows: bind_anondn: cn=configchangetype: modifyadd: olcRequiresolcRequires: authcdn: olcDatabase={-1}frontend,cn=configchangetype: modifyadd: olcRequiresolcRequires: authc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">sudo ldapadd -Y EXTERNAL -H ldapi:/// -f disable_anon.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改管理员密码</p>  <pre class="line-numbers language-none"><code class="language-none">slappasswd -h {SSHA} -s 12345678{SSHA}dvlUz8vJMSHQsDdN63WE+UbFHzqVWRsr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>newrootpass.ldif</p></blockquote>  <pre class="line-numbers language-none"><code class="language-none">dn: olcDatabase={2}hdb,cn=configchangetype: modifyreplace: olcRootPWolcRootPW: {SSHA}dvlUz8vJMSHQsDdN63WE+UbFHzqVWRsr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">sudo ldapmodify -H ldapi:// -Y EXTERNAL -f newrootpass.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="Docker版本Gitlab集成"><a href="#Docker版本Gitlab集成" class="headerlink" title="Docker版本Gitlab集成"></a>Docker版本<code>Gitlab</code>集成</h2><ol><li><p>sudo vim /etc/gitlab/gitlab.rb</p> <pre class="line-numbers language-none"><code class="language-none">gitlab_rails['ldap_enabled'] = truegitlab_rails['ldap_servers'] = YAML.load &lt;&lt;-'EOS'   main: # 'main' is the GitLab 'provider ID' of this LDAP server     label: 'LDAP'     host: '192.52.194.23'     port: 389     uid: 'uid'     bind_dn: 'cn=admin,dc=com'     password: 'adminpass'     encryption: 'plain' # "start_tls" or "simple_tls" or "plain"     verify_certificates: true     smartcard_auth: false     active_directory: false     allow_username_or_email_login: false     lowercase_usernames: false     block_auto_created_users: false     base: 'dc=com'     user_filter: '(&amp;(memberOf=cn=gitlab,ou=groups,dc=com)(ou:dn:=users))'EOS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p><code>uid</code> 如果不使用<code>cn</code>而选择 <code>uid</code>，那么就要求ldap中的用户配置<code>uid</code>了,不然没法登录</p></blockquote><ol start="2"><li><p><code>sudo docker exec -it Zgitlab bash</code> 执行</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 配置完成后进行配置更新</span>gitlab-ctl reconfigure<span class="token comment"># 检查是否配置成功 - 列出前100个用户</span>gitlab-rake gitlab:ldap:check<span class="token comment"># 重启gitlab服务</span>gitlab-ctl restart <span class="token comment"># 注:发现这个不管用，不研究了，直接重启docker就好了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><blockquote><p>确认该用户不处于特殊状态 - 处于上面任意一种状态的账户在登录gitlab时都会报“Cloud not authenticate you from Ldapmain because “Invalid creadentials”.</p></blockquote><ul><li>不处于“禁用账户”的状态</li><li>不处于“需要首次登录修改密码”的状态</li></ul><h2 id="辅助"><a href="#辅助" class="headerlink" title="辅助"></a>辅助</h2><pre class="line-numbers language-none"><code class="language-none">sudo vim /etc/httpd/conf/httpd.conf <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">Listen 81<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo firewall-cmd --permanent --add-port=81/tcpsudo firewall-cmd --reloadsudo service httpd restartsudo systemctl enable httpd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo vim /etc/yum.repos.d/ltb-project.repo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">[ltb-project-noarch]name=LTB project packages (noarch)baseurl=https://ltb-project.org/rpm/$releasever/noarchenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-LTB-project<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo yum updatesudo  rpm --import https://ltb-project.org/wiki/lib/RPM-GPG-KEY-LTB-projectsudo yum install self-service-password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo vim /usr/share/self-service-password/conf/config.inc.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>下面的是需要修改的部分</p></blockquote><pre class="line-numbers language-none"><code class="language-none">$ldap_url = "ldap://localhost";$ldap_starttls = false;$ldap_binddn = "cn=admin,dc=com";$ldap_bindpw = "adminpass";$ldap_base = "dc=com";$ldap_login_attribute = "cn";$ldap_fullname_attribute = "cn";$ldap_filter = "(&amp;(|(cn={login})(mail={login})(uid={login}))(ou:dn:=users))";$keyphrase = "1237890";<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo service httpd restartsudo systemctl restart php-fpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>修改 <code>php</code>后只需要执行<code>sudo systemctl restart php-fpm</code>就可以</p></blockquote><pre class="line-numbers language-none"><code class="language-none">vim enableuserchangeselfpassword.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">dn: olcDatabase={2}hdb,cn=configchangetype: modifyadd: olcAccessolcAccess: {0}to attrs=userPassword        by dn="cn=setpasswd,ou=sys,dc=com" write        by dn.children="cn=setpasswd,ou=sys,dc=com" write        by anonymous auth        by self write        by * noneolcAccess: {1}to *        by dn="cn=setpasswd,ou=sys,dc=com" write        by dn.children="cn=setpasswd,ou=sys,dc=com" write        by * read<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">sudo ldapadd -Q -Y EXTERNAL -H ldapi:/// -f enableuserchangeselfpassword.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>使用<code>ldappasswd -s password12 -W -D "uid=raj,ou=users,dc=com" -x "uid=raj,ou=users,dc=com"</code> 弹出旧密码来修改自己的密码</p><p>使用<code>ldappasswd -s password12 -w password123 -D "uid=raj,ou=users,dc=com" -x "uid=raj,ou=users,dc=com"</code>来用旧密码<code>password123</code>来设置新密码</p></blockquote><p>访问 <code>&lt;ip&gt;:81</code> 即可</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><ul><li><code>fundamental/cron</code><ul><li><code>LdapBackupLdap_1{=master</code></li></ul></li><li><code>fundamental/nginx_conf</code><ul><li><code>YmiPro_Ldap_1{=master</code></li></ul></li></ul><hr><hr><hr><blockquote><p><a href="https://ltb-project.org/documentation/self-service-password/latest/start">https://ltb-project.org/documentation/self-service-password/latest/start</a></p><p><a href="https://github.com/ltb-project/self-service-password/issues/243">https://github.com/ltb-project/self-service-password/issues/243</a></p><p>密码被 LDAP 服务器拒绝</p><p><a href="https://blog.51cto.com/xiaolanlan/2429921?source=dra">https://blog.51cto.com/xiaolanlan/2429921?source=dra</a></p><p><a href="http://www.openldap.org/doc/admin24/access-control.html">http://www.openldap.org/doc/admin24/access-control.html</a></p></blockquote><h2 id="备份、还原"><a href="#备份、还原" class="headerlink" title="备份、还原"></a>备份、还原</h2><ol><li><p>Backup</p> <pre class="line-numbers language-none"><code class="language-none">sudo slapcat -n 2 -l backups.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Restore to export server</p> <pre class="line-numbers language-none"><code class="language-none">sudo systemctl stop slapdsudo rm -fr /var/lib/ldap/*sudo slapadd -l /root/backups.ldifsudo cp /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIGsudo chown ldap:ldap -R /var/lib/ldap/sudo systemctl start slapd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="禁止匿名访问"><a href="#禁止匿名访问" class="headerlink" title="禁止匿名访问"></a>禁止匿名访问</h2><ul><li><p>禁止匿名访问</p>  <pre class="line-numbers language-none"><code class="language-none">vim disable_anon.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">dn: cn=configchangetype: modifyadd: olcDisallowsolcDisallows: bind_anondn: cn=configchangetype: modifyadd: olcRequiresolcRequires: authcdn: olcDatabase={-1}frontend,cn=configchangetype: modifyadd: olcRequiresolcRequires: authc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>  <pre class="line-numbers language-none"><code class="language-none">sudo ldapadd -Y EXTERNAL -H ldapi:/// -f disable_anon.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="GroupOfUniqueNames"><a href="#GroupOfUniqueNames" class="headerlink" title="GroupOfUniqueNames"></a>GroupOfUniqueNames</h2><pre class="line-numbers language-none"><code class="language-none">vim memberof_load_configure.ldif<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">dn: cn=module{0},cn=configcn: module{0}objectClass: olcModuleListobjectclass: topoldModuleLoad: memberofolcModulePath: /usr/lib64/openldap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><blockquote><p><a href="https://www.itzgeek.com/how-tos/linux/centos-how-tos/step-step-openldap-server-configuration-centos-7-rhel-7.html">https://www.itzgeek.com/how-tos/linux/centos-how-tos/step-step-openldap-server-configuration-centos-7-rhel-7.html</a></p></blockquote><blockquote><p><a href="https://www.itzgeek.com/how-tos/linux/centos-how-tos/step-step-openldap-server-configuration-centos-7-rhel-7.html/2">https://www.itzgeek.com/how-tos/linux/centos-how-tos/step-step-openldap-server-configuration-centos-7-rhel-7.html/2</a></p></blockquote><hr><blockquote><p>教程</p></blockquote><blockquote><p><a href="https://segmentfault.com/a/1190000014683418?utm_source=tag-newest">https://segmentfault.com/a/1190000014683418?utm_source=tag-newest</a></p></blockquote><hr><blockquote><p>修改rootDN和密码</p></blockquote><blockquote><p><a href="https://blog.csdn.net/developerinit/article/details/76141065">https://blog.csdn.net/developerinit/article/details/76141065</a></p></blockquote><hr><blockquote><p>this base cannot be created with PLA</p></blockquote><blockquote><p><a href="https://stackoverflow.com/questions/13921030/phpldapadmin-does-not-work-for-an-unknown-reason">https://stackoverflow.com/questions/13921030/phpldapadmin-does-not-work-for-an-unknown-reason</a></p></blockquote><pre class="line-numbers language-none"><code class="language-none">dn: dc=ymi,dc=como: ldapobjectClass: dcObjectobjectClass: organizationldapadd  -f base.ldif  -x -D  cn=admin,dc=ymi,dc=com -W<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><p><a href="https://blog.csdn.net/liuying1802028915/article/details/82878585">https://blog.csdn.net/liuying1802028915/article/details/82878585</a></p><blockquote><p><a href="https://blog.csdn.net/liuying1802028915/article/details/82878585">https://blog.csdn.net/liuying1802028915/article/details/82878585</a></p></blockquote><hr><p>Find the root dn account and root dn password hash:<br>$ sudo ldapsearch -H ldapi:// -LLL -Q -Y EXTERNAL -b “cn=config” “(olcRootDN=*)” dn olcRootDN olcRootPW | tee ~/newpasswd.ldif</p><blockquote><p><a href="https://www.linuxwave.info/2015/07/reset-openldap-default-admin-password.html">https://www.linuxwave.info/2015/07/reset-openldap-default-admin-password.html</a></p></blockquote><hr><blockquote><p>Openldap and ldapadmin: Can’t contact LDAP server (-1) for user</p></blockquote><pre class="line-numbers language-none"><code class="language-none">getsebool -a | grep ldapsetsebool httpd_can_connect_ldap on<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><a href="https://www.centos.org/forums/viewtopic.php?t=60698">https://www.centos.org/forums/viewtopic.php?t=60698</a></p></blockquote><hr><blockquote><p>additional info: modify/add: olcRootPW: no equality matching rule</p></blockquote><pre class="line-numbers language-none"><code class="language-none">修改modify.ldif中对应选项的"add"为"replace"即可<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><p><code>gitlab</code></p><blockquote><p><a href="https://www.cnblogs.com/mafeng/p/10237474.html">https://www.cnblogs.com/mafeng/p/10237474.html</a></p><p><a href="https://www.58jb.com/html/120.html">https://www.58jb.com/html/120.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Ymi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ldap </tag>
            
            <tag> openldap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-杂锦</title>
      <link href="2021/01/11/git-za-jin/"/>
      <url>2021/01/11/git-za-jin/</url>
      
        <content type="html"><![CDATA[<ul><li><p><code>windows</code>上<code>git</code>文件标记为<code>+x</code>可执行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> update-index --chmod<span class="token operator">=</span>+x <span class="token operator">&lt;</span>your_file<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><ul><li><code>go mod</code><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">go list -m -f <span class="token string">'{{.Path}}'</span> all <span class="token comment"># all deps</span>go list -m -f <span class="token string">'{{if not .Indirect}}{{.Path}}{{end}}'</span> all <span class="token comment"># all direct deps</span>go list -m -f <span class="token string">'{{if not (or .Indirect .Main)}}{{.Path}}{{end}}'</span> all <span class="token comment"># all direct deps except self</span><span class="token comment"># update all "rain-rain-goaway" libs</span><span class="token keyword">for</span> <span class="token for-or-select variable">line</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span>go list -m -f <span class="token string">'{{if not (or .Indirect .Main)}}{{.Path}}{{end}}'</span> all <span class="token operator">|</span> <span class="token function">grep</span> rain-rain-goaway<span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span> go get <span class="token variable">$line</span><span class="token punctuation">;</span> <span class="token keyword">done</span><span class="token comment"># check has any change :( after git add to run </span><span class="token keyword">if</span> <span class="token punctuation">[</span> -n <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> status -s<span class="token variable">)</span></span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">"has"</span><span class="token punctuation">;</span> <span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7-安装golang</title>
      <link href="2021/01/11/centos7-an-zhuang-golang/"/>
      <url>2021/01/11/centos7-an-zhuang-golang/</url>
      
        <content type="html"><![CDATA[<ol><li><p>下载包 - <a href="https://golang.org/dl/">地址</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~<span class="token function">wget</span> https://golang.org/dl/go1.15.6.linux-amd64.tar.gz<span class="token function">tar</span> -xzf go1.15.6.linux-amd64.tar.gz<span class="token function">sudo</span> <span class="token function">mv</span> go /usr/local<span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/go/bin/go /usr/bin/go<span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/go/bin/godoc /usr/bin/godoc<span class="token function">sudo</span> <span class="token function">ln</span> -s /usr/local/go/bin/gofmt /usr/bin/gofmt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊米-Gitlab Runner安装</title>
      <link href="2021/01/11/centos7-ymi-gitlab-runner/"/>
      <url>2021/01/11/centos7-ymi-gitlab-runner/</url>
      
        <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><ul><li>安装<code>git</code></li><li><code>golang</code></li><li>操作都在<code>gitlab-runner</code>机器上</li></ul><h2 id="安装-gitlab-runner"><a href="#安装-gitlab-runner" class="headerlink" title="安装 gitlab-runner"></a>安装 <code>gitlab-runner</code></h2><ul><li>步骤  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">curl</span> -L --output /usr/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/bin/gitlab-runner<span class="token function">sudo</span> <span class="token function">useradd</span> --comment <span class="token string">'GitLab Runner'</span> --create-home gitlab-runner --shell /bin/bash<span class="token function">sudo</span> gitlab-runner <span class="token function">install</span> --user<span class="token operator">=</span>gitlab-runner --working-directory<span class="token operator">=</span>/home/gitlab-runner<span class="token function">sudo</span> gitlab-runner start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="本地依赖"><a href="#本地依赖" class="headerlink" title="本地依赖"></a>本地依赖</h2><ol><li><p>修改<code>/etc/hosts</code><br> 添加 <code>127.0.0.1 gitlab.ymipro.com</code></p><blockquote><p>如果<code>gitlab-runner</code>机器和<code>gitlab</code>机器不在一台机器上,则<code>127.0.0.1</code>变为<code>gitlab</code>所在机器的实际<code>IP</code></p></blockquote></li><li><p>信任证书</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span>rz<span class="token function">mkdir</span> -p /root/.gitlab-runner/certs/<span class="token function">tar</span> zxvf gitlab.ymipro-certs.tgz -C /root/.gitlab-runner/certs/<span class="token function">cat</span> /root/.gitlab-runner/certs/gitlab.ymipro.com.crt <span class="token operator">&gt;&gt;</span> /etc/pki/tls/certs/ca-bundle.crt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>本地访问<code>gitlab.ymipro.com</code>的<code>443</code>端口重定向到<code>20443</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> firewall-cmd --permanent --direct --add-rule ipv4 nat OUTPUT <span class="token number">0</span> -d <span class="token number">127.0</span>.0.1 -p tcp --dport <span class="token number">443</span> -j DNAT --to-destination <span class="token number">127.0</span>.0.1:20443<span class="token function">sudo</span> firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><code>sudo firewall-cmd --direct --get-all-rules</code> 查看<br>如果<code>/etc/hosts</code>上<code>gitlab.ymipro.com</code>指向的<code>ip</code>不是<code>127.0.0.1</code>,则用这个配置的<code>ip</code>替换掉<code>127.0.0.1</code></p></blockquote></li></ol><h2 id="注册-gitlab-runner"><a href="#注册-gitlab-runner" class="headerlink" title="注册 gitlab-runner"></a>注册 <code>gitlab-runner</code></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>root@gitlab-runner ~<span class="token punctuation">]</span><span class="token comment"># gitlab-runner register</span>Runtime platform                                    <span class="token assign-left variable">arch</span><span class="token operator">=</span>amd64 <span class="token assign-left variable">os</span><span class="token operator">=</span>linux <span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token number">18069</span> <span class="token assign-left variable">revision</span><span class="token operator">=</span>d0b76032 <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">12.0</span>.2Running <span class="token keyword">in</span> system-mode.                                                                               Please enter the gitlab-ci coordinator URL <span class="token punctuation">(</span>e.g. https://gitlab.com/<span class="token punctuation">)</span>:https://gitlab.ymipro.comPlease enter the gitlab-ci token <span class="token keyword">for</span> this runner:g-W1Bii8yVzbnVkbxa23Please enter the gitlab-ci description <span class="token keyword">for</span> this runner:<span class="token punctuation">[</span>gitlab-runner<span class="token punctuation">]</span>: h-centos7-buildinPlease enter the gitlab-ci tags <span class="token keyword">for</span> this runner <span class="token punctuation">(</span>comma separated<span class="token punctuation">)</span>:l-h, os-centos7Registering runner<span class="token punctuation">..</span>. succeeded                     <span class="token assign-left variable">runner</span><span class="token operator">=</span>g-W1Bii8Please enter the executor: docker, ssh, virtualbox, docker+machine, docker-ssh, parallels, shell, docker-ssh+machine, kubernetes:shellRunner registered successfully. Feel <span class="token function">free</span> to start it, but <span class="token keyword">if</span> it's running already the config should be automatically reloaded<span class="token operator">!</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置-git-https访问重定向为git访问"><a href="#配置-git-https访问重定向为git访问" class="headerlink" title="配置 git - https访问重定向为git访问"></a>配置 <code>git</code> - <code>https</code>访问重定向为<code>git</code>访问</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> -u gitlab-runner <span class="token function">bash</span><span class="token builtin class-name">cd</span> ~<span class="token function">git</span> config --global url.<span class="token string">"ssh://git@gitlab.ymipro.com:2022"</span>.insteadOf <span class="token string">"https://gitlab.ymipro.com"</span><span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置gitlab-runner用户可以无障碍clone"><a href="#配置gitlab-runner用户可以无障碍clone" class="headerlink" title="配置gitlab-runner用户可以无障碍clone"></a>配置<code>gitlab-runner</code>用户可以无障碍<code>clone</code></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment">## ssh证书</span><span class="token function">sudo</span> -ugitlab-runner <span class="token function">bash</span><span class="token builtin class-name">cd</span> ~<span class="token builtin class-name">cd</span> .sshrz<span class="token function">tar</span> zxvf idr.tgz<span class="token function">rm</span> -rf idr.tgz<span class="token punctuation">[</span>gitlab-runner@gitlab-runner .ssh<span class="token punctuation">]</span>$ lltotal <span class="token number">8</span>-rw-------. <span class="token number">1</span> gitlab-runner gitlab-runner <span class="token number">1675</span> Jun <span class="token number">26</span> <span class="token number">15</span>:56 id_rsa-rw-r--r--. <span class="token number">1</span> gitlab-runner gitlab-runner  <span class="token number">404</span> Jun <span class="token number">26</span> <span class="token number">15</span>:56 id_rsa.pub<span class="token comment">## 身份</span><span class="token function">git</span> config --global user.email <span class="token string">"auto@ymipro.com"</span><span class="token function">git</span> config --global user.name <span class="token string">"auto"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果不存在<code>~/.ssh</code>目录则创建</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>测试<code>CI/CD</code>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># clone citest</span><span class="token function">sudo</span> -ugitlab-runner <span class="token function">bash</span><span class="token function">git</span> clone ssh://git@gitlab.ymipro.com:2022/test/citest.git<span class="token comment"># update ndate.txt</span><span class="token builtin class-name">cd</span> citest<span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token variable">)</span></span> <span class="token operator">&gt;</span> ndate.txt<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -s -m <span class="token string">"update"</span><span class="token function">git</span> push<span class="token comment"># see ci result on web</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Ymi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab-runner </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS安装Docker</title>
      <link href="2021/01/10/centos-ymi-an-zhuang-docker/"/>
      <url>2021/01/10/centos-ymi-an-zhuang-docker/</url>
      
        <content type="html"><![CDATA[<h3 id="Uninstall-old-versions"><a href="#Uninstall-old-versions" class="headerlink" title="Uninstall old versions"></a>Uninstall old versions</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum remove docker <span class="token punctuation">\</span>                 docker-client <span class="token punctuation">\</span>                 docker-client-latest <span class="token punctuation">\</span>                 docker-common <span class="token punctuation">\</span>                 docker-latest <span class="token punctuation">\</span>                 docker-latest-logrotate <span class="token punctuation">\</span>                 docker-logrotate <span class="token punctuation">\</span>                 docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Set-up-the-repository"><a href="#Set-up-the-repository" class="headerlink" title="Set up the repository"></a>Set up the repository</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> -y yum-utils<span class="token function">sudo</span> yum-config-manager <span class="token punctuation">\</span>   --add-repo <span class="token punctuation">\</span>   https://download.docker.com/linux/centos/docker-ce.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Install-Docker-Engine"><a href="#Install-Docker-Engine" class="headerlink" title="Install Docker Engine"></a><strong>Install Docker Engine</strong></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-compose-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Start-Docker"><a href="#Start-Docker" class="headerlink" title="Start Docker."></a>Start Docker.</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl start docker<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><a href="https://docs.docker.com/engine/install/centos/">https://docs.docker.com/engine/install/centos/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>羊米-Gitlab安装</title>
      <link href="2021/01/10/centos7-ymi-gitlab/"/>
      <url>2021/01/10/centos7-ymi-gitlab/</url>
      
        <content type="html"><![CDATA[<h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><ol><li>用<code>vmware</code>虚拟机安装<code>centos7 mini</code>系统</li><li>安装<code>Docker</code></li></ol><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="恢复-gitlab-数据或创建目录"><a href="#恢复-gitlab-数据或创建目录" class="headerlink" title="恢复 gitlab 数据或创建目录"></a>恢复 <code>gitlab</code> 数据或创建目录</h2><blockquote><p>只有网站需要恢复旧数据时，才按下面步骤做 - 其中<code>gitlab-docker.191220233028.tgz</code>为备份包</p></blockquote><pre class="line-numbers language-none"><code class="language-none">sudo suyum install lrzsz -ycd ~rztar zxvf gitlab-docker.201025113038.tgz -C /cd /servicedatas/gitlab-docker./scripts/apply.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>只有网站不需要恢复旧数据时，才按下面步骤做- 上面恢复数据了就不要做了</p></blockquote><pre class="line-numbers language-none"><code class="language-none">sudo sucd /mkdir -p /servicedatas/gitlab-dockerexit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="构建GitlabDocker"><a href="#构建GitlabDocker" class="headerlink" title="构建GitlabDocker"></a>构建<code>GitlabDocker</code></h2><ol><li><p>docker setup</p> <pre class="line-numbers language-none"><code class="language-none">sudo docker run --detach \  --hostname gitlab.ymipro.com \  --publish 20443:443 --publish 2080:80 --publish 2022:22 \  --name Zgitlab \  --restart always \  --volume /servicedatas/gitlab-docker/y_config:/etc/gitlab:Z \  --volume /servicedatas/gitlab-docker/l_logs:/var/log/gitlab:Z \  --volume /servicedatas/gitlab-docker/y_data:/var/opt/gitlab:Z \  --volume /etc/localtime:/etc/localtime:ro \  gitlab/gitlab-ce:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>如果为第一次（前面没有做恢复数据），做下面的，不然不做</p><ol><li><p><code>/servicedatas/gitlab-docker/y_config/gitlab.rb</code> 修改 <code>ssh</code> 端口</p> <pre class="line-numbers language-none"><code class="language-none">gitlab_rails['gitlab_shell_ssh_port'] = 2022<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改 <code>/servicedatas/gitlab-docker/y_config/gitlab.rb</code> 来启用 <code>HTTPS</code></p> <pre class="line-numbers language-none"><code class="language-none">external_url 'https://gitlab.ymipro.com'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改 <code>/servicedatas/gitlab-docker/y_config/gitlab.rb</code> 来修改时区</p> <pre class="line-numbers language-none"><code class="language-none">gitlab_rails['time_zone'] = 'Asia/Shanghai'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>替换<code>Gitlab</code>的<code>证书秘钥</code></p><ul><li> <code>/servicedatas/gitlab-docker/y_config/ssl</code>下替换成预定义<code>gitlab.ymipro-certs.tgz</code>中的证书和秘钥</li><li>注意权限<pre class="line-numbers language-none"><code class="language-none">[z@gitlab-sv-c ssl]$ ls -ltotal 8-rw-------. 1 root root 1797 Jul 12 23:03 gitlab.ymipro.com.crt-r--------. 1 root root 3243 Jul 12 23:03 gitlab.ymipro.com.key<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol></li></ol><h2 id="本地模式配置"><a href="#本地模式配置" class="headerlink" title="本地模式配置"></a>本地模式配置</h2><blockquote><p>虚拟机宿主机我们叫它<code>host</code>吧</p><p><code>host</code>上通过<code>nginx</code>搭建<code>gitlab</code>服务器，域名<code>gitlab.1.ymipro-l.com</code></p></blockquote><ol><li><p>修改<code>host</code>的<code>hosts</code>文件，添加 <code>127.0.0.1 gitlab.ymipro-l.com</code></p><blockquote><p><code>127.0.0.1</code>为<code>nginx</code>所在机器<code>IP</code>，这里为<code>host</code>机器<code>IP</code></p></blockquote></li><li><p>修改<code>host</code>机器上的<code>nginx</code>配置<code>conf.d</code>目录，增加文件<code>gitlab.ymipro-l.com.conf</code></p><blockquote><p>其中<code>192.168.223.60</code>为<code>gitlab docker</code>所在的机器</p></blockquote> <pre class="line-numbers language-none"><code class="language-none">upstream gitlab_local {    server 192.168.223.60:20443;}server {    listen 443 default ssl;    ssl_certificate ssl/gitlab.ymipro.com.crt;    ssl_certificate_key ssl/gitlab.ymipro.com.key;    server_name gitlab.ymipro-l.com;    location / {        proxy_set_header Host gitlab.ymipro-l.com;        proxy_set_header X-Real-IP $remote_addr;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        proxy_set_header X-Forwarded-Proto https;        proxy_pass https://gitlab_local;        client_max_body_size 200m;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修改<code>host</code>机器上的<code>nginx</code>配置<code>conf.d</code>目录，增加文件<code>gitlab.ymipro-l.com.conf.stream</code></p> <pre class="line-numbers language-none"><code class="language-none">upstream gitlab_local_ssh {    server 192.168.223.60:2022;}server {    listen       2022;    listen       [::]:2022;    proxy_pass gitlab_local_ssh;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修改<code>host</code>机器上的<code>nginx.conf</code>，末尾增加</p> <pre class="line-numbers language-none"><code class="language-none">stream {    include conf.d/*.conf.stream;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>修改<code>host</code>机器上的<code>ssl</code>[与<code>conf.d</code>同级], 把<code>gitlab.ymipro.com-certs.zip</code>中的证书和秘钥放进去</p></li><li><p>修改<code>docker</code>所在机器(服务器)上的防火墙</p> <pre class="line-numbers language-none"><code class="language-none">sudo firewall-cmd --permanent --add-port=20443/tcpsudo firewall-cmd --permanent --add-port=2022/tcpsudo firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="不能启动时候的诊断"><a href="#不能启动时候的诊断" class="headerlink" title="不能启动时候的诊断"></a>不能启动时候的诊断</h2></li></ol><ul><li>解决方案  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker <span class="token builtin class-name">exec</span> -it Zgitlab <span class="token function">bash</span> gitlab-ctl status gitlab-ctl <span class="token function">tail</span> gitaly    <span class="token punctuation">{</span><span class="token string">"error"</span><span class="token builtin class-name">:</span><span class="token string">"strconv.Atoi: parsing <span class="token entity" title="\&quot;">\"</span><span class="token entity" title="\&quot;">\"</span>: invalid syntax"</span>,<span class="token string">"level"</span><span class="token builtin class-name">:</span><span class="token string">"fatal"</span>,<span class="token string">"msg"</span><span class="token builtin class-name">:</span><span class="token string">"find gitaly"</span>,<span class="token string">"time"</span><span class="token builtin class-name">:</span><span class="token string">"2020-02-04T23:49:49Z"</span>,<span class="token string">"wrapper"</span>:7905<span class="token punctuation">}</span>  <span class="token function">rm</span> /var/opt/gitlab/gitaly/gitaly.pid  gitlab-ctl start gitaly  gitlab-ctl status gitaly <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Ymi </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7初探</title>
      <link href="2021/01/06/centos7-chu-tan/"/>
      <url>2021/01/06/centos7-chu-tan/</url>
      
        <content type="html"><![CDATA[<ol><li><p>修改用户名</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> hostnamectl set-hostname dev-env-srv <span class="token comment"># 重新登陆生效</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>yum</code>改阿里源</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">wget</span> -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo<span class="token function">sudo</span> yum clean all<span class="token function">sudo</span> yum makecache<span class="token function">sudo</span> yum update<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="3"><li><p><code>docker</code>, <code>docker-compose</code> - 建议看<a href="https://docs.docker.com/engine/install/centos/">原始文档</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> -y yum-utils<span class="token function">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin<span class="token function">sudo</span> systemctl start docker<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="5"><li><p><code>epel-release</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装epel源</span><span class="token function">sudo</span> yum <span class="token function">install</span> epel-release <span class="token function">wget</span> <span class="token function">vim</span> -y<span class="token comment"># 修改为阿里的epel源</span><span class="token function">sudo</span> <span class="token function">wget</span> -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>安装<code>gcc g++</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> yum <span class="token function">install</span> gcc-c++ -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><ol start="7"><li><p>安装其他</p><pre class="line-numbers language-bah" data-language="bah"><code class="language-bah">sudo yum install deltarpm -ysudo yum install net-tools  -y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>解决用户 <code>z</code> 不能调用 <code>sudo</code> 的问题 【/etc/sudoers】</p><p><em>这样设置后，用户 z 就可以调用 <code>sudo</code> 命令，并用自己的密码来提权了</em></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">su</span><span class="token comment"># visudo</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">root        <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> ALL  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面增加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">z  <span class="token assign-left variable">ALL</span><span class="token operator">=</span><span class="token punctuation">(</span>ALL<span class="token punctuation">)</span> ALL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><ol start="9"><li><p>网络时间同步，设置时区</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># install</span><span class="token function">sudo</span> yum -y <span class="token function">install</span> ntp ntpdate<span class="token comment"># 设置系统时间与网络时间同步</span><span class="token function">sudo</span> ntpdate cn.pool.ntp.org<span class="token comment"># 将系统时间写入硬件时间</span><span class="token function">sudo</span>  hwclock --systohc<span class="token comment">#</span><span class="token function">sudo</span> timedatectl<span class="token comment"># 修改时区为 Asia</span><span class="token function">sudo</span> timedatectl  set-timezone Asia/Shanghai<span class="token comment"># Error: Servname Not Supported for Ai_socktype</span><span class="token function">vim</span> /etc/servicesntp             <span class="token number">123</span>/tcpntp             <span class="token number">123</span>/udp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7配置静态IP地址</title>
      <link href="2021/01/06/centos7-pei-zhi-jing-tai-ip-di-zhi/"/>
      <url>2021/01/06/centos7-pei-zhi-jing-tai-ip-di-zhi/</url>
      
        <content type="html"><![CDATA[<ol><li><p><code>ls /etc/sysconfig/network-scripts</code> 查看以<code>ifcfg-</code>开始的非<code>ifcfg-lo</code>的配置文件，这里为<code>ifcfg-ens33</code></p><p><img src="/2021/01/06/centos7-pei-zhi-jing-tai-ip-di-zhi/ls.png" alt="ls"></p></li><li><p>按如下内容修改<code>ifcfg-ens33</code></p><p><img src="/2021/01/06/centos7-pei-zhi-jing-tai-ip-di-zhi/ifcfg-ens33.png" alt="ifcfg-ens33"></p><blockquote><p>解释一下：我这里为虚拟机，网段为<code>192.168.223.0/24</code>，网关为<code>192.168.223.2</code></p></blockquote></li><li><p>重启网络 <code>systemctl restart network</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Install </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
            <tag> 静态IP地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sudo保持当前用户的环境变量</title>
      <link href="2020/12/27/sudo-bao-chi-dang-qian-yong-hu-de-huan-jing-bian-liang/"/>
      <url>2020/12/27/sudo-bao-chi-dang-qian-yong-hu-de-huan-jing-bian-liang/</url>
      
        <content type="html"><![CDATA[<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>在<code>/etc/sudoers</code>文件中设置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Defaults <span class="token operator">!</span>env_reset<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>在<code>/etc/sudoers</code>文件中</p><p>可以把需要传递环境变量的命令设置到<code>env_keep</code></p><p>例如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Defaults env_keep <span class="token operator">+=</span> <span class="token string">"ftp_proxy http_proxy https_proxy no_proxy"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><a href="https://www.cnblogs.com/shengulong/p/7593614.html">https://www.cnblogs.com/shengulong/p/7593614.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> sudo </tag>
            
            <tag> env </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo在文章中添加图片</title>
      <link href="2020/12/22/hexo-zai-wen-zhang-zhong-tian-jia-tu-pian/"/>
      <url>2020/12/22/hexo-zai-wen-zhang-zhong-tian-jia-tu-pian/</url>
      
        <content type="html"><![CDATA[<ol><li>目录中安装插件<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code><br><img src="/2020/12/22/hexo-zai-wen-zhang-zhong-tian-jia-tu-pian/install-plugin.jpg"></li><li>目录的<code>_config.yml</code>文件中修改<code>post_asset_folder</code>为<code>true</code><br><img src="/2020/12/22/hexo-zai-wen-zhang-zhong-tian-jia-tu-pian/post-assert-folder.jpg">     </li><li>尝试生成一篇新的文章<code>hexo new post "hexo在文章中添加图片"</code></li><li>会发现同时生成了一个放置图片的目录<br><img src="/2020/12/22/hexo-zai-wen-zhang-zhong-tian-jia-tu-pian/newpost.jpg">     </li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> config </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>地图-经纬度所在省份城市</title>
      <link href="2020/12/22/di-tu-jing-wei-du-suo-zai-sheng-fen-cheng-shi/"/>
      <url>2020/12/22/di-tu-jing-wei-du-suo-zai-sheng-fen-cheng-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="下载区域文件"><a href="#下载区域文件" class="headerlink" title="下载区域文件"></a>下载区域文件</h2><p>根据附属的参考，本文选择从<code>https://osm-boundaries.com/</code>中下载</p><p>滑动到页面最下，选择<code>Download</code></p><p><code>Admin Level</code> 对于中国来说</p><ul><li><p><code>2</code> 国家级别</p></li><li><p><code>3</code> 香港、澳门、直辖市、阿克赛钦等你懂得区域</p></li><li><p><code>4</code> 省</p></li><li><p><code>5</code> 省下面的市</p></li><li><p><code>6</code> 次级市、市里的区，县</p></li><li><p><code>7</code>， <code>8</code> 略</p><p><img src="/2020/12/22/di-tu-jing-wei-du-suo-zai-sheng-fen-cheng-shi/downlaod-map.jpg" alt="download-map"></p></li></ul><p>如果下载的数据(例如下载世界范围内level2的地图)，由于国家比较多需要分批下载，这时候就需要合并了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g geojson-mergegeojson-merge <span class="token number">1</span>.geojson <span class="token number">2</span>.geojson <span class="token operator">&gt;</span> combined.geojson<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><p>下载的为<code>geojson</code>文件，可以从<code>https://mapshaper.org/</code>查看文件包含的区域</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>这里使用<code>github.com/paulmach/orb</code>这个库来读取<code>geojson</code>文件并进行经纬度到城市的转换</p><p>详情见代码<code>https://github.com/jiuzhou-zhao/reverse-geocode-offline</code></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ul><li><p><code>https://osm-boundaries.com/</code>上默认是<code>2020-11-09</code>的数据，竟然没有<code>china</code>这个<code>2</code>级轮廓</p></li><li><p><code>nominatim</code>提供了<code>api</code>来获取<code>geojson</code>格式的地图，但是不知道怎么现在全国范围内的省，只能一个一个下</p><ul><li><code>https://nominatim.org/release-docs/develop/api/Overview/</code></li><li><code>https://github.com/osm-search/Nominatim</code></li><li><code>https://nominatim.openstreetmap.org/ui/search.html?q=china</code></li></ul></li><li><p><code>https://www.openstreetmap.org/relation/270056</code>中国轮廓，还是找不到下属的省份信息</p></li><li><p><code>http://polygons.openstreetmap.fr/index.py</code>看样子不错啊，但是需要提供ID(例如270056)来下载。还是不知道怎么下载它下面的所有子节点</p></li><li><p>关于获取子项目，这样来做吧</p><ul><li><p>打开<code>http://overpass-turbo.eu/</code></p></li><li><p>执行 - 其中 <code>admin_level=3</code> 执行完后再执行一次 <code>admin_level=4</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>out:csv<span class="token punctuation">(</span>::type, ::id, name, admin_level, parent_id<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>rel<span class="token punctuation">(</span><span class="token number">270056</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>.c<span class="token punctuation">;</span>.c map_to_area<span class="token punctuation">;</span>rel<span class="token punctuation">(</span>area<span class="token punctuation">)</span><span class="token punctuation">[</span>admin_level<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>foreach<span class="token punctuation">(</span>  convert rel ::id <span class="token operator">=</span> id<span class="token punctuation">(</span><span class="token punctuation">)</span>, ::<span class="token operator">=</span>::, <span class="token assign-left variable">parent_id</span><span class="token operator">=</span>c.set<span class="token punctuation">(</span>id<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span> // save as parent_id  // how to now get each <span class="token builtin class-name">set</span> of children of the admin_level bellow?.  out<span class="token punctuation">;</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><blockquote><p><a href="https://www.jianshu.com/p/03a9204e2380">https://www.jianshu.com/p/03a9204e2380</a></p><p><a href="https://mapshaper.org/">https://mapshaper.org/</a></p><p><a href="https://osm-boundaries.com/">https://osm-boundaries.com/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Map </category>
          
      </categories>
      
      
        <tags>
            
            <tag> longitude </tag>
            
            <tag> latitude </tag>
            
            <tag> geocode </tag>
            
            <tag> reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>brew tap</title>
      <link href="2020/12/16/brew-tap/"/>
      <url>2020/12/16/brew-tap/</url>
      
        <content type="html"><![CDATA[<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p><code>brew</code>没找到<code>influx</code>客户端程序，所以搞一个</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p><code>github</code>上创建用户<code>patdz</code>下的仓库<a href="https://github.com/patdz/influx-cli"><code>influx-cli</code></a>, 用来存放二进制的<code>influx</code>包</p></li><li><p>本地打包<code>influx</code> <code>tar zcvf 0.0.1.tgz influx</code></p></li><li><p><code>github</code>的<code>influx-cli</code>页面创建<code>release</code> <code>v0.0.0.1</code>, 本地文件<code>0.0.1.tgz</code>附加到该<code>release</code>上。文件地址为<code>https://github.com/patdz/influx-cli/releases/download/v0.0.1/0.0.1.tgz</code></p></li><li><p>执行<code>brew create https://github.com/patdz/influx-cli/releases/download/v0.0.1/0.0.1.tgz</code></p><ol><li><p>执行会下载包并创建<code>brew Formula</code>文件</p></li><li><p><code>def install</code>函数内容改为</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby">bin<span class="token punctuation">.</span>install <span class="token string">"influx"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol></li><li><p>上一步会看到提示，常见的<code>rb</code>文件为<code>/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/influx-cli.rb</code>,本步尝试安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> influx-cli<span class="token comment"># influx 会安装到 /usr/local/bin/influx 目录下</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>github</code>上创建项目<a href="https://github.com/patdz/homebrew-influx-cli"><code>homebrew-influx-cli</code></a> - 注意：要用<code>github</code>上项目支持<code>brew tap</code>，则命名必须为<code>homebrew-*</code>形式</p></li><li><p>添加<code>/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/influx-cli.rb</code>文件到项目中并<code>pull</code></p></li><li><p>二进制版本升级后自动更新参考<code>https://github.com/aoki/homebrew-redis-cli</code>吧</p></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew tap patdz/influx-clibrew update <span class="token operator">&amp;&amp;</span> brew doctorbrew <span class="token function">install</span> influx-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://liam.page/2016/07/30/release-your-own-app-in-Homebrew/">https://liam.page/2016/07/30/release-your-own-app-in-Homebrew/</a></p><p><a href="https://github.com/aoki/homebrew-redis-cli">https://github.com/aoki/homebrew-redis-cli</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Brew </category>
          
      </categories>
      
      
        <tags>
            
            <tag> brew-tap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac安装第三方软件(开发工具篇)</title>
      <link href="2020/12/16/mac-an-zhuang-di-san-fang-ruan-jian-kai-fa-gong-ju-pian/"/>
      <url>2020/12/16/mac-an-zhuang-di-san-fang-ruan-jian-kai-fa-gong-ju-pian/</url>
      
        <content type="html"><![CDATA[<h1 id="redis-cli"><a href="#redis-cli" class="headerlink" title="redis-cli"></a><code>redis-cli</code></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew tap ringohub/redis-cli brew update <span class="token operator">&amp;&amp;</span> brew doctorbrew <span class="token function">install</span> redis-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="mysql-client"><a href="#mysql-client" class="headerlink" title="mysql-client"></a><code>mysql-client</code></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> mysql-client<span class="token builtin class-name">echo</span> <span class="token string">'export PATH="/usr/local/opt/mysql-client/bin:<span class="token environment constant">$PATH</span>"'</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="influxdb-client"><a href="#influxdb-client" class="headerlink" title="influxdb client"></a><code>influxdb client</code></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew tap patdz/influx-clibrew update <span class="token operator">&amp;&amp;</span> brew doctorbrew <span class="token function">install</span> influx-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> brew </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>监控[influxdb+telegraf+grafana]</title>
      <link href="2020/12/09/jian-kong-influxdb-telegraf-grafana/"/>
      <url>2020/12/09/jian-kong-influxdb-telegraf-grafana/</url>
      
        <content type="html"><![CDATA[<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装<code>Docker</code></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 更新ubuntu的apt源索引</span><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token comment"># 安装包允许apt通过HTTPS使用仓库</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token punctuation">\</span>    apt-transport-https <span class="token punctuation">\</span>    ca-certificates <span class="token punctuation">\</span>    <span class="token function">curl</span> <span class="token punctuation">\</span>    software-properties-common    <span class="token comment"># 添加Docker官方GPG key</span><span class="token function">curl</span> -fsSL https://download.docker.com/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -<span class="token comment"># 设置Docker稳定版仓库</span><span class="token function">sudo</span> add-apt-repository <span class="token punctuation">\</span>   <span class="token string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu \   <span class="token variable"><span class="token variable">$(</span>lsb_release -cs<span class="token variable">)</span></span> \   stable"</span>   <span class="token comment"># 添加仓库后，更新apt源索引</span><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token comment"># 安装最新版Docker CE（社区版）</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-ce<span class="token comment"># 安装 docker-compose</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://www.cnblogs.com/blog-rui/p/11244023.html">https://www.cnblogs.com/blog-rui/p/11244023.html</a></p></blockquote><h2 id="安装telegraf"><a href="#安装telegraf" class="headerlink" title="安装telegraf"></a>安装<code>telegraf</code></h2><ol><li><p>点击链接下载telegraf指定版本：<a href="https://repos.influxdata.com/debian/pool/stable/t/telegraf">下载安装包</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 这里选择 下载了 telegraf_1.16.3-1_amd64.deb</span><span class="token function">sudo</span> dpkg -i telegraf_1.16.3-1_amd64.deb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>修改配置文件 <code>/etc/telegraf/telegraf.conf</code></p><ul><li><code>[[outputs.influxdb]]</code>项取消注释 <code>urls = ["http://127.0.0.1:8086"]</code> 和 <code>database = "telegraf"</code><ul><li>这样<code>telegraf</code>会默默的向<code>influxdb</code>里面写入<code>cpu</code>、<code>内存</code>、<code>硬盘</code>等硬件的时序参数</li></ul></li><li><code>[[outputs.influxdb]]</code>项取消注释<code>username</code>和<code>password</code>并将实际值设置为<code>influxdb</code>用户的实际值</li><li>取消注释：<code>[[inputs.statsd]]</code>和其下面的<code>protocol = "udp"</code> <code>service_address = ":8125"</code><ul><li>开启<code>statsd</code>服务</li></ul></li></ul></li><li><p>重启服务 <code>systemctl restart telegraf</code></p></li></ol><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>[[outputs.influxdb]]</p>]]></content>
      
      
      <categories>
          
          <category> Monitor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> influxdb </tag>
            
            <tag> influx </tag>
            
            <tag> telegraf </tag>
            
            <tag> grafana </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自动申请证书</title>
      <link href="2020/12/09/yun-wei-acme.sh/"/>
      <url>2020/12/09/yun-wei-acme.sh/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E">https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-none"><code class="language-none">curl  https://get.acme.sh | sh -s email=my@example.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如果国内由于网络原因下载不了，可以参考<code>https://github.com/acmesh-official/acme.sh/wiki/Install-in-China</code></p></blockquote><h2 id="使用域名API申请"><a href="#使用域名API申请" class="headerlink" title="使用域名API申请"></a>使用域名API申请</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 申请证书 - 阿里云</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">Ali_Key</span><span class="token operator">=</span><span class="token string">"YourKey"</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">Ali_Secret</span><span class="token operator">=</span><span class="token string">"YourSecret"</span>acme.sh --issue --dns dns_ali -d ymipro.com -d *.ymipro.com<span class="token comment"># 申请证书 - dnspod</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">DP_Id</span><span class="token operator">=</span><span class="token string">"2960"</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">DP_Key</span><span class="token operator">=</span><span class="token string">"f2d1"</span>acme.sh --issue --dns dns_dp --register-account -m stwstw0123@163.com<span class="token comment"># ACCOUNT_THUMBPRINT='nwJk80O5NIW0oeWVFGpRXxiMUBXqLoM699cy4uWaI7U'</span>acme.sh --issue --dns dns_dp -d ymipro.com  -d *.ymipro.comacme.sh --issue -d *.dev.ymipro.com -d ymipro.com -d *.ymipro.com -d ymicj.com -d *.ymicj.com --challenge-alias ymipro.com --dns dns_dp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2023-10-13: 现在默认申请ecc证书，貌似 <code>-d *.dev.ymipro.com</code> 这种证书申请不下来，可以参考下面选择不同证书类型</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 申请RSA证书</span>acme.sh --issue -d <span class="token variable">${DOMAIN}</span> -d *.<span class="token variable">${DOMAIN}</span> --dns dns_ali   <span class="token punctuation">\</span>        --dnssleep <span class="token number">30</span> --ocsp --days <span class="token number">30</span> --keylength <span class="token number">2048</span><span class="token comment"># 申请ECC证书</span>acme.sh --issue -d <span class="token variable">${DOMAIN}</span> -d *.<span class="token variable">${DOMAIN}</span> --dns dns_ali   <span class="token punctuation">\</span>        --dnssleep <span class="token number">30</span> --ocsp --days <span class="token number">30</span> --keylength ec-256<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用Alias申请"><a href="#使用Alias申请" class="headerlink" title="使用Alias申请"></a>使用Alias申请</h2><ol><li><p>目标域名[example]上添加<code>CNAME</code>记录 </p><pre class="line-numbers language-none"><code class="language-none">acme-challenge.example.com   =&gt;   _acme-challenge.aliasDomainForValidationOnly.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>example.com 为申请证书的域名；aliasDomainForValidationOnly.com 为协助证书验证的域名</p></blockquote></li><li><p>申请证书</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">acme.sh  --issue  -d example.com -d *.example.com  --challenge-alias aliasDomainForValidationOnly.com --dns dns_dp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><blockquote><p><a href="https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode">https://github.com/acmesh-official/acme.sh/wiki/DNS-alias-mode</a></p></blockquote><h2 id="安装-FOR-NGINX"><a href="#安装-FOR-NGINX" class="headerlink" title="安装 FOR NGINX"></a>安装 FOR NGINX</h2><h3 id="软连接证书"><a href="#软连接证书" class="headerlink" title="软连接证书"></a>软连接证书</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /etc/nginx<span class="token comment">#ln -s /root/.acme.sh/example.com/certs</span><span class="token function">ln</span> -s /root/.acme.sh/example.com_ecc certs<span class="token comment">## on nginx.conf or conf.d/xx.conf</span>    ssl_certificate certs/fullchain.cer<span class="token punctuation">;</span>    ssl_certificate_key certs/example.com.key<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="默认支持ssl"><a href="#默认支持ssl" class="headerlink" title="默认支持ssl"></a>默认支持ssl</h3><p><code>/etc/nginx/conf.d/default.conf</code> 在 <code>server</code>中增加</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">listen       <span class="token number">443</span> ssl<span class="token punctuation">;</span>ssl_certificate certs/fullchain.cer<span class="token punctuation">;</span>ssl_certificate_key certs/ymicj.com.key<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最终是这样子</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">erver <span class="token punctuation">{</span>    listen       <span class="token number">80</span><span class="token punctuation">;</span>    listen       <span class="token number">443</span> ssl<span class="token punctuation">;</span>    server_name  localhost<span class="token punctuation">;</span>    ssl_certificate certs/fullchain.cer<span class="token punctuation">;</span>    ssl_certificate_key certs/ymicj.com.key<span class="token punctuation">;</span><span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h2><blockquote><p><a href="https://github.com/acmesh-official/acme.sh/wiki/notify">https://github.com/acmesh-official/acme.sh/wiki/notify</a></p></blockquote><blockquote><p><a href="https://juejin.cn/post/7060353630733336589">https://juejin.cn/post/7060353630733336589</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">FEISHU_WEBHOOK</span><span class="token operator">=</span><span class="token string">'https://open.feishu.cn/open-apis/bot/v2/hook/xxxxxxxxxxxxx'</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">FEISHU_KEYWORD</span><span class="token operator">=</span>acmeacme.sh --set-notify --notify-level <span class="token number">3</span>  --notify-mode <span class="token number">0</span> --notify-hook feishu<span class="token comment"># 测试 acme.sh  --set-notify  --notify-hook feishu</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更新后重启nginx"><a href="#更新后重启nginx" class="headerlink" title="更新后重启nginx"></a>更新后重启nginx</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 执行更新 acme.sh --cron</span><span class="token comment"># 自动更新 acme.sh --upgrade --auto-upgrade</span><span class="token comment"># acme.sh --install-cert -d ymipro.com --key-file /etc/nginx/ssl/&lt;域名&gt;/&lt;域名&gt;.key --fullchain-file /etc/nginx/ssl/&lt;域名&gt;/&lt;域名&gt;.crt --reloadcmd "service nginx force-reload"</span>acme.sh --install-cert -d ymipro.com --key-file /root/tmp/ymipro.key --fullchain-file /root/tmp/ymipro.crt --reloadcmd <span class="token string">"service nginx force-reload"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Monitor </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cert </tag>
            
            <tag> acme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="2020/12/03/mysql/"/>
      <url>2020/12/03/mysql/</url>
      
        <content type="html"><![CDATA[<h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a>语句</h2><ul><li><p>时间格式</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select DATE_FORMAT(create_time,'%Y%m%d') as day from tableA;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> db </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka</title>
      <link href="2020/12/03/kafka/"/>
      <url>2020/12/03/kafka/</url>
      
        <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># create topic</span>kafka-topics.sh --create --topic topic002 --partitions <span class="token number">4</span> --zookeeper zookeeper-dev:2181 --replication-factor <span class="token number">2</span><span class="token comment"># list topics</span>kafka-topics.sh --list --zookeeper zookeeper-dev:2181<span class="token comment"># describe topic</span>kafka-topics.sh --describe --topic topic002 --zookeeper zookeeper-dev:2181<span class="token comment"># consume</span>kafka-console-consumer.sh --topic topic002 --bootstrap-server kafka-dev:9092,kafka-dev-2:9092<span class="token comment"># producer</span>kafka-console-producer.sh --topic topic002 --broker-list kafka-dev:9092,kafka-dev-2:9092<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p><a href="https://www.kafkatool.com/download.html">kafkatool</a></p><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2><pre class="line-numbers language-dockerfile" data-language="dockerfile"><code class="language-dockerfile">zookeeper-dev:  container_name: zookeeper-dev  image: wurstmeister/zookeeper  volumes:    - ${ZOOKEEPER_DIR}/data:/data  ports:    - "2181:2181"kafka-dev:  container_name: kafka-dev  image: wurstmeister/kafka  ports:    - "9092:9092"  environment:    KAFKA_ADVERTISED_HOST_NAME: 11.79.118.201    KAFKA_CREATE_TOPICS: "test:1:1"    KAFKA_ZOOKEEPER_CONNECT: "zookeeper-dev:2181"  volumes:    - ${KAFKA_DIR}/kafka-logs:/kafkakafka-dev-2:  container_name: kafka-dev-2  image: wurstmeister/kafka  ports:    - "9093:9092"  environment:    KAFKA_ADVERTISED_HOST_NAME: 11.79.118.201    KAFKA_CREATE_TOPICS: "test:1:1"    KAFKA_ZOOKEEPER_CONNECT: "zookeeper-dev:2181"    KAFKA_ADVERTISED_PORT: 9093  volumes:    - ${KAFKA_DIR}/kafka-logs2:/kafka<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
            <tag> mq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux命令</title>
      <link href="2020/12/01/linux-ming-ling/"/>
      <url>2020/12/01/linux-ming-ling/</url>
      
        <content type="html"><![CDATA[<ul><li><p>如果存在某个文件，则重命名</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span> -s /file <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> /file /file.<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>date</code></p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">date</span> +%F_%T<span class="token number">2020</span>-12-01_15:07:27$ <span class="token function">date</span> +%s<span class="token number">1606806485</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>获取外网<code>ip</code></p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -s ip.cip.cc<span class="token comment"># 获取ip信息</span><span class="token function">curl</span> -s cip.cc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>从文件中查找字符串</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">fgrep</span> <span class="token string">"mytext"</span> textfile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>获取进程<code>aliyun-service</code>的真正文件地址</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ll /proc/<span class="token variable"><span class="token variable">$(</span>pidof aliyun-service<span class="token variable">)</span></span>/exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>ls出来文件rm掉</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">grep</span> -v c <span class="token operator">|</span> <span class="token function">grep</span> -v t <span class="token operator">|</span> <span class="token function">grep</span> -v l <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">rm</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bash </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人笔记</title>
      <link href="2020/12/01/ge-ren-bi-ji/"/>
      <url>2020/12/01/ge-ren-bi-ji/</url>
      
        <content type="html"><![CDATA[<a id="more"></a> <h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><ul><li><p><a href="https://blog.csdn.net/azhuyangjun/article/details/86976568">MySQL 分库分表</a></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">## only for myisamCREATE TABLE IF NOT EXISTS `user1` (`id` int NOT NULL AUTO_INCREMENT,`name` varchar(50) DEFAULT '',`sex` int(1) NOT NULL DEFAULT '0',PRIMARY KEY (`id`)) ENGINE=MyISAM AUTO_INCREMENT=1;CREATE TABLE IF NOT EXISTS `user2` (`id` int NOT NULL AUTO_INCREMENT,`name` varchar(50) DEFAULT '',`sex` int(1) NOT NULL DEFAULT '0',PRIMARY KEY (`id`)) ENGINE=MyISAM AUTO_INCREMENT=1;CREATE TABLE IF NOT EXISTS `alluser` (`id` int NOT NULL AUTO_INCREMENT,`name` varchar(50) DEFAULT '',`sex` int(1) NOT NULL DEFAULT '0',INDEX(id)) ENGINE=MERGE UNION=(user1,user2) INSERT_METHOD=LAST AUTO_INCREMENT=1;INSERT INTO `user1`(`name`, `sex`) VALUES('张颖', 0);INSERT INTO `user2`(`name`, `sex`) VALUES('tank', 1);INSERT INTO `alluser`(`name`, `sex`) VALUES('tank2', 3);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p><a href="https://blog.csdn.net/tjcyjd/article/details/11194489">深入解析MySQL分区（Partition）功能</a></p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">CREATE TABLE part_tab ( c1 int default NULL, c2 varchar(30) default NULL, c3 date default NULL) engine=myisam PARTITION BY RANGE (year(c3)) (PARTITION p0 VALUES LESS THAN (1995),PARTITION p1 VALUES LESS THAN (1996) , PARTITION p2 VALUES LESS THAN (1997) ,PARTITION p3 VALUES LESS THAN (1998) , PARTITION p4 VALUES LESS THAN (1999) ,PARTITION p5 VALUES LESS THAN (2000) , PARTITION p6 VALUES LESS THAN (2001) ,PARTITION p7 VALUES LESS THAN (2002) , PARTITION p8 VALUES LESS THAN (2003) ,PARTITION p9 VALUES LESS THAN (2004) , PARTITION p10 VALUES LESS THAN (2010),PARTITION p11 VALUES LESS THAN MAXVALUE ); CREATE TABLE users (       uid INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,       name VARCHAR(30) NOT NULL DEFAULT '',       email VARCHAR(30) NOT NULL DEFAULT '')PARTITION BY RANGE (uid) (       PARTITION p0 VALUES LESS THAN (3000000)       DATA DIRECTORY = '/data0/data'       INDEX DIRECTORY = '/data1/idx',        PARTITION p1 VALUES LESS THAN (6000000)       DATA DIRECTORY = '/data2/data'       INDEX DIRECTORY = '/data3/idx',        PARTITION p2 VALUES LESS THAN (9000000)       DATA DIRECTORY = '/data4/data'       INDEX DIRECTORY = '/data5/idx',        PARTITION p3 VALUES LESS THAN MAXVALUE     DATA DIRECTORY = '/data6/data'        INDEX DIRECTORY = '/data7/idx');    CREATE TABLE users (     uid INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,     name VARCHAR(30) NOT NULL DEFAULT '',     email VARCHAR(30) NOT NULL DEFAULT '')PARTITION BY HASH (uid) PARTITIONS 4 (     PARTITION p0     DATA DIRECTORY = '/data0/data'     INDEX DIRECTORY = '/data1/idx',      PARTITION p1     DATA DIRECTORY = '/data2/data'     INDEX DIRECTORY = '/data3/idx',      PARTITION p2     DATA DIRECTORY = '/data4/data'     INDEX DIRECTORY = '/data5/idx',      PARTITION p3     DATA DIRECTORY = '/data6/data'     INDEX DIRECTORY = '/data7/idx');<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Patdz </category>
          
      </categories>
      
      
        <tags>
            
            <tag> personal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openssl</title>
      <link href="2020/12/01/openssl/"/>
      <url>2020/12/01/openssl/</url>
      
        <content type="html"><![CDATA[<ul><li><p>字符串<code>sha256</code>加密</p>  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> -n <span class="token string">"stw"</span>  <span class="token operator">|</span> openssl sha256<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> openssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>screen命令使用</title>
      <link href="2020/12/01/screen-ming-ling-shi-yong/"/>
      <url>2020/12/01/screen-ming-ling-shi-yong/</url>
      
        <content type="html"><![CDATA[<h2 id="screen-使用"><a href="#screen-使用" class="headerlink" title="screen 使用"></a><code>screen</code> 使用</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 创建session</span><span class="token function">screen</span> -S zjz<span class="token comment"># 查看所有session</span><span class="token function">screen</span> -ls<span class="token comment"># 重新进入session</span><span class="token function">screen</span> -r zjz<span class="token comment"># 根据名字destroy</span><span class="token function">screen</span> -S zjz -X quit<span class="token comment"># session中退出  [按着`Ctrl+a`再按`d`]</span>Ctrl+a d<span class="token comment"># session中销毁当前</span><span class="token builtin class-name">exit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> screen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安家了</title>
      <link href="2020/12/01/an-jia-liao/"/>
      <url>2020/12/01/an-jia-liao/</url>
      
        <content type="html"><![CDATA[<ol><li><p><a href="https://github.com/">Github</a>注册账户 - 这里为<code>patdz</code></p></li><li><p>本地安装<code>git</code> <code>npm</code>, 创建<code>ssh key</code>,并关联<code>github</code>上的账户</p></li><li><p>登录账户新建<code>repository</code>这里名字为<code>patdz.github.io</code></p><ul><li>注意：是在用户名<code>patdz</code>下创建名字为<code>patdz.github.io</code>的<code>repository</code>,格式为<code>${用户名}.github.io</code></li></ul></li><li><p>本地安装<code>hexo</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>创建项目</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> blog<span class="token builtin class-name">cd</span> bloghexo init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>更新<code>hexo</code>博客代码</p><ul><li>修改 <code>patdz.github.io</code> 目录的 <code>_config.yml</code>, 内容替换成自己的仓库地址  <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 修改 title 等自定义内容</span><span class="token comment"># </span><span class="token comment"># 修改deploy相关</span>deploy:  type: <span class="token function">git</span>  repository: git@github.com:patdz/patdz.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>新增，发布文章</p><ol><li>安装插件 <code>npm i hexo-deployer-git</code></li><li>新增文章 <code>hexo new post "安家了"</code></li><li>把本文章内容复制到 <code>source\_posts</code>下的<code>安家了.md</code>文件中</li><li>测试，发布 <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo ghexo shexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>发布之后等一段时间<code>几分钟到1小时?</code>，在<code>github.com</code>上打开<code>repository</code>的<code>settings</code>页面，选择<code>Options</code>往下拉，能在<code>GitHub Pages</code>看到地址，这里是<code>https://patdz.github.io/</code></p></blockquote></li></ol></li><li><p>源码上传 - 首先创建仓库 <code>src.patdz.github.io</code></p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit -m <span class="token string">"init"</span><span class="token function">git</span> branch -M main<span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:patdz/src.patdz.github.io.git<span class="token function">git</span> push -u origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>主题、设置 - <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>htuchuang</title>
      <link href="1999/11/17/htuchuang/"/>
      <url>1999/11/17/htuchuang/</url>
      
        <content type="html"><![CDATA[<p><img src="/1999/11/17/htuchuang/customer.png"><br><img src="/1999/11/17/htuchuang/servicer.png"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
